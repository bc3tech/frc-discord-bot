// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Common.Tba.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Match_Score_Breakdown_2023_Alliance : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The activationBonusAchieved property</summary>
        public bool? ActivationBonusAchieved { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The adjustPoints property</summary>
        public int? AdjustPoints { get; set; }
        /// <summary>The autoBridgeState property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoBridgeState? AutoBridgeState { get; set; }
        /// <summary>The autoChargeStationPoints property</summary>
        public int? AutoChargeStationPoints { get; set; }
        /// <summary>The autoChargeStationRobot1 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot1? AutoChargeStationRobot1 { get; set; }
        /// <summary>The autoChargeStationRobot2 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot2? AutoChargeStationRobot2 { get; set; }
        /// <summary>The autoChargeStationRobot3 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot3? AutoChargeStationRobot3 { get; set; }
        /// <summary>The autoCommunity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoCommunity? AutoCommunity { get; set; }
#nullable restore
#else
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoCommunity AutoCommunity { get; set; }
#endif
        /// <summary>The autoDocked property</summary>
        public bool? AutoDocked { get; set; }
        /// <summary>The autoGamePieceCount property</summary>
        public int? AutoGamePieceCount { get; set; }
        /// <summary>The autoGamePiecePoints property</summary>
        public int? AutoGamePiecePoints { get; set; }
        /// <summary>The autoMobilityPoints property</summary>
        public int? AutoMobilityPoints { get; set; }
        /// <summary>The autoPoints property</summary>
        public int? AutoPoints { get; set; }
        /// <summary>The coopertitionCriteriaMet property</summary>
        public bool? CoopertitionCriteriaMet { get; set; }
        /// <summary>The coopGamePieceCount property</summary>
        public int? CoopGamePieceCount { get; set; }
        /// <summary>The endGameBridgeState property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameBridgeState? EndGameBridgeState { get; set; }
        /// <summary>The endGameChargeStationPoints property</summary>
        public int? EndGameChargeStationPoints { get; set; }
        /// <summary>The endGameChargeStationRobot1 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot1? EndGameChargeStationRobot1 { get; set; }
        /// <summary>The endGameChargeStationRobot2 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot2? EndGameChargeStationRobot2 { get; set; }
        /// <summary>The endGameChargeStationRobot3 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot3? EndGameChargeStationRobot3 { get; set; }
        /// <summary>The endGameParkPoints property</summary>
        public int? EndGameParkPoints { get; set; }
        /// <summary>The extraGamePieceCount property</summary>
        public int? ExtraGamePieceCount { get; set; }
        /// <summary>The foulCount property</summary>
        public int? FoulCount { get; set; }
        /// <summary>The foulPoints property</summary>
        public int? FoulPoints { get; set; }
        /// <summary>The linkPoints property</summary>
        public int? LinkPoints { get; set; }
        /// <summary>The links property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_links>? Links { get; set; }
#nullable restore
#else
        public List<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_links> Links { get; set; }
#endif
        /// <summary>The mobilityRobot1 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot1? MobilityRobot1 { get; set; }
        /// <summary>The mobilityRobot2 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot2? MobilityRobot2 { get; set; }
        /// <summary>The mobilityRobot3 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot3? MobilityRobot3 { get; set; }
        /// <summary>The rp property</summary>
        public int? Rp { get; set; }
        /// <summary>The sustainabilityBonusAchieved property</summary>
        public bool? SustainabilityBonusAchieved { get; set; }
        /// <summary>The techFoulCount property</summary>
        public int? TechFoulCount { get; set; }
        /// <summary>The teleopCommunity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_teleopCommunity? TeleopCommunity { get; set; }
#nullable restore
#else
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_teleopCommunity TeleopCommunity { get; set; }
#endif
        /// <summary>The teleopGamePieceCount property</summary>
        public int? TeleopGamePieceCount { get; set; }
        /// <summary>The teleopGamePiecePoints property</summary>
        public int? TeleopGamePiecePoints { get; set; }
        /// <summary>The teleopPoints property</summary>
        public int? TeleopPoints { get; set; }
        /// <summary>The totalChargeStationPoints property</summary>
        public int? TotalChargeStationPoints { get; set; }
        /// <summary>The totalPoints property</summary>
        public int? TotalPoints { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance"/> and sets the default values.
        /// </summary>
        public Match_Score_Breakdown_2023_Alliance()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "activationBonusAchieved", n => { ActivationBonusAchieved = n.GetBoolValue(); } },
                { "adjustPoints", n => { AdjustPoints = n.GetIntValue(); } },
                { "autoBridgeState", n => { AutoBridgeState = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoBridgeState>(); } },
                { "autoChargeStationPoints", n => { AutoChargeStationPoints = n.GetIntValue(); } },
                { "autoChargeStationRobot1", n => { AutoChargeStationRobot1 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot1>(); } },
                { "autoChargeStationRobot2", n => { AutoChargeStationRobot2 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot2>(); } },
                { "autoChargeStationRobot3", n => { AutoChargeStationRobot3 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot3>(); } },
                { "autoCommunity", n => { AutoCommunity = n.GetObjectValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoCommunity>(global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoCommunity.CreateFromDiscriminatorValue); } },
                { "autoDocked", n => { AutoDocked = n.GetBoolValue(); } },
                { "autoGamePieceCount", n => { AutoGamePieceCount = n.GetIntValue(); } },
                { "autoGamePiecePoints", n => { AutoGamePiecePoints = n.GetIntValue(); } },
                { "autoMobilityPoints", n => { AutoMobilityPoints = n.GetIntValue(); } },
                { "autoPoints", n => { AutoPoints = n.GetIntValue(); } },
                { "coopGamePieceCount", n => { CoopGamePieceCount = n.GetIntValue(); } },
                { "coopertitionCriteriaMet", n => { CoopertitionCriteriaMet = n.GetBoolValue(); } },
                { "endGameBridgeState", n => { EndGameBridgeState = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameBridgeState>(); } },
                { "endGameChargeStationPoints", n => { EndGameChargeStationPoints = n.GetIntValue(); } },
                { "endGameChargeStationRobot1", n => { EndGameChargeStationRobot1 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot1>(); } },
                { "endGameChargeStationRobot2", n => { EndGameChargeStationRobot2 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot2>(); } },
                { "endGameChargeStationRobot3", n => { EndGameChargeStationRobot3 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot3>(); } },
                { "endGameParkPoints", n => { EndGameParkPoints = n.GetIntValue(); } },
                { "extraGamePieceCount", n => { ExtraGamePieceCount = n.GetIntValue(); } },
                { "foulCount", n => { FoulCount = n.GetIntValue(); } },
                { "foulPoints", n => { FoulPoints = n.GetIntValue(); } },
                { "linkPoints", n => { LinkPoints = n.GetIntValue(); } },
                { "links", n => { Links = n.GetCollectionOfObjectValues<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_links>(global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_links.CreateFromDiscriminatorValue)?.AsList(); } },
                { "mobilityRobot1", n => { MobilityRobot1 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot1>(); } },
                { "mobilityRobot2", n => { MobilityRobot2 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot2>(); } },
                { "mobilityRobot3", n => { MobilityRobot3 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot3>(); } },
                { "rp", n => { Rp = n.GetIntValue(); } },
                { "sustainabilityBonusAchieved", n => { SustainabilityBonusAchieved = n.GetBoolValue(); } },
                { "techFoulCount", n => { TechFoulCount = n.GetIntValue(); } },
                { "teleopCommunity", n => { TeleopCommunity = n.GetObjectValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_teleopCommunity>(global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_teleopCommunity.CreateFromDiscriminatorValue); } },
                { "teleopGamePieceCount", n => { TeleopGamePieceCount = n.GetIntValue(); } },
                { "teleopGamePiecePoints", n => { TeleopGamePiecePoints = n.GetIntValue(); } },
                { "teleopPoints", n => { TeleopPoints = n.GetIntValue(); } },
                { "totalChargeStationPoints", n => { TotalChargeStationPoints = n.GetIntValue(); } },
                { "totalPoints", n => { TotalPoints = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("activationBonusAchieved", ActivationBonusAchieved);
            writer.WriteIntValue("adjustPoints", AdjustPoints);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoBridgeState>("autoBridgeState", AutoBridgeState);
            writer.WriteIntValue("autoChargeStationPoints", AutoChargeStationPoints);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot1>("autoChargeStationRobot1", AutoChargeStationRobot1);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot2>("autoChargeStationRobot2", AutoChargeStationRobot2);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoChargeStationRobot3>("autoChargeStationRobot3", AutoChargeStationRobot3);
            writer.WriteObjectValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_autoCommunity>("autoCommunity", AutoCommunity);
            writer.WriteBoolValue("autoDocked", AutoDocked);
            writer.WriteIntValue("autoGamePieceCount", AutoGamePieceCount);
            writer.WriteIntValue("autoGamePiecePoints", AutoGamePiecePoints);
            writer.WriteIntValue("autoMobilityPoints", AutoMobilityPoints);
            writer.WriteIntValue("autoPoints", AutoPoints);
            writer.WriteBoolValue("coopertitionCriteriaMet", CoopertitionCriteriaMet);
            writer.WriteIntValue("coopGamePieceCount", CoopGamePieceCount);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameBridgeState>("endGameBridgeState", EndGameBridgeState);
            writer.WriteIntValue("endGameChargeStationPoints", EndGameChargeStationPoints);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot1>("endGameChargeStationRobot1", EndGameChargeStationRobot1);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot2>("endGameChargeStationRobot2", EndGameChargeStationRobot2);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_endGameChargeStationRobot3>("endGameChargeStationRobot3", EndGameChargeStationRobot3);
            writer.WriteIntValue("endGameParkPoints", EndGameParkPoints);
            writer.WriteIntValue("extraGamePieceCount", ExtraGamePieceCount);
            writer.WriteIntValue("foulCount", FoulCount);
            writer.WriteIntValue("foulPoints", FoulPoints);
            writer.WriteIntValue("linkPoints", LinkPoints);
            writer.WriteCollectionOfObjectValues<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_links>("links", Links);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot1>("mobilityRobot1", MobilityRobot1);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot2>("mobilityRobot2", MobilityRobot2);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_mobilityRobot3>("mobilityRobot3", MobilityRobot3);
            writer.WriteIntValue("rp", Rp);
            writer.WriteBoolValue("sustainabilityBonusAchieved", SustainabilityBonusAchieved);
            writer.WriteIntValue("techFoulCount", TechFoulCount);
            writer.WriteObjectValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2023_Alliance_teleopCommunity>("teleopCommunity", TeleopCommunity);
            writer.WriteIntValue("teleopGamePieceCount", TeleopGamePieceCount);
            writer.WriteIntValue("teleopGamePiecePoints", TeleopGamePiecePoints);
            writer.WriteIntValue("teleopPoints", TeleopPoints);
            writer.WriteIntValue("totalChargeStationPoints", TotalChargeStationPoints);
            writer.WriteIntValue("totalPoints", TotalPoints);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
