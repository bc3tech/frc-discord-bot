// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Common.Tba.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Match_Score_Breakdown_2022_Alliance : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The adjustPoints property</summary>
        public int? AdjustPoints { get; set; }
        /// <summary>The autoCargoLowerBlue property</summary>
        public int? AutoCargoLowerBlue { get; set; }
        /// <summary>The autoCargoLowerFar property</summary>
        public int? AutoCargoLowerFar { get; set; }
        /// <summary>The autoCargoLowerNear property</summary>
        public int? AutoCargoLowerNear { get; set; }
        /// <summary>The autoCargoLowerRed property</summary>
        public int? AutoCargoLowerRed { get; set; }
        /// <summary>The autoCargoPoints property</summary>
        public int? AutoCargoPoints { get; set; }
        /// <summary>The autoCargoTotal property</summary>
        public int? AutoCargoTotal { get; set; }
        /// <summary>The autoCargoUpperBlue property</summary>
        public int? AutoCargoUpperBlue { get; set; }
        /// <summary>The autoCargoUpperFar property</summary>
        public int? AutoCargoUpperFar { get; set; }
        /// <summary>The autoCargoUpperNear property</summary>
        public int? AutoCargoUpperNear { get; set; }
        /// <summary>The autoCargoUpperRed property</summary>
        public int? AutoCargoUpperRed { get; set; }
        /// <summary>The autoPoints property</summary>
        public int? AutoPoints { get; set; }
        /// <summary>The autoTaxiPoints property</summary>
        public int? AutoTaxiPoints { get; set; }
        /// <summary>The cargoBonusRankingPoint property</summary>
        public bool? CargoBonusRankingPoint { get; set; }
        /// <summary>The endgamePoints property</summary>
        public int? EndgamePoints { get; set; }
        /// <summary>The endgameRobot1 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot1? EndgameRobot1 { get; set; }
        /// <summary>The endgameRobot2 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot2? EndgameRobot2 { get; set; }
        /// <summary>The endgameRobot3 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot3? EndgameRobot3 { get; set; }
        /// <summary>The foulCount property</summary>
        public int? FoulCount { get; set; }
        /// <summary>The foulPoints property</summary>
        public int? FoulPoints { get; set; }
        /// <summary>The hangarBonusRankingPoint property</summary>
        public bool? HangarBonusRankingPoint { get; set; }
        /// <summary>The matchCargoTotal property</summary>
        public int? MatchCargoTotal { get; set; }
        /// <summary>The quintetAchieved property</summary>
        public bool? QuintetAchieved { get; set; }
        /// <summary>The rp property</summary>
        public int? Rp { get; set; }
        /// <summary>The taxiRobot1 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot1? TaxiRobot1 { get; set; }
        /// <summary>The taxiRobot2 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot2? TaxiRobot2 { get; set; }
        /// <summary>The taxiRobot3 property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot3? TaxiRobot3 { get; set; }
        /// <summary>The techFoulCount property</summary>
        public int? TechFoulCount { get; set; }
        /// <summary>The teleopCargoLowerBlue property</summary>
        public int? TeleopCargoLowerBlue { get; set; }
        /// <summary>The teleopCargoLowerFar property</summary>
        public int? TeleopCargoLowerFar { get; set; }
        /// <summary>The teleopCargoLowerNear property</summary>
        public int? TeleopCargoLowerNear { get; set; }
        /// <summary>The teleopCargoLowerRed property</summary>
        public int? TeleopCargoLowerRed { get; set; }
        /// <summary>The teleopCargoPoints property</summary>
        public int? TeleopCargoPoints { get; set; }
        /// <summary>The teleopCargoTotal property</summary>
        public int? TeleopCargoTotal { get; set; }
        /// <summary>The teleopCargoUpperBlue property</summary>
        public int? TeleopCargoUpperBlue { get; set; }
        /// <summary>The teleopCargoUpperFar property</summary>
        public int? TeleopCargoUpperFar { get; set; }
        /// <summary>The teleopCargoUpperNear property</summary>
        public int? TeleopCargoUpperNear { get; set; }
        /// <summary>The teleopCargoUpperRed property</summary>
        public int? TeleopCargoUpperRed { get; set; }
        /// <summary>The teleopPoints property</summary>
        public int? TeleopPoints { get; set; }
        /// <summary>The totalPoints property</summary>
        public int? TotalPoints { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance"/> and sets the default values.
        /// </summary>
        public Match_Score_Breakdown_2022_Alliance()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "adjustPoints", n => { AdjustPoints = n.GetIntValue(); } },
                { "autoCargoLowerBlue", n => { AutoCargoLowerBlue = n.GetIntValue(); } },
                { "autoCargoLowerFar", n => { AutoCargoLowerFar = n.GetIntValue(); } },
                { "autoCargoLowerNear", n => { AutoCargoLowerNear = n.GetIntValue(); } },
                { "autoCargoLowerRed", n => { AutoCargoLowerRed = n.GetIntValue(); } },
                { "autoCargoPoints", n => { AutoCargoPoints = n.GetIntValue(); } },
                { "autoCargoTotal", n => { AutoCargoTotal = n.GetIntValue(); } },
                { "autoCargoUpperBlue", n => { AutoCargoUpperBlue = n.GetIntValue(); } },
                { "autoCargoUpperFar", n => { AutoCargoUpperFar = n.GetIntValue(); } },
                { "autoCargoUpperNear", n => { AutoCargoUpperNear = n.GetIntValue(); } },
                { "autoCargoUpperRed", n => { AutoCargoUpperRed = n.GetIntValue(); } },
                { "autoPoints", n => { AutoPoints = n.GetIntValue(); } },
                { "autoTaxiPoints", n => { AutoTaxiPoints = n.GetIntValue(); } },
                { "cargoBonusRankingPoint", n => { CargoBonusRankingPoint = n.GetBoolValue(); } },
                { "endgamePoints", n => { EndgamePoints = n.GetIntValue(); } },
                { "endgameRobot1", n => { EndgameRobot1 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot1>(); } },
                { "endgameRobot2", n => { EndgameRobot2 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot2>(); } },
                { "endgameRobot3", n => { EndgameRobot3 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot3>(); } },
                { "foulCount", n => { FoulCount = n.GetIntValue(); } },
                { "foulPoints", n => { FoulPoints = n.GetIntValue(); } },
                { "hangarBonusRankingPoint", n => { HangarBonusRankingPoint = n.GetBoolValue(); } },
                { "matchCargoTotal", n => { MatchCargoTotal = n.GetIntValue(); } },
                { "quintetAchieved", n => { QuintetAchieved = n.GetBoolValue(); } },
                { "rp", n => { Rp = n.GetIntValue(); } },
                { "taxiRobot1", n => { TaxiRobot1 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot1>(); } },
                { "taxiRobot2", n => { TaxiRobot2 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot2>(); } },
                { "taxiRobot3", n => { TaxiRobot3 = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot3>(); } },
                { "techFoulCount", n => { TechFoulCount = n.GetIntValue(); } },
                { "teleopCargoLowerBlue", n => { TeleopCargoLowerBlue = n.GetIntValue(); } },
                { "teleopCargoLowerFar", n => { TeleopCargoLowerFar = n.GetIntValue(); } },
                { "teleopCargoLowerNear", n => { TeleopCargoLowerNear = n.GetIntValue(); } },
                { "teleopCargoLowerRed", n => { TeleopCargoLowerRed = n.GetIntValue(); } },
                { "teleopCargoPoints", n => { TeleopCargoPoints = n.GetIntValue(); } },
                { "teleopCargoTotal", n => { TeleopCargoTotal = n.GetIntValue(); } },
                { "teleopCargoUpperBlue", n => { TeleopCargoUpperBlue = n.GetIntValue(); } },
                { "teleopCargoUpperFar", n => { TeleopCargoUpperFar = n.GetIntValue(); } },
                { "teleopCargoUpperNear", n => { TeleopCargoUpperNear = n.GetIntValue(); } },
                { "teleopCargoUpperRed", n => { TeleopCargoUpperRed = n.GetIntValue(); } },
                { "teleopPoints", n => { TeleopPoints = n.GetIntValue(); } },
                { "totalPoints", n => { TotalPoints = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("adjustPoints", AdjustPoints);
            writer.WriteIntValue("autoCargoLowerBlue", AutoCargoLowerBlue);
            writer.WriteIntValue("autoCargoLowerFar", AutoCargoLowerFar);
            writer.WriteIntValue("autoCargoLowerNear", AutoCargoLowerNear);
            writer.WriteIntValue("autoCargoLowerRed", AutoCargoLowerRed);
            writer.WriteIntValue("autoCargoPoints", AutoCargoPoints);
            writer.WriteIntValue("autoCargoTotal", AutoCargoTotal);
            writer.WriteIntValue("autoCargoUpperBlue", AutoCargoUpperBlue);
            writer.WriteIntValue("autoCargoUpperFar", AutoCargoUpperFar);
            writer.WriteIntValue("autoCargoUpperNear", AutoCargoUpperNear);
            writer.WriteIntValue("autoCargoUpperRed", AutoCargoUpperRed);
            writer.WriteIntValue("autoPoints", AutoPoints);
            writer.WriteIntValue("autoTaxiPoints", AutoTaxiPoints);
            writer.WriteBoolValue("cargoBonusRankingPoint", CargoBonusRankingPoint);
            writer.WriteIntValue("endgamePoints", EndgamePoints);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot1>("endgameRobot1", EndgameRobot1);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot2>("endgameRobot2", EndgameRobot2);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_endgameRobot3>("endgameRobot3", EndgameRobot3);
            writer.WriteIntValue("foulCount", FoulCount);
            writer.WriteIntValue("foulPoints", FoulPoints);
            writer.WriteBoolValue("hangarBonusRankingPoint", HangarBonusRankingPoint);
            writer.WriteIntValue("matchCargoTotal", MatchCargoTotal);
            writer.WriteBoolValue("quintetAchieved", QuintetAchieved);
            writer.WriteIntValue("rp", Rp);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot1>("taxiRobot1", TaxiRobot1);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot2>("taxiRobot2", TaxiRobot2);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2022_Alliance_taxiRobot3>("taxiRobot3", TaxiRobot3);
            writer.WriteIntValue("techFoulCount", TechFoulCount);
            writer.WriteIntValue("teleopCargoLowerBlue", TeleopCargoLowerBlue);
            writer.WriteIntValue("teleopCargoLowerFar", TeleopCargoLowerFar);
            writer.WriteIntValue("teleopCargoLowerNear", TeleopCargoLowerNear);
            writer.WriteIntValue("teleopCargoLowerRed", TeleopCargoLowerRed);
            writer.WriteIntValue("teleopCargoPoints", TeleopCargoPoints);
            writer.WriteIntValue("teleopCargoTotal", TeleopCargoTotal);
            writer.WriteIntValue("teleopCargoUpperBlue", TeleopCargoUpperBlue);
            writer.WriteIntValue("teleopCargoUpperFar", TeleopCargoUpperFar);
            writer.WriteIntValue("teleopCargoUpperNear", TeleopCargoUpperNear);
            writer.WriteIntValue("teleopCargoUpperRed", TeleopCargoUpperRed);
            writer.WriteIntValue("teleopPoints", TeleopPoints);
            writer.WriteIntValue("totalPoints", TotalPoints);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
