// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Common.Tba.Api.Models
{
    /// <summary>
    /// Playoff status for this team, may be null if the team did not make playoffs, or playoffs have not begun.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Team_Event_Status_playoff : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A Win-Loss-Tie record for a team, or an alliance.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Common.Tba.Api.Models.WLT_Record? CurrentLevelRecord { get; set; }
#nullable restore
#else
        public global::Common.Tba.Api.Models.WLT_Record CurrentLevelRecord { get; set; }
#endif
        /// <summary>The highest playoff level the team reached.</summary>
        public global::Common.Tba.Api.Models.Team_Event_Status_playoff_level? Level { get; set; }
        /// <summary>The average match score during playoffs. Year specific. May be null if not relevant for a given year.</summary>
        public int? PlayoffAverage { get; set; }
        /// <summary>A Win-Loss-Tie record for a team, or an alliance.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Common.Tba.Api.Models.WLT_Record? Record { get; set; }
#nullable restore
#else
        public global::Common.Tba.Api.Models.WLT_Record Record { get; set; }
#endif
        /// <summary>Current competition status for the playoffs.</summary>
        public global::Common.Tba.Api.Models.Team_Event_Status_playoff_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Common.Tba.Api.Models.Team_Event_Status_playoff"/> and sets the default values.
        /// </summary>
        public Team_Event_Status_playoff()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Common.Tba.Api.Models.Team_Event_Status_playoff"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Common.Tba.Api.Models.Team_Event_Status_playoff CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Common.Tba.Api.Models.Team_Event_Status_playoff();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "current_level_record", n => { CurrentLevelRecord = n.GetObjectValue<global::Common.Tba.Api.Models.WLT_Record>(global::Common.Tba.Api.Models.WLT_Record.CreateFromDiscriminatorValue); } },
                { "level", n => { Level = n.GetEnumValue<global::Common.Tba.Api.Models.Team_Event_Status_playoff_level>(); } },
                { "playoff_average", n => { PlayoffAverage = n.GetIntValue(); } },
                { "record", n => { Record = n.GetObjectValue<global::Common.Tba.Api.Models.WLT_Record>(global::Common.Tba.Api.Models.WLT_Record.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Common.Tba.Api.Models.Team_Event_Status_playoff_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Common.Tba.Api.Models.WLT_Record>("current_level_record", CurrentLevelRecord);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Team_Event_Status_playoff_level>("level", Level);
            writer.WriteIntValue("playoff_average", PlayoffAverage);
            writer.WriteObjectValue<global::Common.Tba.Api.Models.WLT_Record>("record", Record);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Team_Event_Status_playoff_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
