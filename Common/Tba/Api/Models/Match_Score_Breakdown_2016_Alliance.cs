// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Common.Tba.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Match_Score_Breakdown_2016_Alliance : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The adjustPoints property</summary>
        public int? AdjustPoints { get; set; }
        /// <summary>The autoBoulderPoints property</summary>
        public int? AutoBoulderPoints { get; set; }
        /// <summary>The autoBouldersHigh property</summary>
        public int? AutoBouldersHigh { get; set; }
        /// <summary>The autoBouldersLow property</summary>
        public int? AutoBouldersLow { get; set; }
        /// <summary>The autoCrossingPoints property</summary>
        public int? AutoCrossingPoints { get; set; }
        /// <summary>The autoPoints property</summary>
        public int? AutoPoints { get; set; }
        /// <summary>The autoReachPoints property</summary>
        public int? AutoReachPoints { get; set; }
        /// <summary>The breachPoints property</summary>
        public int? BreachPoints { get; set; }
        /// <summary>The capturePoints property</summary>
        public int? CapturePoints { get; set; }
        /// <summary>The foulCount property</summary>
        public int? FoulCount { get; set; }
        /// <summary>The foulPoints property</summary>
        public int? FoulPoints { get; set; }
        /// <summary>The position1crossings property</summary>
        public int? Position1crossings { get; set; }
        /// <summary>The position2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position2 { get; set; }
#nullable restore
#else
        public string Position2 { get; set; }
#endif
        /// <summary>The position2crossings property</summary>
        public int? Position2crossings { get; set; }
        /// <summary>The position3 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position3 { get; set; }
#nullable restore
#else
        public string Position3 { get; set; }
#endif
        /// <summary>The position3crossings property</summary>
        public int? Position3crossings { get; set; }
        /// <summary>The position4 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position4 { get; set; }
#nullable restore
#else
        public string Position4 { get; set; }
#endif
        /// <summary>The position4crossings property</summary>
        public int? Position4crossings { get; set; }
        /// <summary>The position5 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position5 { get; set; }
#nullable restore
#else
        public string Position5 { get; set; }
#endif
        /// <summary>The position5crossings property</summary>
        public int? Position5crossings { get; set; }
        /// <summary>The robot1Auto property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot1Auto? Robot1Auto { get; set; }
        /// <summary>The robot2Auto property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot2Auto? Robot2Auto { get; set; }
        /// <summary>The robot3Auto property</summary>
        public global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot3Auto? Robot3Auto { get; set; }
        /// <summary>The techFoulCount property</summary>
        public int? TechFoulCount { get; set; }
        /// <summary>The teleopBoulderPoints property</summary>
        public int? TeleopBoulderPoints { get; set; }
        /// <summary>The teleopBouldersHigh property</summary>
        public int? TeleopBouldersHigh { get; set; }
        /// <summary>The teleopBouldersLow property</summary>
        public int? TeleopBouldersLow { get; set; }
        /// <summary>The teleopChallengePoints property</summary>
        public int? TeleopChallengePoints { get; set; }
        /// <summary>The teleopCrossingPoints property</summary>
        public int? TeleopCrossingPoints { get; set; }
        /// <summary>The teleopDefensesBreached property</summary>
        public bool? TeleopDefensesBreached { get; set; }
        /// <summary>The teleopPoints property</summary>
        public int? TeleopPoints { get; set; }
        /// <summary>The teleopScalePoints property</summary>
        public int? TeleopScalePoints { get; set; }
        /// <summary>The teleopTowerCaptured property</summary>
        public int? TeleopTowerCaptured { get; set; }
        /// <summary>The totalPoints property</summary>
        public int? TotalPoints { get; set; }
        /// <summary>The towerEndStrength property</summary>
        public int? TowerEndStrength { get; set; }
        /// <summary>The towerFaceA property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TowerFaceA { get; set; }
#nullable restore
#else
        public string TowerFaceA { get; set; }
#endif
        /// <summary>The towerFaceB property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TowerFaceB { get; set; }
#nullable restore
#else
        public string TowerFaceB { get; set; }
#endif
        /// <summary>The towerFaceC property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TowerFaceC { get; set; }
#nullable restore
#else
        public string TowerFaceC { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance"/> and sets the default values.
        /// </summary>
        public Match_Score_Breakdown_2016_Alliance()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "adjustPoints", n => { AdjustPoints = n.GetIntValue(); } },
                { "autoBoulderPoints", n => { AutoBoulderPoints = n.GetIntValue(); } },
                { "autoBouldersHigh", n => { AutoBouldersHigh = n.GetIntValue(); } },
                { "autoBouldersLow", n => { AutoBouldersLow = n.GetIntValue(); } },
                { "autoCrossingPoints", n => { AutoCrossingPoints = n.GetIntValue(); } },
                { "autoPoints", n => { AutoPoints = n.GetIntValue(); } },
                { "autoReachPoints", n => { AutoReachPoints = n.GetIntValue(); } },
                { "breachPoints", n => { BreachPoints = n.GetIntValue(); } },
                { "capturePoints", n => { CapturePoints = n.GetIntValue(); } },
                { "foulCount", n => { FoulCount = n.GetIntValue(); } },
                { "foulPoints", n => { FoulPoints = n.GetIntValue(); } },
                { "position1crossings", n => { Position1crossings = n.GetIntValue(); } },
                { "position2", n => { Position2 = n.GetStringValue(); } },
                { "position2crossings", n => { Position2crossings = n.GetIntValue(); } },
                { "position3", n => { Position3 = n.GetStringValue(); } },
                { "position3crossings", n => { Position3crossings = n.GetIntValue(); } },
                { "position4", n => { Position4 = n.GetStringValue(); } },
                { "position4crossings", n => { Position4crossings = n.GetIntValue(); } },
                { "position5", n => { Position5 = n.GetStringValue(); } },
                { "position5crossings", n => { Position5crossings = n.GetIntValue(); } },
                { "robot1Auto", n => { Robot1Auto = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot1Auto>(); } },
                { "robot2Auto", n => { Robot2Auto = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot2Auto>(); } },
                { "robot3Auto", n => { Robot3Auto = n.GetEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot3Auto>(); } },
                { "techFoulCount", n => { TechFoulCount = n.GetIntValue(); } },
                { "teleopBoulderPoints", n => { TeleopBoulderPoints = n.GetIntValue(); } },
                { "teleopBouldersHigh", n => { TeleopBouldersHigh = n.GetIntValue(); } },
                { "teleopBouldersLow", n => { TeleopBouldersLow = n.GetIntValue(); } },
                { "teleopChallengePoints", n => { TeleopChallengePoints = n.GetIntValue(); } },
                { "teleopCrossingPoints", n => { TeleopCrossingPoints = n.GetIntValue(); } },
                { "teleopDefensesBreached", n => { TeleopDefensesBreached = n.GetBoolValue(); } },
                { "teleopPoints", n => { TeleopPoints = n.GetIntValue(); } },
                { "teleopScalePoints", n => { TeleopScalePoints = n.GetIntValue(); } },
                { "teleopTowerCaptured", n => { TeleopTowerCaptured = n.GetIntValue(); } },
                { "totalPoints", n => { TotalPoints = n.GetIntValue(); } },
                { "towerEndStrength", n => { TowerEndStrength = n.GetIntValue(); } },
                { "towerFaceA", n => { TowerFaceA = n.GetStringValue(); } },
                { "towerFaceB", n => { TowerFaceB = n.GetStringValue(); } },
                { "towerFaceC", n => { TowerFaceC = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("adjustPoints", AdjustPoints);
            writer.WriteIntValue("autoBoulderPoints", AutoBoulderPoints);
            writer.WriteIntValue("autoBouldersHigh", AutoBouldersHigh);
            writer.WriteIntValue("autoBouldersLow", AutoBouldersLow);
            writer.WriteIntValue("autoCrossingPoints", AutoCrossingPoints);
            writer.WriteIntValue("autoPoints", AutoPoints);
            writer.WriteIntValue("autoReachPoints", AutoReachPoints);
            writer.WriteIntValue("breachPoints", BreachPoints);
            writer.WriteIntValue("capturePoints", CapturePoints);
            writer.WriteIntValue("foulCount", FoulCount);
            writer.WriteIntValue("foulPoints", FoulPoints);
            writer.WriteIntValue("position1crossings", Position1crossings);
            writer.WriteStringValue("position2", Position2);
            writer.WriteIntValue("position2crossings", Position2crossings);
            writer.WriteStringValue("position3", Position3);
            writer.WriteIntValue("position3crossings", Position3crossings);
            writer.WriteStringValue("position4", Position4);
            writer.WriteIntValue("position4crossings", Position4crossings);
            writer.WriteStringValue("position5", Position5);
            writer.WriteIntValue("position5crossings", Position5crossings);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot1Auto>("robot1Auto", Robot1Auto);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot2Auto>("robot2Auto", Robot2Auto);
            writer.WriteEnumValue<global::Common.Tba.Api.Models.Match_Score_Breakdown_2016_Alliance_robot3Auto>("robot3Auto", Robot3Auto);
            writer.WriteIntValue("techFoulCount", TechFoulCount);
            writer.WriteIntValue("teleopBoulderPoints", TeleopBoulderPoints);
            writer.WriteIntValue("teleopBouldersHigh", TeleopBouldersHigh);
            writer.WriteIntValue("teleopBouldersLow", TeleopBouldersLow);
            writer.WriteIntValue("teleopChallengePoints", TeleopChallengePoints);
            writer.WriteIntValue("teleopCrossingPoints", TeleopCrossingPoints);
            writer.WriteBoolValue("teleopDefensesBreached", TeleopDefensesBreached);
            writer.WriteIntValue("teleopPoints", TeleopPoints);
            writer.WriteIntValue("teleopScalePoints", TeleopScalePoints);
            writer.WriteIntValue("teleopTowerCaptured", TeleopTowerCaptured);
            writer.WriteIntValue("totalPoints", TotalPoints);
            writer.WriteIntValue("towerEndStrength", TowerEndStrength);
            writer.WriteStringValue("towerFaceA", TowerFaceA);
            writer.WriteStringValue("towerFaceB", TowerFaceB);
            writer.WriteStringValue("towerFaceC", TowerFaceC);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
