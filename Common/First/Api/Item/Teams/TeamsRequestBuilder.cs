// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Common.First.Api.Item.Teams
{
    /// <summary>
    /// Builds and executes requests for operations under \{season}\teams
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TeamsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Common.First.Api.Item.Teams.TeamsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TeamsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{season}/teams{?districtCode*,eventCode*,page*,state*,teamNumber*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Common.First.Api.Item.Teams.TeamsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TeamsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{season}/teams{?districtCode*,eventCode*,page*,state*,teamNumber*}", rawUrl)
        {
        }
        /// <summary>
        /// The team listings API returns all FRC official teams in a particular `season`. If specified, the `teamNumber` parameter will return only one result with the details of the requested `teamNumber`. Alternately, the `eventCode` parameter allows sorting of the team list to only those teams attending a particular event in the particular `season`. Further, the district parameter allows results to be returned only when the team is a member of the requested district based on the district code. If you specify a `teamNumber` parameter, you cannot additionally specify an `eventCode` and/or `districtCode` and/or state in the same request, or you will receive an `HTTP 501`. You can however request a `districtCode` and an `eventCode` together. If you specify the `state` parameter, it should be the full legal name of the US state or international state/prov, such as `New Hampshire` or `Ontario`. Values on this endpoint are &quot;pass through&quot; values from the TIMS registration system. As such, if the team does not specify a value for a field, it may be presented in the API as `null`.
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Teams.TeamsGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Common.First.Api.Item.Teams.Teams500Error">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Common.First.Api.Item.Teams.TeamsGetResponse?> GetAsTeamsGetResponseAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Teams.TeamsRequestBuilder.TeamsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Common.First.Api.Item.Teams.TeamsGetResponse> GetAsTeamsGetResponseAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Teams.TeamsRequestBuilder.TeamsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "500", global::Common.First.Api.Item.Teams.Teams500Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Common.First.Api.Item.Teams.TeamsGetResponse>(requestInfo, global::Common.First.Api.Item.Teams.TeamsGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The team listings API returns all FRC official teams in a particular `season`. If specified, the `teamNumber` parameter will return only one result with the details of the requested `teamNumber`. Alternately, the `eventCode` parameter allows sorting of the team list to only those teams attending a particular event in the particular `season`. Further, the district parameter allows results to be returned only when the team is a member of the requested district based on the district code. If you specify a `teamNumber` parameter, you cannot additionally specify an `eventCode` and/or `districtCode` and/or state in the same request, or you will receive an `HTTP 501`. You can however request a `districtCode` and an `eventCode` together. If you specify the `state` parameter, it should be the full legal name of the US state or international state/prov, such as `New Hampshire` or `Ontario`. Values on this endpoint are &quot;pass through&quot; values from the TIMS registration system. As such, if the team does not specify a value for a field, it may be presented in the API as `null`.
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Teams.TeamsResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Common.First.Api.Item.Teams.Teams500Error">When receiving a 500 status code</exception>
        [Obsolete("This method is obsolete. Use GetAsTeamsGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Common.First.Api.Item.Teams.TeamsResponse?> GetAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Teams.TeamsRequestBuilder.TeamsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Common.First.Api.Item.Teams.TeamsResponse> GetAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Teams.TeamsRequestBuilder.TeamsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "500", global::Common.First.Api.Item.Teams.Teams500Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Common.First.Api.Item.Teams.TeamsResponse>(requestInfo, global::Common.First.Api.Item.Teams.TeamsResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The team listings API returns all FRC official teams in a particular `season`. If specified, the `teamNumber` parameter will return only one result with the details of the requested `teamNumber`. Alternately, the `eventCode` parameter allows sorting of the team list to only those teams attending a particular event in the particular `season`. Further, the district parameter allows results to be returned only when the team is a member of the requested district based on the district code. If you specify a `teamNumber` parameter, you cannot additionally specify an `eventCode` and/or `districtCode` and/or state in the same request, or you will receive an `HTTP 501`. You can however request a `districtCode` and an `eventCode` together. If you specify the `state` parameter, it should be the full legal name of the US state or international state/prov, such as `New Hampshire` or `Ontario`. Values on this endpoint are &quot;pass through&quot; values from the TIMS registration system. As such, if the team does not specify a value for a field, it may be presented in the API as `null`.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Common.First.Api.Item.Teams.TeamsRequestBuilder.TeamsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Common.First.Api.Item.Teams.TeamsRequestBuilder.TeamsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Teams.TeamsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Common.First.Api.Item.Teams.TeamsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Common.First.Api.Item.Teams.TeamsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// The team listings API returns all FRC official teams in a particular `season`. If specified, the `teamNumber` parameter will return only one result with the details of the requested `teamNumber`. Alternately, the `eventCode` parameter allows sorting of the team list to only those teams attending a particular event in the particular `season`. Further, the district parameter allows results to be returned only when the team is a member of the requested district based on the district code. If you specify a `teamNumber` parameter, you cannot additionally specify an `eventCode` and/or `districtCode` and/or state in the same request, or you will receive an `HTTP 501`. You can however request a `districtCode` and an `eventCode` together. If you specify the `state` parameter, it should be the full legal name of the US state or international state/prov, such as `New Hampshire` or `Ontario`. Values on this endpoint are &quot;pass through&quot; values from the TIMS registration system. As such, if the team does not specify a value for a field, it may be presented in the API as `null`.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TeamsRequestBuilderGetQueryParameters 
        {
            /// <summary>**(string)** Case insensitive districtCode code of the district from which team listings are requested.District Codes:```FMAPNWNEFINFNCONTISRCHSFITPCHFIM```</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("districtCode")]
            public string? DistrictCode { get; set; }
#nullable restore
#else
            [QueryParameter("districtCode")]
            public string DistrictCode { get; set; }
#endif
            /// <summary>**(string)** Case insensitive alphanumeric eventCode of the event from which details are requested.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("eventCode")]
            public string? EventCode { get; set; }
#nullable restore
#else
            [QueryParameter("eventCode")]
            public string EventCode { get; set; }
#endif
            /// <summary>**(int)** Numeric page of results to return. If not included, page 1 will be returned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("page")]
            public string? Page { get; set; }
#nullable restore
#else
            [QueryParameter("page")]
            public string Page { get; set; }
#endif
            /// <summary>**(string)** Name of the state or province the desired teams are located.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("state")]
            public string? State { get; set; }
#nullable restore
#else
            [QueryParameter("state")]
            public string State { get; set; }
#endif
            /// <summary>**(int)** Numeric teamNumber of the team about which information is requested. Must be 1 to 4 digits.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("teamNumber")]
            public string? TeamNumber { get; set; }
#nullable restore
#else
            [QueryParameter("teamNumber")]
            public string TeamNumber { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TeamsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Common.First.Api.Item.Teams.TeamsRequestBuilder.TeamsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
