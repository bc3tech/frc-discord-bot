// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Common.First.Api.Item.Rankings.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \{season}\rankings\{eventCode}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithEventCodeItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithEventCodeItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{season}/rankings/{eventCode}{?teamNumber*,top*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithEventCodeItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{season}/rankings/{eventCode}{?teamNumber*,top*}", rawUrl)
        {
        }
        /// <summary>
        /// The rankings API returns team ranking detail from a particular event in a particular season. Optionally, the `top` parameter can be added to the query string to request a subset of the rankings based on the highest ranked teams at the time of the request. Alternately, you can specify the `teamNumber` parameter to retrieve the ranking on one specific team. You cannot specify both a top and `teamNumber` in the same call.**IMPORTANT: This endpoint use to return differently for 2015 vs other seasons. In the fall 2016 updates, this was changed, and all seasons of data now return in the genericized format specified below.**In all response details, the &quot;team&quot; refers to the FRC Team that the ranking represents, as well as their various alliance partners in the matches they have played (i.e. scores in a single match are not calcualted by team, but by alliance). *See the FRC Game Manual for more information.*
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Rankings.Item.WithEventCodeGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Common.First.Api.Item.Rankings.Item.WithEventCode500Error">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Common.First.Api.Item.Rankings.Item.WithEventCodeGetResponse?> GetAsWithEventCodeGetResponseAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder.WithEventCodeItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Common.First.Api.Item.Rankings.Item.WithEventCodeGetResponse> GetAsWithEventCodeGetResponseAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder.WithEventCodeItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "500", global::Common.First.Api.Item.Rankings.Item.WithEventCode500Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Common.First.Api.Item.Rankings.Item.WithEventCodeGetResponse>(requestInfo, global::Common.First.Api.Item.Rankings.Item.WithEventCodeGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The rankings API returns team ranking detail from a particular event in a particular season. Optionally, the `top` parameter can be added to the query string to request a subset of the rankings based on the highest ranked teams at the time of the request. Alternately, you can specify the `teamNumber` parameter to retrieve the ranking on one specific team. You cannot specify both a top and `teamNumber` in the same call.**IMPORTANT: This endpoint use to return differently for 2015 vs other seasons. In the fall 2016 updates, this was changed, and all seasons of data now return in the genericized format specified below.**In all response details, the &quot;team&quot; refers to the FRC Team that the ranking represents, as well as their various alliance partners in the matches they have played (i.e. scores in a single match are not calcualted by team, but by alliance). *See the FRC Game Manual for more information.*
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Rankings.Item.WithEventCodeResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Common.First.Api.Item.Rankings.Item.WithEventCode500Error">When receiving a 500 status code</exception>
        [Obsolete("This method is obsolete. Use GetAsWithEventCodeGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Common.First.Api.Item.Rankings.Item.WithEventCodeResponse?> GetAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder.WithEventCodeItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Common.First.Api.Item.Rankings.Item.WithEventCodeResponse> GetAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder.WithEventCodeItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "500", global::Common.First.Api.Item.Rankings.Item.WithEventCode500Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Common.First.Api.Item.Rankings.Item.WithEventCodeResponse>(requestInfo, global::Common.First.Api.Item.Rankings.Item.WithEventCodeResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The rankings API returns team ranking detail from a particular event in a particular season. Optionally, the `top` parameter can be added to the query string to request a subset of the rankings based on the highest ranked teams at the time of the request. Alternately, you can specify the `teamNumber` parameter to retrieve the ranking on one specific team. You cannot specify both a top and `teamNumber` in the same call.**IMPORTANT: This endpoint use to return differently for 2015 vs other seasons. In the fall 2016 updates, this was changed, and all seasons of data now return in the genericized format specified below.**In all response details, the &quot;team&quot; refers to the FRC Team that the ranking represents, as well as their various alliance partners in the matches they have played (i.e. scores in a single match are not calcualted by team, but by alliance). *See the FRC Game Manual for more information.*
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder.WithEventCodeItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder.WithEventCodeItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// The rankings API returns team ranking detail from a particular event in a particular season. Optionally, the `top` parameter can be added to the query string to request a subset of the rankings based on the highest ranked teams at the time of the request. Alternately, you can specify the `teamNumber` parameter to retrieve the ranking on one specific team. You cannot specify both a top and `teamNumber` in the same call.**IMPORTANT: This endpoint use to return differently for 2015 vs other seasons. In the fall 2016 updates, this was changed, and all seasons of data now return in the genericized format specified below.**In all response details, the &quot;team&quot; refers to the FRC Team that the ranking represents, as well as their various alliance partners in the matches they have played (i.e. scores in a single match are not calcualted by team, but by alliance). *See the FRC Game Manual for more information.*
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithEventCodeItemRequestBuilderGetQueryParameters 
        {
            /// <summary>**(int)** Optional team number of the team whose ranking is requested.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("teamNumber")]
            public string? TeamNumber { get; set; }
#nullable restore
#else
            [QueryParameter("teamNumber")]
            public string TeamNumber { get; set; }
#endif
            /// <summary>**(int)** Optional number of requested top ranked teams to return in result.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("top")]
            public string? Top { get; set; }
#nullable restore
#else
            [QueryParameter("top")]
            public string Top { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithEventCodeItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Common.First.Api.Item.Rankings.Item.WithEventCodeItemRequestBuilder.WithEventCodeItemRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
