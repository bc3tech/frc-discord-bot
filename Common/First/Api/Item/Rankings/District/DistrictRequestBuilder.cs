// <auto-generated/>
#pragma warning disable CS0618
using Common.First.Api.Item.Rankings.District.AllianceSelectionCalculation;
using Common.First.Api.Item.Rankings.District.PlayoffAdvancementCalculation;
using Common.First.Api.Item.Rankings.District.QualPerformanceCalculation;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Common.First.Api.Item.Rankings.District
{
    /// <summary>
    /// Builds and executes requests for operations under \{season}\rankings\district
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class DistrictRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The allianceSelectionCalculation property</summary>
        public global::Common.First.Api.Item.Rankings.District.AllianceSelectionCalculation.AllianceSelectionCalculationRequestBuilder AllianceSelectionCalculation
        {
            get => new global::Common.First.Api.Item.Rankings.District.AllianceSelectionCalculation.AllianceSelectionCalculationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The playoffAdvancementCalculation property</summary>
        public global::Common.First.Api.Item.Rankings.District.PlayoffAdvancementCalculation.PlayoffAdvancementCalculationRequestBuilder PlayoffAdvancementCalculation
        {
            get => new global::Common.First.Api.Item.Rankings.District.PlayoffAdvancementCalculation.PlayoffAdvancementCalculationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The qualPerformanceCalculation property</summary>
        public global::Common.First.Api.Item.Rankings.District.QualPerformanceCalculation.QualPerformanceCalculationRequestBuilder QualPerformanceCalculation
        {
            get => new global::Common.First.Api.Item.Rankings.District.QualPerformanceCalculation.QualPerformanceCalculationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public DistrictRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{season}/rankings/district{?districtCode*,page*,teamNumber*,top*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public DistrictRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{season}/rankings/district{?districtCode*,page*,teamNumber*,top*}", rawUrl)
        {
        }
        /// <summary>
        /// The district rankings API returns team ranking detail from a particular team in a particular season. You *must* specify a districtCode unless a `teamNumber` is being specified. If a `teamNumber` is specified, do not include any other paramaters. Optionally, the `top` parameter can be added to the query string to request a subset of the rankings based on the highest ranked teams at the time of the request. Alternately, you can specify the `teamNumber` parameter to retrieve the ranking on one specific team. You cannot specify both a `top` and `teamNumber` in the same call. If you specify a `page`, you cannot specify a `top`.This endpoint is only updated periodically, and may not reflect final rankings for an event/district until a period of time after a given event is completed. The final authority on teams advancing tournament levels is the District Ranking website and communications from *FIRST*, not this API. *See the FRC Game Manual for more information.*
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Rankings.District.DistrictGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Common.First.Api.Item.Rankings.District.District500Error">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Common.First.Api.Item.Rankings.District.DistrictGetResponse?> GetAsDistrictGetResponseAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder.DistrictRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Common.First.Api.Item.Rankings.District.DistrictGetResponse> GetAsDistrictGetResponseAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder.DistrictRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "500", global::Common.First.Api.Item.Rankings.District.District500Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Common.First.Api.Item.Rankings.District.DistrictGetResponse>(requestInfo, global::Common.First.Api.Item.Rankings.District.DistrictGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The district rankings API returns team ranking detail from a particular team in a particular season. You *must* specify a districtCode unless a `teamNumber` is being specified. If a `teamNumber` is specified, do not include any other paramaters. Optionally, the `top` parameter can be added to the query string to request a subset of the rankings based on the highest ranked teams at the time of the request. Alternately, you can specify the `teamNumber` parameter to retrieve the ranking on one specific team. You cannot specify both a `top` and `teamNumber` in the same call. If you specify a `page`, you cannot specify a `top`.This endpoint is only updated periodically, and may not reflect final rankings for an event/district until a period of time after a given event is completed. The final authority on teams advancing tournament levels is the District Ranking website and communications from *FIRST*, not this API. *See the FRC Game Manual for more information.*
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Rankings.District.DistrictResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Common.First.Api.Item.Rankings.District.District500Error">When receiving a 500 status code</exception>
        [Obsolete("This method is obsolete. Use GetAsDistrictGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Common.First.Api.Item.Rankings.District.DistrictResponse?> GetAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder.DistrictRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Common.First.Api.Item.Rankings.District.DistrictResponse> GetAsync(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder.DistrictRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "500", global::Common.First.Api.Item.Rankings.District.District500Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Common.First.Api.Item.Rankings.District.DistrictResponse>(requestInfo, global::Common.First.Api.Item.Rankings.District.DistrictResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The district rankings API returns team ranking detail from a particular team in a particular season. You *must* specify a districtCode unless a `teamNumber` is being specified. If a `teamNumber` is specified, do not include any other paramaters. Optionally, the `top` parameter can be added to the query string to request a subset of the rankings based on the highest ranked teams at the time of the request. Alternately, you can specify the `teamNumber` parameter to retrieve the ranking on one specific team. You cannot specify both a `top` and `teamNumber` in the same call. If you specify a `page`, you cannot specify a `top`.This endpoint is only updated periodically, and may not reflect final rankings for an event/district until a period of time after a given event is completed. The final authority on teams advancing tournament levels is the District Ranking website and communications from *FIRST*, not this API. *See the FRC Game Manual for more information.*
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder.DistrictRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder.DistrictRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// The district rankings API returns team ranking detail from a particular team in a particular season. You *must* specify a districtCode unless a `teamNumber` is being specified. If a `teamNumber` is specified, do not include any other paramaters. Optionally, the `top` parameter can be added to the query string to request a subset of the rankings based on the highest ranked teams at the time of the request. Alternately, you can specify the `teamNumber` parameter to retrieve the ranking on one specific team. You cannot specify both a `top` and `teamNumber` in the same call. If you specify a `page`, you cannot specify a `top`.This endpoint is only updated periodically, and may not reflect final rankings for an event/district until a period of time after a given event is completed. The final authority on teams advancing tournament levels is the District Ranking website and communications from *FIRST*, not this API. *See the FRC Game Manual for more information.*
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class DistrictRequestBuilderGetQueryParameters 
        {
            /// <summary>**(string)** Case insensitive alphanumeric districtCode of the district from which the rankings are requested. Must be at least 2 characters.District Codes:```FMAPNWNEFINFNCONTISRCHSFITPCHFIM```</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("districtCode")]
            public string? DistrictCode { get; set; }
#nullable restore
#else
            [QueryParameter("districtCode")]
            public string DistrictCode { get; set; }
#endif
            /// <summary>**(int)** Numeric page of results to return. If not included, page 1 will be returned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("page")]
            public string? Page { get; set; }
#nullable restore
#else
            [QueryParameter("page")]
            public string Page { get; set; }
#endif
            /// <summary>**(int)** Optional team number of the team whose ranking is requested.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("teamNumber")]
            public string? TeamNumber { get; set; }
#nullable restore
#else
            [QueryParameter("teamNumber")]
            public string TeamNumber { get; set; }
#endif
            /// <summary>**(int)** Optional number of requested top ranked teams to return in result.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("top")]
            public string? Top { get; set; }
#nullable restore
#else
            [QueryParameter("top")]
            public string Top { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class DistrictRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Common.First.Api.Item.Rankings.District.DistrictRequestBuilder.DistrictRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
