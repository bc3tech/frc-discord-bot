/*
 * Statbotics REST API
 *
 * The REST API for Statbotics. Please be nice to our servers! If you are looking to do large-scale data science projects, use the CSV exports on the GitHub repo.
 *
 * The version of the OpenAPI document: 3.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

    namespace Org.OpenAPITools.Model;
    
    using System.Text;
    using System.Text.Json;
    using System.Text.Json.Serialization;
  using System.ComponentModel.DataAnnotations;
    
    /// <summary>
/// HTTPValidationError
/// </summary>
public partial class HTTPValidationError : IValidatableObject
{
      /// <summary>
      /// Initializes a new instance of the <see cref="HTTPValidationError" /> class.
      /// </summary>
          /// <param name="detail">detail.</param>
      public HTTPValidationError(List<ValidationError>? detail = default)
      {
                    this.Detail = detail;
      }
      
            /// <summary>
            /// Gets or Sets Detail
            /// </summary>
              
                [JsonPropertyName("detail")]
                public List<ValidationError>? Detail { get; set; }
                
            /// <summary>
            /// Returns the string presentation of the object
            /// </summary>
            /// <returns>string presentation of the object</returns>
            public override string ToString()
            {
              StringBuilder sb = new();
              sb.AppendLine("class HTTPValidationError {");
                  sb.Append("  Detail: ").AppendLine($"{(Detail is null ? "[null]" : string.Join(", ", Detail))}");
              sb.AppendLine("}");
              return sb.ToString();
            }
            
            /// <summary>
            /// Returns the JSON string presentation of the object
            /// </summary>
            /// <returns>JSON string presentation of the object</returns>
            public string ToJson()
            {
              return JsonSerializer.Serialize(this);
            }        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
          }
          
