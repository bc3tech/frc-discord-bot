openapi: 3.1.0
info:
  description: "The REST API for Statbotics. Please be nice to our servers! If you\
    \ are looking to do large-scale data science projects, use the CSV exports on\
    \ the GitHub repo."
  title: Statbotics REST API
  version: 3.0.0
servers:
- url: /
paths:
  /v3/:
    get:
      operationId: read_root_v3__get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Read Root
  /v3/year/{year}:
    get:
      description: "Returns a single Year object. Requires a four-digit year, e.g.\
        \ `2019`."
      operationId: read_year_v3_year__year__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Year V3 Year  Year  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query a single year
      tags:
      - Year
  /v3/years:
    get:
      operationId: read_years_v3_years_get
      parameters:
      - description: How to sort the returned values. Any column in the table is valid.
        explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether to sort the returned values in ascending order. Default
          is ascending
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Maximum number of events to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Offset from the first result to return.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Returns a list of Years since 2002. Older data is not available.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query multiple years
      tags:
      - Year
  /v3/team/{team}:
    get:
      description: Returns a single Team object. Requires a team number (no prefix).
      operationId: read_team_v3_team__team__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Team V3 Team  Team  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query a single team
      tags:
      - Team
  /v3/teams:
    get:
      description: Returns up to 1000 teams at a time. Specify limit and offset to
        page through results.
      operationId: read_teams_v3_teams_get
      parameters:
      - description: "Capitalized country name, e.g. `USA` or `Canada`."
        explode: true
        in: query
        name: country
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Capitalized two-letter state code, e.g. `NC`."
        explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "One of [`fma`, `fnc`, `fit`, `fin`, `fim`, `ne`, `chs`, `ont`,\
          \ `pnw`, `pch`, `isr`]"
        explode: true
        in: query
        name: district
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether the team has played in the last year.
        explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Whether the event is an offseason event.
        explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: How to sort the returned values. Any column in the table is valid.
        explode: true
        in: query
        name: metric
        required: false
        schema:
          description: How to sort the returned values. Any column in the table is
            valid.
          title: Metric
          type: string
        style: form
      - description: Whether to sort the returned values in ascending order. Default
          is ascending
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          description: Whether to sort the returned values in ascending order. Default
            is ascending
          title: Ascending
          type: boolean
        style: form
      - description: Maximum number of events to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Maximum number of events to return. Default is 1000.
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
        style: form
      - description: Offset from the first result to return.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Offset from the first result to return.
          minimum: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query multiple teams
      tags:
      - Team
  /v3/team_year/{team}/{year}:
    get:
      description: Returns a single Team Year object. Requires a team number and year.
      operationId: read_team_year_v3_team_year__team___year__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: string
        style: simple
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Team Year V3 Team Year  Team   Year  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query a single team year
      tags:
      - TeamYear
  /v3/team_years:
    get:
      description: Returns up to 1000 team years at a time. Specify limit and offset
        to page through results.
      operationId: read_team_years_v3_team_years_get
      parameters:
      - description: "Team number (no prefix), e.g. `5511`."
        explode: true
        in: query
        name: team
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Four-digit year
        explode: true
        in: query
        name: year
        required: false
        schema:
          maximum: 2024
          minimum: 2002
          nullable: true
          type: integer
        style: form
      - description: "Capitalized country name, e.g. `USA` or `Canada`."
        explode: true
        in: query
        name: country
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Capitalized two-letter state code, e.g. `NC`."
        explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "One of [`fma`, `fnc`, `fit`, `fin`, `fim`, `ne`, `chs`, `ont`,\
          \ `pnw`, `pch`, `isr`]"
        explode: true
        in: query
        name: district
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether the event is an offseason event.
        explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: How to sort the returned values. Any column in the table is valid.
        explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether to sort the returned values in ascending order. Default
          is ascending
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Maximum number of events to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Offset from the first result to return.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query multiple team years
      tags:
      - TeamYear
  /v3/event/{event}:
    get:
      description: "Returns a single Event object. Requires an event key, e.g. `2019ncwak`."
      operationId: read_event_v3_event__event__get
      parameters:
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Event V3 Event  Event  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query a single event
      tags:
      - Event
  /v3/events:
    get:
      description: Returns up to 1000 events at a time. Specify limit and offset to
        page through results.
      operationId: read_events_v3_events_get
      parameters:
      - description: Four-digit year
        explode: true
        in: query
        name: year
        required: false
        schema:
          maximum: 2024
          minimum: 2002
          nullable: true
          type: integer
        style: form
      - description: "Capitalized country name, e.g. `USA` or `Canada`."
        explode: true
        in: query
        name: country
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Capitalized two-letter state code, e.g. `NC`."
        explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "One of [`fma`, `fnc`, `fit`, `fin`, `fim`, `ne`, `chs`, `ont`,\
          \ `pnw`, `pch`, `isr`]"
        explode: true
        in: query
        name: district
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "One of [`regional`, `district`, `district_cmp`, `cmp_division`,\
          \ `cmp_finals`, `offseason`, or `preseason`]."
        explode: true
        in: query
        name: type
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Week of the competition season. 0 is preseason, 8 is CMP, 9\
          \ is offseason."
        explode: true
        in: query
        name: week
        required: false
        schema:
          maximum: 9
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Whether the event is an offseason event.
        explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: How to sort the returned values. Any column in the table is valid.
        explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether to sort the returned values in ascending order. Default
          is ascending
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Maximum number of events to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Offset from the first result to return.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query multiple events
      tags:
      - Event
  /v3/team_event/{team}/{event}:
    get:
      description: "Returns a single Team Event object. Requires a team number and\
        \ event key, e.g. `5511` and `2019ncwak`."
      operationId: read_team_event_v3_team_event__team___event__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: string
        style: simple
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Team Event V3 Team Event  Team   Event  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query a single team event
      tags:
      - TeamEvent
  /v3/team_events:
    get:
      description: Returns up to 1000 team events at a time. Specify limit and offset
        to page through results.
      operationId: read_team_events_v3_team_events_get
      parameters:
      - description: "Team number (no prefix), e.g. `5511`."
        explode: true
        in: query
        name: team
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Four-digit year
        explode: true
        in: query
        name: year
        required: false
        schema:
          maximum: 2024
          minimum: 2002
          nullable: true
          type: integer
        style: form
      - description: "Event key, e.g. `2019ncwak`."
        explode: true
        in: query
        name: event
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Capitalized country name, e.g. `USA` or `Canada`."
        explode: true
        in: query
        name: country
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Capitalized two-letter state code, e.g. `NC`."
        explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "One of [`fma`, `fnc`, `fit`, `fin`, `fim`, `ne`, `chs`, `ont`,\
          \ `pnw`, `pch`, `isr`]"
        explode: true
        in: query
        name: district
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "One of [`regional`, `district`, `district_cmp`, `cmp_division`,\
          \ `cmp_finals`, `offseason`, or `preseason`]."
        explode: true
        in: query
        name: type
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Week of the competition season. 0 is preseason, 8 is CMP, 9\
          \ is offseason."
        explode: true
        in: query
        name: week
        required: false
        schema:
          maximum: 9
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Whether the event is an offseason event.
        explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: How to sort the returned values. Any column in the table is valid.
        explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether to sort the returned values in ascending order. Default
          is ascending
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Maximum number of events to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Offset from the first result to return.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query multiple team events
      tags:
      - TeamEvent
  /v3/match/{match}:
    get:
      description: "Returns a single Match object. Requires a match key, e.g. `2019ncwak_f1m1`."
      operationId: read_match_v3_match__match__get
      parameters:
      - explode: false
        in: path
        name: match
        required: true
        schema:
          title: Match
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Match V3 Match  Match  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query a single match
      tags:
      - Match
  /v3/matches:
    get:
      description: Returns up to 1000 matches at a time. Specify limit and offset
        to page through results.
      operationId: read_matches_v3_matches_get
      parameters:
      - description: "Team number (no prefix), e.g. `5511`."
        explode: true
        in: query
        name: team
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Four-digit year
        explode: true
        in: query
        name: year
        required: false
        schema:
          maximum: 2024
          minimum: 2002
          nullable: true
          type: integer
        style: form
      - description: "Event key, e.g. `2019ncwak`."
        explode: true
        in: query
        name: event
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Week of the competition season. 0 is preseason, 8 is CMP, 9\
          \ is offseason."
        explode: true
        in: query
        name: week
        required: false
        schema:
          maximum: 9
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Whether the match is an elimination match.
        explode: true
        in: query
        name: elim
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Whether the event is an offseason event.
        explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: How to sort the returned values. Any column in the table is valid.
        explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether to sort the returned values in ascending order. Default
          is ascending
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Maximum number of events to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Offset from the first result to return.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query multiple matches
      tags:
      - Match
  /v3/team_match/{team}/{match}:
    get:
      description: "Returns a single Team Match object. Requires a team number and\
        \ match key, e.g. `5511` and `2019ncwak_f1m1`."
      operationId: read_team_match_v3_team_match__team___match__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: string
        style: simple
      - explode: false
        in: path
        name: match
        required: true
        schema:
          title: Match
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Team Match V3 Team Match  Team   Match  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query a single team match
      tags:
      - TeamMatch
  /v3/team_matches:
    get:
      description: Returns up to 1000 team matches at a time. Specify limit and offset
        to page through results.
      operationId: read_team_matches_v3_team_matches_get
      parameters:
      - description: "Team number (no prefix), e.g. `5511`."
        explode: true
        in: query
        name: team
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Four-digit year
        explode: true
        in: query
        name: year
        required: false
        schema:
          maximum: 2024
          minimum: 2002
          nullable: true
          type: integer
        style: form
      - description: "Event key, e.g. `2019ncwak`."
        explode: true
        in: query
        name: event
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Week of the competition season. 0 is preseason, 8 is CMP, 9\
          \ is offseason."
        explode: true
        in: query
        name: week
        required: false
        schema:
          maximum: 9
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Match key, e.g. `2019ncwak_f1m1`."
        explode: true
        in: query
        name: match
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether the match is an elimination match.
        explode: true
        in: query
        name: elim
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Whether the event is an offseason event.
        explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: How to sort the returned values. Any column in the table is valid.
        explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Whether to sort the returned values in ascending order. Default
          is ascending
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Maximum number of events to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Offset from the first result to return.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Query multiple team matches
      tags:
      - TeamMatch
  /v2/:
    get:
      operationId: read_root_v2__get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Read Root
  /v2/year/{year}:
    get:
      description: "Get a single Year object containing EPA percentiles, Week 1 match\
        \ score statistics, and prediction accuracy. After 2016, separated into components\
        \ and ranking points included."
      operationId: read_year_v2_year__year__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Year V2 Year  Year  Get
                type: object
          description: A Year object.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Year
      tags:
      - v2/Year
  /v2/years:
    get:
      description: "Get a list of Year objects from 2002 to 2023. Specify a four-digit\
        \ year, ex: 2019"
      operationId: read_years_v2_years_get
      parameters:
      - explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Year objects. See /year/{year} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Years
      tags:
      - v2/Year
  /v2/team/{team}:
    get:
      description: "Get a single Team object containing team name, location, normalized\
        \ EPA statistics, and winrate."
      operationId: read_team_v2_team__team__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Team V2 Team  Team  Get
                type: object
          description: A Team object.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team
      tags:
      - v2/Team
  /v2/teams/district/{district}:
    get:
      description: "Get a list of Team objects from a single district. Specify lowercase\
        \ district abbreviation, ex: fnc, fim"
      operationId: read_teams_district_v2_teams_district__district__get
      parameters:
      - explode: false
        in: path
        name: district
        required: true
        schema:
          title: District
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team objects. See /team/{team} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Teams District
      tags:
      - v2/Team
  /v2/teams/state/{state}:
    get:
      description: "Get a list of Team objects from a single state. Specify uppercase\
        \ state abbreviation, ex: NC, CA"
      operationId: read_teams_state_v2_teams_state__state__get
      parameters:
      - explode: false
        in: path
        name: state
        required: true
        schema:
          title: State
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team objects. See /team/{team} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Teams State
      tags:
      - v2/Team
  /v2/teams:
    get:
      description: Get a list of Team objects with optional filters.
      operationId: read_teams_v2_teams_get
      parameters:
      - explode: true
        in: query
        name: country
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: district
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: active
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: metric
        required: false
        schema:
          default: team
          title: Metric
          type: string
        style: form
      - explode: true
        in: query
        name: ascending
        required: false
        schema:
          default: true
          title: Ascending
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          title: Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team objects. See /team/{team} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Teams
      tags:
      - v2/Team
  /v2/team_year/{team}/{year}:
    get:
      description: "Get a single TeamYear object containing EPA summary, winrates,\
        \ and location rankings"
      operationId: read_team_year_v2_team_year__team___year__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Team Year V2 Team Year  Team   Year  Get
                type: object
          description: A TeamYear object.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Year
      tags:
      - v2/TeamYear
  /v2/team_years/team/{team}:
    get:
      description: "Get a list of TeamYear objects for a single team. Specify team\
        \ number, ex: 254, 1114"
      operationId: read_team_years_team_v2_team_years_team__team__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of TeamYear objects. See /team_year/{team}/{year} for\
            \ more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Years Team
      tags:
      - v2/TeamYear
  /v2/team_years/year/{year}/district/{district}:
    get:
      description: "Get a list of TeamYear objects from a single district. Specify\
        \ lowercase district abbreviation, ex: fnc, fim"
      operationId: read_team_years_district_v2_team_years_year__year__district__district__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      - explode: false
        in: path
        name: district
        required: true
        schema:
          title: District
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of TeamYear objects. See /team_year/{team}/{year} for\
            \ more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Years District
      tags:
      - v2/TeamYear
  /v2/team_years/year/{year}/state/{state}:
    get:
      description: "Get a list of TeamYear objects from a single state. Specify lowercase\
        \ state abbreviation, ex: ca, tx"
      operationId: read_team_years_state_v2_team_years_year__year__state__state__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      - explode: false
        in: path
        name: state
        required: true
        schema:
          title: State
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of TeamYear objects. See /team_year/{team}/{year} for\
            \ more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Years State
      tags:
      - v2/TeamYear
  /v2/team_years:
    get:
      description: Get a list of TeamYear objects with optional filters.
      operationId: read_team_years_v2_team_years_get
      parameters:
      - explode: true
        in: query
        name: team
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: year
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: country
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: district
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of TeamYear objects. See /team_year/{team}/{year} for\
            \ more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Years
      tags:
      - v2/TeamYear
  /v2/event/{event}:
    get:
      description: "Get a single Event object containing event location, dates, EPA\
        \ stats, prediction stats. Specify event key ex: 2019ncwak, 2022cmptx"
      operationId: read_event_v2_event__event__get
      parameters:
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Event V2 Event  Event  Get
                type: object
          description: An Event object.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Event
      tags:
      - v2/Event
  /v2/events/year/{year}:
    get:
      description: "Get a list of Event objects for a single year. Specify year, ex:\
        \ 2019, 2020"
      operationId: read_events_year_v2_events_year__year__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Event objects. See /event/{event} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Events Year
      tags:
      - v2/Event
  /v2/events/year/{year}/district/{district}:
    get:
      description: "Get a list of Event objects for a single (year, district) pair.\
        \ Specify year as four-digit number, district as lowercase abbreviation."
      operationId: read_events_year_district_v2_events_year__year__district__district__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      - explode: false
        in: path
        name: district
        required: true
        schema:
          title: District
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Event objects. See /event/{event} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Events Year District
      tags:
      - v2/Event
  /v2/events/year/{year}/state/{state}:
    get:
      description: "Get a list of Event objects for a single (year, state) pair. Specify\
        \ year as four-digit number, state as uppercase two-letter abbreviation."
      operationId: read_events_year_state_v2_events_year__year__state__state__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      - explode: false
        in: path
        name: state
        required: true
        schema:
          title: State
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Event objects. See /event/{event} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Events Year State
      tags:
      - v2/Event
  /v2/events/district/{district}:
    get:
      description: "Get a list of Event objects for a single district. Specify district\
        \ as lowercase abbreviation, ex fnc, fim."
      operationId: read_events_district_v2_events_district__district__get
      parameters:
      - explode: false
        in: path
        name: district
        required: true
        schema:
          title: District
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Event objects. See /event/{event} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Events District
      tags:
      - v2/Event
  /v2/events/state/{state}:
    get:
      description: "Get a list of Event objects for a single state. Specify state\
        \ as uppercase two-letter abbreviation, ex CA, TX."
      operationId: read_events_state_v2_events_state__state__get
      parameters:
      - explode: false
        in: path
        name: state
        required: true
        schema:
          title: State
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Event objects. See /event/{event} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Events State
      tags:
      - v2/Event
  /v2/events:
    get:
      description: Get a list of all Event objects with optional filters.
      operationId: read_events_v2_events_get
      parameters:
      - explode: true
        in: query
        name: year
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: country
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: district
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: week
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Event objects. See /event/{event} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Events
      tags:
      - v2/Event
  /v2/team_event/{team}/{event}:
    get:
      description: "Get a single Team Event object containing event metadata, EPA\
        \ statistics, and winrate. Specify team number and event key ex: 5511, 2019ncwak"
      operationId: read_team_event_v2_team_event__team___event__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Team Event V2 Team Event  Team   Event  Get
                type: object
          description: A Team Event object.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Event
      tags:
      - v2/TeamEvent
  /v2/team_events/team/{team}:
    get:
      description: "Get a list of Team Event objects for a single team. Specify team\
        \ number, ex: 5511"
      operationId: read_team_events_team_v2_team_events_team__team__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Event objects. See /team_event/{team}/{event}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Events Team
      tags:
      - v2/TeamEvent
  /v2/team_events/team/{team}/year/{year}:
    get:
      description: "Get a list of Team Event objects for a single team and year. Specify\
        \ team number and year, ex: 5511, 2019"
      operationId: read_team_events_team_year_v2_team_events_team__team__year__year__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Event objects. See /team_event/{team}/{event}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Events Team Year
      tags:
      - v2/TeamEvent
  /v2/team_events/event/{event}:
    get:
      description: "Get a list of Team Event objects for a single event. Specify event\
        \ key, ex: 2019ncwak"
      operationId: read_team_events_event_v2_team_events_event__event__get
      parameters:
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Event objects. See /team_event/{team}/{event}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Events Event
      tags:
      - v2/TeamEvent
  /v2/team_events/year/{year}/district/{district}:
    get:
      description: "Get a list of Team Event objects for a single year and district.\
        \ Specify year and district, ex: 2019, fnc"
      operationId: read_team_events_year_district_v2_team_events_year__year__district__district__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      - explode: false
        in: path
        name: district
        required: true
        schema:
          title: District
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Event objects. See /team_event/{team}/{event}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Events Year District
      tags:
      - v2/TeamEvent
  /v2/team_events/year/{year}/state/{state}:
    get:
      description: "Get a list of Team Event objects for a single year and state.\
        \ Specify year and state, ex: 2019, NC"
      operationId: read_team_events_year_state_v2_team_events_year__year__state__state__get
      parameters:
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      - explode: false
        in: path
        name: state
        required: true
        schema:
          title: State
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Event objects. See /team_event/{team}/{event}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Events Year State
      tags:
      - v2/TeamEvent
  /v2/team_events:
    get:
      description: Get a list of all Team Event objects with optional filters.
      operationId: read_team_events_v2_team_events_get
      parameters:
      - explode: true
        in: query
        name: team
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: year
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: event
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: country
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: district
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: week
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Event objects. See /team_event/{team}/{event}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Events
      tags:
      - v2/TeamEvent
  /v2/match/{match}:
    get:
      description: "Get a single Match object containing teams, score prediction,\
        \ and actual results. Specify match key ex: 2019ncwak_f1m1"
      operationId: read_match_v2_match__match__get
      parameters:
      - explode: false
        in: path
        name: match
        required: true
        schema:
          title: Match
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Match V2 Match  Match  Get
                type: object
          description: A Match object.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Match
      tags:
      - v2/Match
  /v2/matches/event/{event}:
    get:
      description: "Get a list of Match objects for a single event. Specify event\
        \ key ex: 2019ncwak, 2022cmptx"
      operationId: read_matches_event_v2_matches_event__event__get
      parameters:
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Match objects. See /match/{match} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Matches Event
      tags:
      - v2/Match
  /v2/matches/team/{team}/year/{year}:
    get:
      description: "Get a list of Match objects for a single team in a single year.\
        \ Specify team number and year, ex: 254, 2019"
      operationId: read_matches_team_year_v2_matches_team__team__year__year__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Match objects. See /match/{match} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Matches Team Year
      tags:
      - v2/Match
  /v2/matches/team/{team}/event/{event}:
    get:
      description: "Get a list of Match objects for a single team in a single event.\
        \ Specify team number and event key, ex: 5511, 2019ncwak"
      operationId: read_matches_team_event_v2_matches_team__team__event__event__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Match objects. See /match/{match} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Matches Team Event
      tags:
      - v2/Match
  /v2/matches:
    get:
      description: Get a list of Matches with optional filters
      operationId: read_matches_v2_matches_get
      parameters:
      - explode: true
        in: query
        name: team
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: year
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: event
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: week
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: elims
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Match objects. See /match/{match} for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Matches
      tags:
      - v2/Match
  /v2/team_match/{team}/{match}:
    get:
      description: "Get a single Team Match object containing team and EPA predictions.\
        \ Specify team number and match key ex: 5511, 2019ncwak_f1m1"
      operationId: read_team_match_v2_team_match__team___match__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      - explode: false
        in: path
        name: match
        required: true
        schema:
          title: Match
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Read Team Match V2 Team Match  Team   Match  Get
                type: object
          description: A Team Match object.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Match
      tags:
      - v2/TeamMatch
  /v2/team_matches/team/{team}/year/{year}:
    get:
      description: "Get a list of Team Match objects for a single team and year. Specify\
        \ team number and year ex: 5511, 2019. Note, includes offseason events."
      operationId: read_team_matches_team_year_v2_team_matches_team__team__year__year__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      - explode: false
        in: path
        name: year
        required: true
        schema:
          title: Year
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Match objects. See /team_match/{team}/{match}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Matches Team Year
      tags:
      - v2/TeamMatch
  /v2/team_matches/team/{team}/event/{event}:
    get:
      description: "Get a list of Team Match objects for a single team and event.\
        \ Specify team number and event key ex: 5511, 2019ncwak"
      operationId: read_team_matches_team_event_v2_team_matches_team__team__event__event__get
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          title: Team
          type: integer
        style: simple
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Match objects. See /team_match/{team}/{match}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Matches Team Event
      tags:
      - v2/TeamMatch
  /v2/team_matches/event/{event}:
    get:
      description: "Get a list of Team Match objects for a single event. Specify event\
        \ key ex: 2019ncwak"
      operationId: read_team_matches_event_v2_team_matches_event__event__get
      parameters:
      - explode: false
        in: path
        name: event
        required: true
        schema:
          title: Event
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Match objects. See /team_match/{team}/{match}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Matches Event
      tags:
      - v2/TeamMatch
  /v2/team_matches:
    get:
      description: Get a list of Team Match objects with optional filters
      operationId: read_team_matches_v2_team_matches_get
      parameters:
      - explode: true
        in: query
        name: team
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: year
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: event
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: week
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: match
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: elims
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: offseason
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: metric
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: ascending
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: "A list of Team Match objects. See /team_match/{team}/{match}\
            \ for more information."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Team Matches
      tags:
      - v2/TeamMatch
components:
  schemas:
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer

