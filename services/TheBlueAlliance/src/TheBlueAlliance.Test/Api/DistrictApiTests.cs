/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TheBlueAlliance.Client;
using TheBlueAlliance.Api;
// uncomment below to import models
//using TheBlueAlliance.Model;

namespace TheBlueAlliance.Test.Api


    /// <summary>
    ///  Class for testing DistrictApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DistrictApiTests : IDisposable
    {
        private DistrictApi instance;

        public DistrictApiTests()
        {
            instance = new DistrictApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DistrictApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DistrictApi
            //Assert.IsType<DistrictApi>(instance);
        }

        /// <summary>
        /// Test GetDistrictAwards
        /// </summary>
        [Fact]
        public void GetDistrictAwardsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictAwards(districtKey, ifNoneMatch);
            //Assert.IsType<Collection<Award>>(response);
        }

        /// <summary>
        /// Test GetDistrictEvents
        /// </summary>
        [Fact]
        public void GetDistrictEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictEvents(districtKey, ifNoneMatch);
            //Assert.IsType<Collection<Event>>(response);
        }

        /// <summary>
        /// Test GetDistrictEventsKeys
        /// </summary>
        [Fact]
        public void GetDistrictEventsKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictEventsKeys(districtKey, ifNoneMatch);
            //Assert.IsType<Collection<string>>(response);
        }

        /// <summary>
        /// Test GetDistrictEventsSimple
        /// </summary>
        [Fact]
        public void GetDistrictEventsSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictEventsSimple(districtKey, ifNoneMatch);
            //Assert.IsType<Collection<EventSimple>>(response);
        }

        /// <summary>
        /// Test GetDistrictHistory
        /// </summary>
        [Fact]
        public void GetDistrictHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtAbbreviation = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictHistory(districtAbbreviation, ifNoneMatch);
            //Assert.IsType<Collection<DistrictList>>(response);
        }

        /// <summary>
        /// Test GetDistrictRankings
        /// </summary>
        [Fact]
        public void GetDistrictRankingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictRankings(districtKey, ifNoneMatch);
            //Assert.IsType<Collection<DistrictRanking>>(response);
        }

        /// <summary>
        /// Test GetDistrictTeams
        /// </summary>
        [Fact]
        public void GetDistrictTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictTeams(districtKey, ifNoneMatch);
            //Assert.IsType<Collection<Team>>(response);
        }

        /// <summary>
        /// Test GetDistrictTeamsKeys
        /// </summary>
        [Fact]
        public void GetDistrictTeamsKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictTeamsKeys(districtKey, ifNoneMatch);
            //Assert.IsType<Collection<string>>(response);
        }

        /// <summary>
        /// Test GetDistrictTeamsSimple
        /// </summary>
        [Fact]
        public void GetDistrictTeamsSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string districtKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictTeamsSimple(districtKey, ifNoneMatch);
            //Assert.IsType<Collection<TeamSimple>>(response);
        }

        /// <summary>
        /// Test GetDistrictsByYear
        /// </summary>
        [Fact]
        public void GetDistrictsByYearTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int year = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetDistrictsByYear(year, ifNoneMatch);
            //Assert.IsType<Collection<DistrictList>>(response);
        }

        /// <summary>
        /// Test GetEventDistrictPoints
        /// </summary>
        [Fact]
        public void GetEventDistrictPointsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetEventDistrictPoints(eventKey, ifNoneMatch);
            //Assert.IsType<EventDistrictPoints>(response);
        }

        /// <summary>
        /// Test GetTeamDistricts
        /// </summary>
        [Fact]
        public void GetTeamDistrictsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamKey = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetTeamDistricts(teamKey, ifNoneMatch);
            //Assert.IsType<Collection<DistrictList>>(response);
        }
    }

