/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TheBlueAlliance.Client;
using TheBlueAlliance.Api;
// uncomment below to import models
//using TheBlueAlliance.Model;

namespace TheBlueAlliance.Test.Api


    /// <summary>
    ///  Class for testing InsightApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InsightApiTests : IDisposable
    {
        private InsightApi instance;

        public InsightApiTests()
        {
            instance = new InsightApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InsightApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InsightApi
            //Assert.IsType<InsightApi>(instance);
        }

        /// <summary>
        /// Test GetInsightsLeaderboardsYear
        /// </summary>
        [Fact]
        public void GetInsightsLeaderboardsYearTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int year = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetInsightsLeaderboardsYear(year, ifNoneMatch);
            //Assert.IsType<Collection<LeaderboardInsight>>(response);
        }

        /// <summary>
        /// Test GetInsightsNotablesYear
        /// </summary>
        [Fact]
        public void GetInsightsNotablesYearTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int year = null;
            //string? ifNoneMatch = null;
            //var response = instance.GetInsightsNotablesYear(year, ifNoneMatch);
            //Assert.IsType<Collection<NotablesInsight>>(response);
        }
    }

