/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TheBlueAlliance.Model;
using TheBlueAlliance.Client;
using System.Reflection;

namespace TheBlueAlliance.Test.Model


    /// <summary>
    ///  Class for testing MatchScoreBreakdown2023Alliance
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MatchScoreBreakdown2023AllianceTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MatchScoreBreakdown2023Alliance
        //private MatchScoreBreakdown2023Alliance instance;

        public MatchScoreBreakdown2023AllianceTests()
        {
            // TODO uncomment below to create an instance of MatchScoreBreakdown2023Alliance
            //instance = new MatchScoreBreakdown2023Alliance();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MatchScoreBreakdown2023Alliance
        /// </summary>
        [Fact]
        public void MatchScoreBreakdown2023AllianceInstanceTest()
        {
            // TODO uncomment below to test "IsType" MatchScoreBreakdown2023Alliance
            //Assert.IsType<MatchScoreBreakdown2023Alliance>(instance);
        }



        /// <summary>
        /// Test the property 'ActivationBonusAchieved'
        /// </summary>
        [Fact]
        public void ActivationBonusAchievedTest()
        {
            // TODO unit test for the property 'ActivationBonusAchieved'
        }


        /// <summary>
        /// Test the property 'AdjustPoints'
        /// </summary>
        [Fact]
        public void AdjustPointsTest()
        {
            // TODO unit test for the property 'AdjustPoints'
        }


        /// <summary>
        /// Test the property 'AutoBridgeState'
        /// </summary>
        [Fact]
        public void AutoBridgeStateTest()
        {
            // TODO unit test for the property 'AutoBridgeState'
        }


        /// <summary>
        /// Test the property 'AutoChargeStationPoints'
        /// </summary>
        [Fact]
        public void AutoChargeStationPointsTest()
        {
            // TODO unit test for the property 'AutoChargeStationPoints'
        }


        /// <summary>
        /// Test the property 'AutoChargeStationRobot1'
        /// </summary>
        [Fact]
        public void AutoChargeStationRobot1Test()
        {
            // TODO unit test for the property 'AutoChargeStationRobot1'
        }


        /// <summary>
        /// Test the property 'AutoChargeStationRobot2'
        /// </summary>
        [Fact]
        public void AutoChargeStationRobot2Test()
        {
            // TODO unit test for the property 'AutoChargeStationRobot2'
        }


        /// <summary>
        /// Test the property 'AutoChargeStationRobot3'
        /// </summary>
        [Fact]
        public void AutoChargeStationRobot3Test()
        {
            // TODO unit test for the property 'AutoChargeStationRobot3'
        }


        /// <summary>
        /// Test the property 'AutoCommunity'
        /// </summary>
        [Fact]
        public void AutoCommunityTest()
        {
            // TODO unit test for the property 'AutoCommunity'
        }


        /// <summary>
        /// Test the property 'AutoDocked'
        /// </summary>
        [Fact]
        public void AutoDockedTest()
        {
            // TODO unit test for the property 'AutoDocked'
        }


        /// <summary>
        /// Test the property 'AutoGamePieceCount'
        /// </summary>
        [Fact]
        public void AutoGamePieceCountTest()
        {
            // TODO unit test for the property 'AutoGamePieceCount'
        }


        /// <summary>
        /// Test the property 'AutoGamePiecePoints'
        /// </summary>
        [Fact]
        public void AutoGamePiecePointsTest()
        {
            // TODO unit test for the property 'AutoGamePiecePoints'
        }


        /// <summary>
        /// Test the property 'AutoMobilityPoints'
        /// </summary>
        [Fact]
        public void AutoMobilityPointsTest()
        {
            // TODO unit test for the property 'AutoMobilityPoints'
        }


        /// <summary>
        /// Test the property 'AutoPoints'
        /// </summary>
        [Fact]
        public void AutoPointsTest()
        {
            // TODO unit test for the property 'AutoPoints'
        }


        /// <summary>
        /// Test the property 'CoopGamePieceCount'
        /// </summary>
        [Fact]
        public void CoopGamePieceCountTest()
        {
            // TODO unit test for the property 'CoopGamePieceCount'
        }


        /// <summary>
        /// Test the property 'CoopertitionCriteriaMet'
        /// </summary>
        [Fact]
        public void CoopertitionCriteriaMetTest()
        {
            // TODO unit test for the property 'CoopertitionCriteriaMet'
        }


        /// <summary>
        /// Test the property 'EndGameBridgeState'
        /// </summary>
        [Fact]
        public void EndGameBridgeStateTest()
        {
            // TODO unit test for the property 'EndGameBridgeState'
        }


        /// <summary>
        /// Test the property 'EndGameChargeStationPoints'
        /// </summary>
        [Fact]
        public void EndGameChargeStationPointsTest()
        {
            // TODO unit test for the property 'EndGameChargeStationPoints'
        }


        /// <summary>
        /// Test the property 'EndGameChargeStationRobot1'
        /// </summary>
        [Fact]
        public void EndGameChargeStationRobot1Test()
        {
            // TODO unit test for the property 'EndGameChargeStationRobot1'
        }


        /// <summary>
        /// Test the property 'EndGameChargeStationRobot2'
        /// </summary>
        [Fact]
        public void EndGameChargeStationRobot2Test()
        {
            // TODO unit test for the property 'EndGameChargeStationRobot2'
        }


        /// <summary>
        /// Test the property 'EndGameChargeStationRobot3'
        /// </summary>
        [Fact]
        public void EndGameChargeStationRobot3Test()
        {
            // TODO unit test for the property 'EndGameChargeStationRobot3'
        }


        /// <summary>
        /// Test the property 'EndGameParkPoints'
        /// </summary>
        [Fact]
        public void EndGameParkPointsTest()
        {
            // TODO unit test for the property 'EndGameParkPoints'
        }


        /// <summary>
        /// Test the property 'ExtraGamePieceCount'
        /// </summary>
        [Fact]
        public void ExtraGamePieceCountTest()
        {
            // TODO unit test for the property 'ExtraGamePieceCount'
        }


        /// <summary>
        /// Test the property 'FoulCount'
        /// </summary>
        [Fact]
        public void FoulCountTest()
        {
            // TODO unit test for the property 'FoulCount'
        }


        /// <summary>
        /// Test the property 'FoulPoints'
        /// </summary>
        [Fact]
        public void FoulPointsTest()
        {
            // TODO unit test for the property 'FoulPoints'
        }


        /// <summary>
        /// Test the property 'LinkPoints'
        /// </summary>
        [Fact]
        public void LinkPointsTest()
        {
            // TODO unit test for the property 'LinkPoints'
        }


        /// <summary>
        /// Test the property 'Links'
        /// </summary>
        [Fact]
        public void LinksTest()
        {
            // TODO unit test for the property 'Links'
        }


        /// <summary>
        /// Test the property 'MobilityRobot1'
        /// </summary>
        [Fact]
        public void MobilityRobot1Test()
        {
            // TODO unit test for the property 'MobilityRobot1'
        }


        /// <summary>
        /// Test the property 'MobilityRobot2'
        /// </summary>
        [Fact]
        public void MobilityRobot2Test()
        {
            // TODO unit test for the property 'MobilityRobot2'
        }


        /// <summary>
        /// Test the property 'MobilityRobot3'
        /// </summary>
        [Fact]
        public void MobilityRobot3Test()
        {
            // TODO unit test for the property 'MobilityRobot3'
        }


        /// <summary>
        /// Test the property 'Rp'
        /// </summary>
        [Fact]
        public void RpTest()
        {
            // TODO unit test for the property 'Rp'
        }


        /// <summary>
        /// Test the property 'SustainabilityBonusAchieved'
        /// </summary>
        [Fact]
        public void SustainabilityBonusAchievedTest()
        {
            // TODO unit test for the property 'SustainabilityBonusAchieved'
        }


        /// <summary>
        /// Test the property 'TechFoulCount'
        /// </summary>
        [Fact]
        public void TechFoulCountTest()
        {
            // TODO unit test for the property 'TechFoulCount'
        }


        /// <summary>
        /// Test the property 'TeleopCommunity'
        /// </summary>
        [Fact]
        public void TeleopCommunityTest()
        {
            // TODO unit test for the property 'TeleopCommunity'
        }


        /// <summary>
        /// Test the property 'TeleopGamePieceCount'
        /// </summary>
        [Fact]
        public void TeleopGamePieceCountTest()
        {
            // TODO unit test for the property 'TeleopGamePieceCount'
        }


        /// <summary>
        /// Test the property 'TeleopGamePiecePoints'
        /// </summary>
        [Fact]
        public void TeleopGamePiecePointsTest()
        {
            // TODO unit test for the property 'TeleopGamePiecePoints'
        }


        /// <summary>
        /// Test the property 'TeleopPoints'
        /// </summary>
        [Fact]
        public void TeleopPointsTest()
        {
            // TODO unit test for the property 'TeleopPoints'
        }


        /// <summary>
        /// Test the property 'TotalChargeStationPoints'
        /// </summary>
        [Fact]
        public void TotalChargeStationPointsTest()
        {
            // TODO unit test for the property 'TotalChargeStationPoints'
        }


        /// <summary>
        /// Test the property 'TotalPoints'
        /// </summary>
        [Fact]
        public void TotalPointsTest()
        {
            // TODO unit test for the property 'TotalPoints'
        }
    }
}
