/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.11
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TheBlueAlliance.Model;
using TheBlueAlliance.Client;
using System.Reflection;

namespace TheBlueAlliance.Test.Model


    /// <summary>
    ///  Class for testing MatchScoreBreakdown2025Alliance
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MatchScoreBreakdown2025AllianceTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MatchScoreBreakdown2025Alliance
        //private MatchScoreBreakdown2025Alliance instance;

        public MatchScoreBreakdown2025AllianceTests()
        {
            // TODO uncomment below to create an instance of MatchScoreBreakdown2025Alliance
            //instance = new MatchScoreBreakdown2025Alliance();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MatchScoreBreakdown2025Alliance
        /// </summary>
        [Fact]
        public void MatchScoreBreakdown2025AllianceInstanceTest()
        {
            // TODO uncomment below to test "IsType" MatchScoreBreakdown2025Alliance
            //Assert.IsType<MatchScoreBreakdown2025Alliance>(instance);
        }



        /// <summary>
        /// Test the property 'AdjustPoints'
        /// </summary>
        [Fact]
        public void AdjustPointsTest()
        {
            // TODO unit test for the property 'AdjustPoints'
        }


        /// <summary>
        /// Test the property 'AlgaePoints'
        /// </summary>
        [Fact]
        public void AlgaePointsTest()
        {
            // TODO unit test for the property 'AlgaePoints'
        }


        /// <summary>
        /// Test the property 'AutoBonusAchieved'
        /// </summary>
        [Fact]
        public void AutoBonusAchievedTest()
        {
            // TODO unit test for the property 'AutoBonusAchieved'
        }


        /// <summary>
        /// Test the property 'AutoCoralCount'
        /// </summary>
        [Fact]
        public void AutoCoralCountTest()
        {
            // TODO unit test for the property 'AutoCoralCount'
        }


        /// <summary>
        /// Test the property 'AutoCoralPoints'
        /// </summary>
        [Fact]
        public void AutoCoralPointsTest()
        {
            // TODO unit test for the property 'AutoCoralPoints'
        }


        /// <summary>
        /// Test the property 'AutoLineRobot1'
        /// </summary>
        [Fact]
        public void AutoLineRobot1Test()
        {
            // TODO unit test for the property 'AutoLineRobot1'
        }


        /// <summary>
        /// Test the property 'AutoLineRobot2'
        /// </summary>
        [Fact]
        public void AutoLineRobot2Test()
        {
            // TODO unit test for the property 'AutoLineRobot2'
        }


        /// <summary>
        /// Test the property 'AutoLineRobot3'
        /// </summary>
        [Fact]
        public void AutoLineRobot3Test()
        {
            // TODO unit test for the property 'AutoLineRobot3'
        }


        /// <summary>
        /// Test the property 'AutoMobilityPoints'
        /// </summary>
        [Fact]
        public void AutoMobilityPointsTest()
        {
            // TODO unit test for the property 'AutoMobilityPoints'
        }


        /// <summary>
        /// Test the property 'AutoPoints'
        /// </summary>
        [Fact]
        public void AutoPointsTest()
        {
            // TODO unit test for the property 'AutoPoints'
        }


        /// <summary>
        /// Test the property 'AutoReef'
        /// </summary>
        [Fact]
        public void AutoReefTest()
        {
            // TODO unit test for the property 'AutoReef'
        }


        /// <summary>
        /// Test the property 'BargeBonusAchieved'
        /// </summary>
        [Fact]
        public void BargeBonusAchievedTest()
        {
            // TODO unit test for the property 'BargeBonusAchieved'
        }


        /// <summary>
        /// Test the property 'CoopertitionCriteriaMet'
        /// </summary>
        [Fact]
        public void CoopertitionCriteriaMetTest()
        {
            // TODO unit test for the property 'CoopertitionCriteriaMet'
        }


        /// <summary>
        /// Test the property 'CoralBonusAchieved'
        /// </summary>
        [Fact]
        public void CoralBonusAchievedTest()
        {
            // TODO unit test for the property 'CoralBonusAchieved'
        }


        /// <summary>
        /// Test the property 'EndGameBargePoints'
        /// </summary>
        [Fact]
        public void EndGameBargePointsTest()
        {
            // TODO unit test for the property 'EndGameBargePoints'
        }


        /// <summary>
        /// Test the property 'EndGameRobot1'
        /// </summary>
        [Fact]
        public void EndGameRobot1Test()
        {
            // TODO unit test for the property 'EndGameRobot1'
        }


        /// <summary>
        /// Test the property 'EndGameRobot2'
        /// </summary>
        [Fact]
        public void EndGameRobot2Test()
        {
            // TODO unit test for the property 'EndGameRobot2'
        }


        /// <summary>
        /// Test the property 'EndGameRobot3'
        /// </summary>
        [Fact]
        public void EndGameRobot3Test()
        {
            // TODO unit test for the property 'EndGameRobot3'
        }


        /// <summary>
        /// Test the property 'FoulCount'
        /// </summary>
        [Fact]
        public void FoulCountTest()
        {
            // TODO unit test for the property 'FoulCount'
        }


        /// <summary>
        /// Test the property 'FoulPoints'
        /// </summary>
        [Fact]
        public void FoulPointsTest()
        {
            // TODO unit test for the property 'FoulPoints'
        }


        /// <summary>
        /// Test the property 'G206Penalty'
        /// </summary>
        [Fact]
        public void G206PenaltyTest()
        {
            // TODO unit test for the property 'G206Penalty'
        }


        /// <summary>
        /// Test the property 'G408Penalty'
        /// </summary>
        [Fact]
        public void G408PenaltyTest()
        {
            // TODO unit test for the property 'G408Penalty'
        }


        /// <summary>
        /// Test the property 'G424Penalty'
        /// </summary>
        [Fact]
        public void G424PenaltyTest()
        {
            // TODO unit test for the property 'G424Penalty'
        }


        /// <summary>
        /// Test the property 'NetAlgaeCount'
        /// </summary>
        [Fact]
        public void NetAlgaeCountTest()
        {
            // TODO unit test for the property 'NetAlgaeCount'
        }


        /// <summary>
        /// Test the property 'Rp'
        /// </summary>
        [Fact]
        public void RpTest()
        {
            // TODO unit test for the property 'Rp'
        }


        /// <summary>
        /// Test the property 'TechFoulCount'
        /// </summary>
        [Fact]
        public void TechFoulCountTest()
        {
            // TODO unit test for the property 'TechFoulCount'
        }


        /// <summary>
        /// Test the property 'TeleopCoralCount'
        /// </summary>
        [Fact]
        public void TeleopCoralCountTest()
        {
            // TODO unit test for the property 'TeleopCoralCount'
        }


        /// <summary>
        /// Test the property 'TeleopCoralPoints'
        /// </summary>
        [Fact]
        public void TeleopCoralPointsTest()
        {
            // TODO unit test for the property 'TeleopCoralPoints'
        }


        /// <summary>
        /// Test the property 'TeleopPoints'
        /// </summary>
        [Fact]
        public void TeleopPointsTest()
        {
            // TODO unit test for the property 'TeleopPoints'
        }


        /// <summary>
        /// Test the property 'TeleopReef'
        /// </summary>
        [Fact]
        public void TeleopReefTest()
        {
            // TODO unit test for the property 'TeleopReef'
        }


        /// <summary>
        /// Test the property 'TotalPoints'
        /// </summary>
        [Fact]
        public void TotalPointsTest()
        {
            // TODO unit test for the property 'TotalPoints'
        }


        /// <summary>
        /// Test the property 'WallAlgaeCount'
        /// </summary>
        [Fact]
        public void WallAlgaeCountTest()
        {
            // TODO unit test for the property 'WallAlgaeCount'
        }
    }
}
