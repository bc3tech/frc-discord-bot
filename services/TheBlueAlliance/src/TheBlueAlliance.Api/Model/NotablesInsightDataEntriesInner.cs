/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// NotablesInsightDataEntriesInner
/// </summary>
public partial class NotablesInsightDataEntriesInner : IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="NotablesInsightDataEntriesInner" /> class.
    /// </summary>
    [JsonConstructor]
    protected NotablesInsightDataEntriesInner() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="NotablesInsightDataEntriesInner" /> class.
    /// </summary>
    /// <param name="context">A list of events this team achieved the notable at. This type may change over time. (required).</param>
    /// <param name="teamKey">teamKey (required).</param>
    public NotablesInsightDataEntriesInner(List<string>? context = default, string? teamKey = default)
    {
        // to ensure "context" is required (not null)
        ArgumentNullException.ThrowIfNull(context);
        this.Context = context;
        // to ensure "teamKey" is required (not null)
        ArgumentNullException.ThrowIfNull(teamKey);
        this.TeamKey = teamKey;
    }

    /// <summary>
    /// A list of events this team achieved the notable at. This type may change over time.
    /// </summary>
    /// <value>A list of events this team achieved the notable at. This type may change over time.</value>
    [JsonPropertyName("context")]
    public List<string> Context { get; set; }

    /// <summary>
    /// Gets or Sets TeamKey
    /// </summary>
    [JsonPropertyName("team_key")]
    public string TeamKey { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class NotablesInsightDataEntriesInner {");
        sb.Append("  Context: ").AppendLine(Context.ToString());
        sb.Append("  TeamKey: ").AppendLine(TeamKey.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
