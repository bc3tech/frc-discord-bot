/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// MatchScoreBreakdown2022Alliance
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="MatchScoreBreakdown2022Alliance" /> class.
/// </remarks>
/// <param name="taxiRobot1">taxiRobot1.</param>
/// <param name="endgameRobot1">endgameRobot1.</param>
/// <param name="taxiRobot2">taxiRobot2.</param>
/// <param name="endgameRobot2">endgameRobot2.</param>
/// <param name="taxiRobot3">taxiRobot3.</param>
/// <param name="endgameRobot3">endgameRobot3.</param>
/// <param name="autoCargoLowerNear">autoCargoLowerNear.</param>
/// <param name="autoCargoLowerFar">autoCargoLowerFar.</param>
/// <param name="autoCargoLowerBlue">autoCargoLowerBlue.</param>
/// <param name="autoCargoLowerRed">autoCargoLowerRed.</param>
/// <param name="autoCargoUpperNear">autoCargoUpperNear.</param>
/// <param name="autoCargoUpperFar">autoCargoUpperFar.</param>
/// <param name="autoCargoUpperBlue">autoCargoUpperBlue.</param>
/// <param name="autoCargoUpperRed">autoCargoUpperRed.</param>
/// <param name="autoCargoTotal">autoCargoTotal.</param>
/// <param name="teleopCargoLowerNear">teleopCargoLowerNear.</param>
/// <param name="teleopCargoLowerFar">teleopCargoLowerFar.</param>
/// <param name="teleopCargoLowerBlue">teleopCargoLowerBlue.</param>
/// <param name="teleopCargoLowerRed">teleopCargoLowerRed.</param>
/// <param name="teleopCargoUpperNear">teleopCargoUpperNear.</param>
/// <param name="teleopCargoUpperFar">teleopCargoUpperFar.</param>
/// <param name="teleopCargoUpperBlue">teleopCargoUpperBlue.</param>
/// <param name="teleopCargoUpperRed">teleopCargoUpperRed.</param>
/// <param name="teleopCargoTotal">teleopCargoTotal.</param>
/// <param name="matchCargoTotal">matchCargoTotal.</param>
/// <param name="autoTaxiPoints">autoTaxiPoints.</param>
/// <param name="autoCargoPoints">autoCargoPoints.</param>
/// <param name="autoPoints">autoPoints.</param>
/// <param name="quintetAchieved">quintetAchieved.</param>
/// <param name="teleopCargoPoints">teleopCargoPoints.</param>
/// <param name="endgamePoints">endgamePoints.</param>
/// <param name="teleopPoints">teleopPoints.</param>
/// <param name="cargoBonusRankingPoint">cargoBonusRankingPoint.</param>
/// <param name="hangarBonusRankingPoint">hangarBonusRankingPoint.</param>
/// <param name="foulCount">foulCount.</param>
/// <param name="techFoulCount">techFoulCount.</param>
/// <param name="adjustPoints">adjustPoints.</param>
/// <param name="foulPoints">foulPoints.</param>
/// <param name="rp">rp.</param>
/// <param name="totalPoints">totalPoints.</param>
public partial class MatchScoreBreakdown2022Alliance(MatchScoreBreakdown2022Alliance.TaxiRobot1Enum? taxiRobot1 = default, MatchScoreBreakdown2022Alliance.EndgameRobot1Enum? endgameRobot1 = default, MatchScoreBreakdown2022Alliance.TaxiRobot2Enum? taxiRobot2 = default, MatchScoreBreakdown2022Alliance.EndgameRobot2Enum? endgameRobot2 = default, MatchScoreBreakdown2022Alliance.TaxiRobot3Enum? taxiRobot3 = default, MatchScoreBreakdown2022Alliance.EndgameRobot3Enum? endgameRobot3 = default, int autoCargoLowerNear = default, int autoCargoLowerFar = default, int autoCargoLowerBlue = default, int autoCargoLowerRed = default, int autoCargoUpperNear = default, int autoCargoUpperFar = default, int autoCargoUpperBlue = default, int autoCargoUpperRed = default, int autoCargoTotal = default, int teleopCargoLowerNear = default, int teleopCargoLowerFar = default, int teleopCargoLowerBlue = default, int teleopCargoLowerRed = default, int teleopCargoUpperNear = default, int teleopCargoUpperFar = default, int teleopCargoUpperBlue = default, int teleopCargoUpperRed = default, int teleopCargoTotal = default, int matchCargoTotal = default, int autoTaxiPoints = default, int autoCargoPoints = default, int autoPoints = default, bool quintetAchieved = default, int teleopCargoPoints = default, int endgamePoints = default, int teleopPoints = default, bool cargoBonusRankingPoint = default, bool hangarBonusRankingPoint = default, int foulCount = default, int techFoulCount = default, int adjustPoints = default, int foulPoints = default, int rp = default, int totalPoints = default) : IValidatableObject
{
    /// <summary>
    /// Defines TaxiRobot1
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<TaxiRobot1Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum TaxiRobot1Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Gets or Sets TaxiRobot1
    /// </summary>

    [JsonPropertyName("taxiRobot1")]
    public TaxiRobot1Enum? TaxiRobot1 { get; set; } = taxiRobot1;
    /// <summary>
    /// Defines EndgameRobot1
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<EndgameRobot1Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum EndgameRobot1Enum
    {
        /// <summary>
        /// Enum Traversal for value: Traversal
        /// </summary>
        [EnumMember(Value = "Traversal")]
        Traversal = 1,

        /// <summary>
        /// Enum High for value: High
        /// </summary>
        [EnumMember(Value = "High")]
        High = 2,

        /// <summary>
        /// Enum Mid for value: Mid
        /// </summary>
        [EnumMember(Value = "Mid")]
        Mid = 3,

        /// <summary>
        /// Enum Low for value: Low
        /// </summary>
        [EnumMember(Value = "Low")]
        Low = 4,

        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 5
    }

    /// <summary>
    /// Gets or Sets EndgameRobot1
    /// </summary>

    [JsonPropertyName("endgameRobot1")]
    public EndgameRobot1Enum? EndgameRobot1 { get; set; } = endgameRobot1;
    /// <summary>
    /// Defines TaxiRobot2
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<TaxiRobot2Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum TaxiRobot2Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Gets or Sets TaxiRobot2
    /// </summary>

    [JsonPropertyName("taxiRobot2")]
    public TaxiRobot2Enum? TaxiRobot2 { get; set; } = taxiRobot2;
    /// <summary>
    /// Defines EndgameRobot2
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<EndgameRobot2Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum EndgameRobot2Enum
    {
        /// <summary>
        /// Enum Traversal for value: Traversal
        /// </summary>
        [EnumMember(Value = "Traversal")]
        Traversal = 1,

        /// <summary>
        /// Enum High for value: High
        /// </summary>
        [EnumMember(Value = "High")]
        High = 2,

        /// <summary>
        /// Enum Mid for value: Mid
        /// </summary>
        [EnumMember(Value = "Mid")]
        Mid = 3,

        /// <summary>
        /// Enum Low for value: Low
        /// </summary>
        [EnumMember(Value = "Low")]
        Low = 4,

        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 5
    }

    /// <summary>
    /// Gets or Sets EndgameRobot2
    /// </summary>

    [JsonPropertyName("endgameRobot2")]
    public EndgameRobot2Enum? EndgameRobot2 { get; set; } = endgameRobot2;
    /// <summary>
    /// Defines TaxiRobot3
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<TaxiRobot3Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum TaxiRobot3Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Gets or Sets TaxiRobot3
    /// </summary>

    [JsonPropertyName("taxiRobot3")]
    public TaxiRobot3Enum? TaxiRobot3 { get; set; } = taxiRobot3;
    /// <summary>
    /// Defines EndgameRobot3
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<EndgameRobot3Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum EndgameRobot3Enum
    {
        /// <summary>
        /// Enum Traversal for value: Traversal
        /// </summary>
        [EnumMember(Value = "Traversal")]
        Traversal = 1,

        /// <summary>
        /// Enum High for value: High
        /// </summary>
        [EnumMember(Value = "High")]
        High = 2,

        /// <summary>
        /// Enum Mid for value: Mid
        /// </summary>
        [EnumMember(Value = "Mid")]
        Mid = 3,

        /// <summary>
        /// Enum Low for value: Low
        /// </summary>
        [EnumMember(Value = "Low")]
        Low = 4,

        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 5
    }

    /// <summary>
    /// Gets or Sets EndgameRobot3
    /// </summary>

    [JsonPropertyName("endgameRobot3")]
    public EndgameRobot3Enum? EndgameRobot3 { get; set; } = endgameRobot3;

    /// <summary>
    /// Gets or Sets AutoCargoLowerNear
    /// </summary>

    [JsonPropertyName("autoCargoLowerNear")]
    public int AutoCargoLowerNear { get; set; } = autoCargoLowerNear;

    /// <summary>
    /// Gets or Sets AutoCargoLowerFar
    /// </summary>

    [JsonPropertyName("autoCargoLowerFar")]
    public int AutoCargoLowerFar { get; set; } = autoCargoLowerFar;

    /// <summary>
    /// Gets or Sets AutoCargoLowerBlue
    /// </summary>

    [JsonPropertyName("autoCargoLowerBlue")]
    public int AutoCargoLowerBlue { get; set; } = autoCargoLowerBlue;

    /// <summary>
    /// Gets or Sets AutoCargoLowerRed
    /// </summary>

    [JsonPropertyName("autoCargoLowerRed")]
    public int AutoCargoLowerRed { get; set; } = autoCargoLowerRed;

    /// <summary>
    /// Gets or Sets AutoCargoUpperNear
    /// </summary>

    [JsonPropertyName("autoCargoUpperNear")]
    public int AutoCargoUpperNear { get; set; } = autoCargoUpperNear;

    /// <summary>
    /// Gets or Sets AutoCargoUpperFar
    /// </summary>

    [JsonPropertyName("autoCargoUpperFar")]
    public int AutoCargoUpperFar { get; set; } = autoCargoUpperFar;

    /// <summary>
    /// Gets or Sets AutoCargoUpperBlue
    /// </summary>

    [JsonPropertyName("autoCargoUpperBlue")]
    public int AutoCargoUpperBlue { get; set; } = autoCargoUpperBlue;

    /// <summary>
    /// Gets or Sets AutoCargoUpperRed
    /// </summary>

    [JsonPropertyName("autoCargoUpperRed")]
    public int AutoCargoUpperRed { get; set; } = autoCargoUpperRed;

    /// <summary>
    /// Gets or Sets AutoCargoTotal
    /// </summary>

    [JsonPropertyName("autoCargoTotal")]
    public int AutoCargoTotal { get; set; } = autoCargoTotal;

    /// <summary>
    /// Gets or Sets TeleopCargoLowerNear
    /// </summary>

    [JsonPropertyName("teleopCargoLowerNear")]
    public int TeleopCargoLowerNear { get; set; } = teleopCargoLowerNear;

    /// <summary>
    /// Gets or Sets TeleopCargoLowerFar
    /// </summary>

    [JsonPropertyName("teleopCargoLowerFar")]
    public int TeleopCargoLowerFar { get; set; } = teleopCargoLowerFar;

    /// <summary>
    /// Gets or Sets TeleopCargoLowerBlue
    /// </summary>

    [JsonPropertyName("teleopCargoLowerBlue")]
    public int TeleopCargoLowerBlue { get; set; } = teleopCargoLowerBlue;

    /// <summary>
    /// Gets or Sets TeleopCargoLowerRed
    /// </summary>

    [JsonPropertyName("teleopCargoLowerRed")]
    public int TeleopCargoLowerRed { get; set; } = teleopCargoLowerRed;

    /// <summary>
    /// Gets or Sets TeleopCargoUpperNear
    /// </summary>

    [JsonPropertyName("teleopCargoUpperNear")]
    public int TeleopCargoUpperNear { get; set; } = teleopCargoUpperNear;

    /// <summary>
    /// Gets or Sets TeleopCargoUpperFar
    /// </summary>

    [JsonPropertyName("teleopCargoUpperFar")]
    public int TeleopCargoUpperFar { get; set; } = teleopCargoUpperFar;

    /// <summary>
    /// Gets or Sets TeleopCargoUpperBlue
    /// </summary>

    [JsonPropertyName("teleopCargoUpperBlue")]
    public int TeleopCargoUpperBlue { get; set; } = teleopCargoUpperBlue;

    /// <summary>
    /// Gets or Sets TeleopCargoUpperRed
    /// </summary>

    [JsonPropertyName("teleopCargoUpperRed")]
    public int TeleopCargoUpperRed { get; set; } = teleopCargoUpperRed;

    /// <summary>
    /// Gets or Sets TeleopCargoTotal
    /// </summary>

    [JsonPropertyName("teleopCargoTotal")]
    public int TeleopCargoTotal { get; set; } = teleopCargoTotal;

    /// <summary>
    /// Gets or Sets MatchCargoTotal
    /// </summary>

    [JsonPropertyName("matchCargoTotal")]
    public int MatchCargoTotal { get; set; } = matchCargoTotal;

    /// <summary>
    /// Gets or Sets AutoTaxiPoints
    /// </summary>

    [JsonPropertyName("autoTaxiPoints")]
    public int AutoTaxiPoints { get; set; } = autoTaxiPoints;

    /// <summary>
    /// Gets or Sets AutoCargoPoints
    /// </summary>

    [JsonPropertyName("autoCargoPoints")]
    public int AutoCargoPoints { get; set; } = autoCargoPoints;

    /// <summary>
    /// Gets or Sets AutoPoints
    /// </summary>

    [JsonPropertyName("autoPoints")]
    public int AutoPoints { get; set; } = autoPoints;

    /// <summary>
    /// Gets or Sets QuintetAchieved
    /// </summary>

    [JsonPropertyName("quintetAchieved")]
    public bool QuintetAchieved { get; set; } = quintetAchieved;

    /// <summary>
    /// Gets or Sets TeleopCargoPoints
    /// </summary>

    [JsonPropertyName("teleopCargoPoints")]
    public int TeleopCargoPoints { get; set; } = teleopCargoPoints;

    /// <summary>
    /// Gets or Sets EndgamePoints
    /// </summary>

    [JsonPropertyName("endgamePoints")]
    public int EndgamePoints { get; set; } = endgamePoints;

    /// <summary>
    /// Gets or Sets TeleopPoints
    /// </summary>

    [JsonPropertyName("teleopPoints")]
    public int TeleopPoints { get; set; } = teleopPoints;

    /// <summary>
    /// Gets or Sets CargoBonusRankingPoint
    /// </summary>

    [JsonPropertyName("cargoBonusRankingPoint")]
    public bool CargoBonusRankingPoint { get; set; } = cargoBonusRankingPoint;

    /// <summary>
    /// Gets or Sets HangarBonusRankingPoint
    /// </summary>

    [JsonPropertyName("hangarBonusRankingPoint")]
    public bool HangarBonusRankingPoint { get; set; } = hangarBonusRankingPoint;

    /// <summary>
    /// Gets or Sets FoulCount
    /// </summary>

    [JsonPropertyName("foulCount")]
    public int FoulCount { get; set; } = foulCount;

    /// <summary>
    /// Gets or Sets TechFoulCount
    /// </summary>

    [JsonPropertyName("techFoulCount")]
    public int TechFoulCount { get; set; } = techFoulCount;

    /// <summary>
    /// Gets or Sets AdjustPoints
    /// </summary>

    [JsonPropertyName("adjustPoints")]
    public int AdjustPoints { get; set; } = adjustPoints;

    /// <summary>
    /// Gets or Sets FoulPoints
    /// </summary>

    [JsonPropertyName("foulPoints")]
    public int FoulPoints { get; set; } = foulPoints;

    /// <summary>
    /// Gets or Sets Rp
    /// </summary>

    [JsonPropertyName("rp")]
    public int Rp { get; set; } = rp;

    /// <summary>
    /// Gets or Sets TotalPoints
    /// </summary>

    [JsonPropertyName("totalPoints")]
    public int TotalPoints { get; set; } = totalPoints;

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class MatchScoreBreakdown2022Alliance {");
        sb.Append("  TaxiRobot1: ").AppendLine(TaxiRobot1.ToString());
        sb.Append("  EndgameRobot1: ").AppendLine(EndgameRobot1.ToString());
        sb.Append("  TaxiRobot2: ").AppendLine(TaxiRobot2.ToString());
        sb.Append("  EndgameRobot2: ").AppendLine(EndgameRobot2.ToString());
        sb.Append("  TaxiRobot3: ").AppendLine(TaxiRobot3.ToString());
        sb.Append("  EndgameRobot3: ").AppendLine(EndgameRobot3.ToString());
        sb.Append("  AutoCargoLowerNear: ").AppendLine(AutoCargoLowerNear.ToString());
        sb.Append("  AutoCargoLowerFar: ").AppendLine(AutoCargoLowerFar.ToString());
        sb.Append("  AutoCargoLowerBlue: ").AppendLine(AutoCargoLowerBlue.ToString());
        sb.Append("  AutoCargoLowerRed: ").AppendLine(AutoCargoLowerRed.ToString());
        sb.Append("  AutoCargoUpperNear: ").AppendLine(AutoCargoUpperNear.ToString());
        sb.Append("  AutoCargoUpperFar: ").AppendLine(AutoCargoUpperFar.ToString());
        sb.Append("  AutoCargoUpperBlue: ").AppendLine(AutoCargoUpperBlue.ToString());
        sb.Append("  AutoCargoUpperRed: ").AppendLine(AutoCargoUpperRed.ToString());
        sb.Append("  AutoCargoTotal: ").AppendLine(AutoCargoTotal.ToString());
        sb.Append("  TeleopCargoLowerNear: ").AppendLine(TeleopCargoLowerNear.ToString());
        sb.Append("  TeleopCargoLowerFar: ").AppendLine(TeleopCargoLowerFar.ToString());
        sb.Append("  TeleopCargoLowerBlue: ").AppendLine(TeleopCargoLowerBlue.ToString());
        sb.Append("  TeleopCargoLowerRed: ").AppendLine(TeleopCargoLowerRed.ToString());
        sb.Append("  TeleopCargoUpperNear: ").AppendLine(TeleopCargoUpperNear.ToString());
        sb.Append("  TeleopCargoUpperFar: ").AppendLine(TeleopCargoUpperFar.ToString());
        sb.Append("  TeleopCargoUpperBlue: ").AppendLine(TeleopCargoUpperBlue.ToString());
        sb.Append("  TeleopCargoUpperRed: ").AppendLine(TeleopCargoUpperRed.ToString());
        sb.Append("  TeleopCargoTotal: ").AppendLine(TeleopCargoTotal.ToString());
        sb.Append("  MatchCargoTotal: ").AppendLine(MatchCargoTotal.ToString());
        sb.Append("  AutoTaxiPoints: ").AppendLine(AutoTaxiPoints.ToString());
        sb.Append("  AutoCargoPoints: ").AppendLine(AutoCargoPoints.ToString());
        sb.Append("  AutoPoints: ").AppendLine(AutoPoints.ToString());
        sb.Append("  QuintetAchieved: ").AppendLine(QuintetAchieved.ToString());
        sb.Append("  TeleopCargoPoints: ").AppendLine(TeleopCargoPoints.ToString());
        sb.Append("  EndgamePoints: ").AppendLine(EndgamePoints.ToString());
        sb.Append("  TeleopPoints: ").AppendLine(TeleopPoints.ToString());
        sb.Append("  CargoBonusRankingPoint: ").AppendLine(CargoBonusRankingPoint.ToString());
        sb.Append("  HangarBonusRankingPoint: ").AppendLine(HangarBonusRankingPoint.ToString());
        sb.Append("  FoulCount: ").AppendLine(FoulCount.ToString());
        sb.Append("  TechFoulCount: ").AppendLine(TechFoulCount.ToString());
        sb.Append("  AdjustPoints: ").AppendLine(AdjustPoints.ToString());
        sb.Append("  FoulPoints: ").AppendLine(FoulPoints.ToString());
        sb.Append("  Rp: ").AppendLine(Rp.ToString());
        sb.Append("  TotalPoints: ").AppendLine(TotalPoints.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
