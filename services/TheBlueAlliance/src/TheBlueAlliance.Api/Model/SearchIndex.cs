/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// SearchIndex
/// </summary>
public partial class SearchIndex : IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="SearchIndex" /> class.
    /// </summary>
    [JsonConstructor]
    protected SearchIndex() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="SearchIndex" /> class.
    /// </summary>
    /// <param name="teams">teams (required).</param>
    /// <param name="events">events (required).</param>
    public SearchIndex(List<SearchIndexTeamsInner>? teams = default, List<SearchIndexEventsInner>? events = default)
    {
        // to ensure "teams" is required (not null)
        ArgumentNullException.ThrowIfNull(teams);
        this.Teams = teams;
        // to ensure "events" is required (not null)
        ArgumentNullException.ThrowIfNull(events);
        this.Events = events;
    }

    /// <summary>
    /// Gets or Sets Teams
    /// </summary>
    [JsonPropertyName("teams")]
    public List<SearchIndexTeamsInner> Teams { get; set; }

    /// <summary>
    /// Gets or Sets Events
    /// </summary>
    [JsonPropertyName("events")]
    public List<SearchIndexEventsInner> Events { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class SearchIndex {");
        sb.Append("  Teams: ").AppendLine(Teams.ToString());
        sb.Append("  Events: ").AppendLine(Events.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
