/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;

using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// A year-specific event insight object expressed as a JSON string, separated in to &#x60;qual&#x60; and &#x60;playoff&#x60; fields. See also Event_Insights_2016, Event_Insights_2017, etc.
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="EventInsights" /> class.
/// </remarks>
/// <param name="qual">Inights for the qualification round of an event.</param>
/// <param name="playoff">Insights for the playoff round of an event.</param>
public partial class EventInsights(object? qual = default, object? playoff = default) : IValidatableObject
{

    /// <summary>
    /// Inights for the qualification round of an event
    /// </summary>
    /// <value>Inights for the qualification round of an event</value>

    [JsonPropertyName("qual")]
    public object Qual { get; set; } = qual;

    /// <summary>
    /// Insights for the playoff round of an event
    /// </summary>
    /// <value>Insights for the playoff round of an event</value>

    [JsonPropertyName("playoff")]
    public object Playoff { get; set; } = playoff;

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class EventInsights {");
        sb.Append("  Qual: ").AppendLine(Qual.ToString());
        sb.Append("  Playoff: ").AppendLine(Playoff.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
