/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// MatchScoreBreakdown2018Alliance
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="MatchScoreBreakdown2018Alliance" /> class.
/// </remarks>
/// <param name="adjustPoints">adjustPoints.</param>
/// <param name="autoOwnershipPoints">autoOwnershipPoints.</param>
/// <param name="autoPoints">autoPoints.</param>
/// <param name="autoQuestRankingPoint">autoQuestRankingPoint.</param>
/// <param name="autoRobot1">autoRobot1.</param>
/// <param name="autoRobot2">autoRobot2.</param>
/// <param name="autoRobot3">autoRobot3.</param>
/// <param name="autoRunPoints">autoRunPoints.</param>
/// <param name="autoScaleOwnershipSec">autoScaleOwnershipSec.</param>
/// <param name="autoSwitchAtZero">autoSwitchAtZero.</param>
/// <param name="autoSwitchOwnershipSec">autoSwitchOwnershipSec.</param>
/// <param name="endgamePoints">endgamePoints.</param>
/// <param name="endgameRobot1">endgameRobot1.</param>
/// <param name="endgameRobot2">endgameRobot2.</param>
/// <param name="endgameRobot3">endgameRobot3.</param>
/// <param name="faceTheBossRankingPoint">faceTheBossRankingPoint.</param>
/// <param name="foulCount">foulCount.</param>
/// <param name="foulPoints">foulPoints.</param>
/// <param name="rp">rp.</param>
/// <param name="techFoulCount">techFoulCount.</param>
/// <param name="teleopOwnershipPoints">teleopOwnershipPoints.</param>
/// <param name="teleopPoints">teleopPoints.</param>
/// <param name="teleopScaleBoostSec">teleopScaleBoostSec.</param>
/// <param name="teleopScaleForceSec">teleopScaleForceSec.</param>
/// <param name="teleopScaleOwnershipSec">teleopScaleOwnershipSec.</param>
/// <param name="teleopSwitchBoostSec">teleopSwitchBoostSec.</param>
/// <param name="teleopSwitchForceSec">teleopSwitchForceSec.</param>
/// <param name="teleopSwitchOwnershipSec">teleopSwitchOwnershipSec.</param>
/// <param name="totalPoints">totalPoints.</param>
/// <param name="vaultBoostPlayed">vaultBoostPlayed.</param>
/// <param name="vaultBoostTotal">vaultBoostTotal.</param>
/// <param name="vaultForcePlayed">vaultForcePlayed.</param>
/// <param name="vaultForceTotal">vaultForceTotal.</param>
/// <param name="vaultLevitatePlayed">vaultLevitatePlayed.</param>
/// <param name="vaultLevitateTotal">vaultLevitateTotal.</param>
/// <param name="vaultPoints">vaultPoints.</param>
/// <param name="tbaGameData">Unofficial TBA-computed value of the FMS provided GameData given to the alliance teams at the start of the match. 3 Character String containing &#x60;L&#x60; and &#x60;R&#x60; only. The first character represents the near switch, the 2nd the scale, and the 3rd the far, opposing, switch from the alliance&#39;s perspective. An &#x60;L&#x60; in a position indicates the platform on the left will be lit for the alliance while an &#x60;R&#x60; will indicate the right platform will be lit for the alliance. See also [WPI Screen Steps](https://wpilib.screenstepslive.com/s/currentCS/m/getting_started/l/826278-2018-game-data-details)..</param>
public partial class MatchScoreBreakdown2018Alliance(int adjustPoints = default, int autoOwnershipPoints = default, int autoPoints = default, bool autoQuestRankingPoint = default, string? autoRobot1 = default, string? autoRobot2 = default, string? autoRobot3 = default, int autoRunPoints = default, int autoScaleOwnershipSec = default, bool autoSwitchAtZero = default, int autoSwitchOwnershipSec = default, int endgamePoints = default, string? endgameRobot1 = default, string? endgameRobot2 = default, string? endgameRobot3 = default, bool faceTheBossRankingPoint = default, int foulCount = default, int foulPoints = default, int rp = default, int techFoulCount = default, int teleopOwnershipPoints = default, int teleopPoints = default, int teleopScaleBoostSec = default, int teleopScaleForceSec = default, int teleopScaleOwnershipSec = default, int teleopSwitchBoostSec = default, int teleopSwitchForceSec = default, int teleopSwitchOwnershipSec = default, int totalPoints = default, int vaultBoostPlayed = default, int vaultBoostTotal = default, int vaultForcePlayed = default, int vaultForceTotal = default, int vaultLevitatePlayed = default, int vaultLevitateTotal = default, int vaultPoints = default, string? tbaGameData = default) : IValidatableObject
{

    /// <summary>
    /// Gets or Sets AdjustPoints
    /// </summary>

    [JsonPropertyName("adjustPoints")]
    public int AdjustPoints { get; set; } = adjustPoints;

    /// <summary>
    /// Gets or Sets AutoOwnershipPoints
    /// </summary>

    [JsonPropertyName("autoOwnershipPoints")]
    public int AutoOwnershipPoints { get; set; } = autoOwnershipPoints;

    /// <summary>
    /// Gets or Sets AutoPoints
    /// </summary>

    [JsonPropertyName("autoPoints")]
    public int AutoPoints { get; set; } = autoPoints;

    /// <summary>
    /// Gets or Sets AutoQuestRankingPoint
    /// </summary>

    [JsonPropertyName("autoQuestRankingPoint")]
    public bool AutoQuestRankingPoint { get; set; } = autoQuestRankingPoint;

    /// <summary>
    /// Gets or Sets AutoRobot1
    /// </summary>

    [JsonPropertyName("autoRobot1")]
    public string AutoRobot1 { get; set; } = autoRobot1;

    /// <summary>
    /// Gets or Sets AutoRobot2
    /// </summary>

    [JsonPropertyName("autoRobot2")]
    public string AutoRobot2 { get; set; } = autoRobot2;

    /// <summary>
    /// Gets or Sets AutoRobot3
    /// </summary>

    [JsonPropertyName("autoRobot3")]
    public string AutoRobot3 { get; set; } = autoRobot3;

    /// <summary>
    /// Gets or Sets AutoRunPoints
    /// </summary>

    [JsonPropertyName("autoRunPoints")]
    public int AutoRunPoints { get; set; } = autoRunPoints;

    /// <summary>
    /// Gets or Sets AutoScaleOwnershipSec
    /// </summary>

    [JsonPropertyName("autoScaleOwnershipSec")]
    public int AutoScaleOwnershipSec { get; set; } = autoScaleOwnershipSec;

    /// <summary>
    /// Gets or Sets AutoSwitchAtZero
    /// </summary>

    [JsonPropertyName("autoSwitchAtZero")]
    public bool AutoSwitchAtZero { get; set; } = autoSwitchAtZero;

    /// <summary>
    /// Gets or Sets AutoSwitchOwnershipSec
    /// </summary>

    [JsonPropertyName("autoSwitchOwnershipSec")]
    public int AutoSwitchOwnershipSec { get; set; } = autoSwitchOwnershipSec;

    /// <summary>
    /// Gets or Sets EndgamePoints
    /// </summary>

    [JsonPropertyName("endgamePoints")]
    public int EndgamePoints { get; set; } = endgamePoints;

    /// <summary>
    /// Gets or Sets EndgameRobot1
    /// </summary>

    [JsonPropertyName("endgameRobot1")]
    public string EndgameRobot1 { get; set; } = endgameRobot1;

    /// <summary>
    /// Gets or Sets EndgameRobot2
    /// </summary>

    [JsonPropertyName("endgameRobot2")]
    public string EndgameRobot2 { get; set; } = endgameRobot2;

    /// <summary>
    /// Gets or Sets EndgameRobot3
    /// </summary>

    [JsonPropertyName("endgameRobot3")]
    public string EndgameRobot3 { get; set; } = endgameRobot3;

    /// <summary>
    /// Gets or Sets FaceTheBossRankingPoint
    /// </summary>

    [JsonPropertyName("faceTheBossRankingPoint")]
    public bool FaceTheBossRankingPoint { get; set; } = faceTheBossRankingPoint;

    /// <summary>
    /// Gets or Sets FoulCount
    /// </summary>

    [JsonPropertyName("foulCount")]
    public int FoulCount { get; set; } = foulCount;

    /// <summary>
    /// Gets or Sets FoulPoints
    /// </summary>

    [JsonPropertyName("foulPoints")]
    public int FoulPoints { get; set; } = foulPoints;

    /// <summary>
    /// Gets or Sets Rp
    /// </summary>

    [JsonPropertyName("rp")]
    public int Rp { get; set; } = rp;

    /// <summary>
    /// Gets or Sets TechFoulCount
    /// </summary>

    [JsonPropertyName("techFoulCount")]
    public int TechFoulCount { get; set; } = techFoulCount;

    /// <summary>
    /// Gets or Sets TeleopOwnershipPoints
    /// </summary>

    [JsonPropertyName("teleopOwnershipPoints")]
    public int TeleopOwnershipPoints { get; set; } = teleopOwnershipPoints;

    /// <summary>
    /// Gets or Sets TeleopPoints
    /// </summary>

    [JsonPropertyName("teleopPoints")]
    public int TeleopPoints { get; set; } = teleopPoints;

    /// <summary>
    /// Gets or Sets TeleopScaleBoostSec
    /// </summary>

    [JsonPropertyName("teleopScaleBoostSec")]
    public int TeleopScaleBoostSec { get; set; } = teleopScaleBoostSec;

    /// <summary>
    /// Gets or Sets TeleopScaleForceSec
    /// </summary>

    [JsonPropertyName("teleopScaleForceSec")]
    public int TeleopScaleForceSec { get; set; } = teleopScaleForceSec;

    /// <summary>
    /// Gets or Sets TeleopScaleOwnershipSec
    /// </summary>

    [JsonPropertyName("teleopScaleOwnershipSec")]
    public int TeleopScaleOwnershipSec { get; set; } = teleopScaleOwnershipSec;

    /// <summary>
    /// Gets or Sets TeleopSwitchBoostSec
    /// </summary>

    [JsonPropertyName("teleopSwitchBoostSec")]
    public int TeleopSwitchBoostSec { get; set; } = teleopSwitchBoostSec;

    /// <summary>
    /// Gets or Sets TeleopSwitchForceSec
    /// </summary>

    [JsonPropertyName("teleopSwitchForceSec")]
    public int TeleopSwitchForceSec { get; set; } = teleopSwitchForceSec;

    /// <summary>
    /// Gets or Sets TeleopSwitchOwnershipSec
    /// </summary>

    [JsonPropertyName("teleopSwitchOwnershipSec")]
    public int TeleopSwitchOwnershipSec { get; set; } = teleopSwitchOwnershipSec;

    /// <summary>
    /// Gets or Sets TotalPoints
    /// </summary>

    [JsonPropertyName("totalPoints")]
    public int TotalPoints { get; set; } = totalPoints;

    /// <summary>
    /// Gets or Sets VaultBoostPlayed
    /// </summary>

    [JsonPropertyName("vaultBoostPlayed")]
    public int VaultBoostPlayed { get; set; } = vaultBoostPlayed;

    /// <summary>
    /// Gets or Sets VaultBoostTotal
    /// </summary>

    [JsonPropertyName("vaultBoostTotal")]
    public int VaultBoostTotal { get; set; } = vaultBoostTotal;

    /// <summary>
    /// Gets or Sets VaultForcePlayed
    /// </summary>

    [JsonPropertyName("vaultForcePlayed")]
    public int VaultForcePlayed { get; set; } = vaultForcePlayed;

    /// <summary>
    /// Gets or Sets VaultForceTotal
    /// </summary>

    [JsonPropertyName("vaultForceTotal")]
    public int VaultForceTotal { get; set; } = vaultForceTotal;

    /// <summary>
    /// Gets or Sets VaultLevitatePlayed
    /// </summary>

    [JsonPropertyName("vaultLevitatePlayed")]
    public int VaultLevitatePlayed { get; set; } = vaultLevitatePlayed;

    /// <summary>
    /// Gets or Sets VaultLevitateTotal
    /// </summary>

    [JsonPropertyName("vaultLevitateTotal")]
    public int VaultLevitateTotal { get; set; } = vaultLevitateTotal;

    /// <summary>
    /// Gets or Sets VaultPoints
    /// </summary>

    [JsonPropertyName("vaultPoints")]
    public int VaultPoints { get; set; } = vaultPoints;

    /// <summary>
    /// Unofficial TBA-computed value of the FMS provided GameData given to the alliance teams at the start of the match. 3 Character String containing &#x60;L&#x60; and &#x60;R&#x60; only. The first character represents the near switch, the 2nd the scale, and the 3rd the far, opposing, switch from the alliance&#39;s perspective. An &#x60;L&#x60; in a position indicates the platform on the left will be lit for the alliance while an &#x60;R&#x60; will indicate the right platform will be lit for the alliance. See also [WPI Screen Steps](https://wpilib.screenstepslive.com/s/currentCS/m/getting_started/l/826278-2018-game-data-details).
    /// </summary>
    /// <value>Unofficial TBA-computed value of the FMS provided GameData given to the alliance teams at the start of the match. 3 Character String containing &#x60;L&#x60; and &#x60;R&#x60; only. The first character represents the near switch, the 2nd the scale, and the 3rd the far, opposing, switch from the alliance&#39;s perspective. An &#x60;L&#x60; in a position indicates the platform on the left will be lit for the alliance while an &#x60;R&#x60; will indicate the right platform will be lit for the alliance. See also [WPI Screen Steps](https://wpilib.screenstepslive.com/s/currentCS/m/getting_started/l/826278-2018-game-data-details).</value>

    [JsonPropertyName("tba_gameData")]
    public string TbaGameData { get; set; } = tbaGameData;

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class MatchScoreBreakdown2018Alliance {");
        sb.Append("  AdjustPoints: ").AppendLine(AdjustPoints.ToString());
        sb.Append("  AutoOwnershipPoints: ").AppendLine(AutoOwnershipPoints.ToString());
        sb.Append("  AutoPoints: ").AppendLine(AutoPoints.ToString());
        sb.Append("  AutoQuestRankingPoint: ").AppendLine(AutoQuestRankingPoint.ToString());
        sb.Append("  AutoRobot1: ").AppendLine(AutoRobot1.ToString());
        sb.Append("  AutoRobot2: ").AppendLine(AutoRobot2.ToString());
        sb.Append("  AutoRobot3: ").AppendLine(AutoRobot3.ToString());
        sb.Append("  AutoRunPoints: ").AppendLine(AutoRunPoints.ToString());
        sb.Append("  AutoScaleOwnershipSec: ").AppendLine(AutoScaleOwnershipSec.ToString());
        sb.Append("  AutoSwitchAtZero: ").AppendLine(AutoSwitchAtZero.ToString());
        sb.Append("  AutoSwitchOwnershipSec: ").AppendLine(AutoSwitchOwnershipSec.ToString());
        sb.Append("  EndgamePoints: ").AppendLine(EndgamePoints.ToString());
        sb.Append("  EndgameRobot1: ").AppendLine(EndgameRobot1.ToString());
        sb.Append("  EndgameRobot2: ").AppendLine(EndgameRobot2.ToString());
        sb.Append("  EndgameRobot3: ").AppendLine(EndgameRobot3.ToString());
        sb.Append("  FaceTheBossRankingPoint: ").AppendLine(FaceTheBossRankingPoint.ToString());
        sb.Append("  FoulCount: ").AppendLine(FoulCount.ToString());
        sb.Append("  FoulPoints: ").AppendLine(FoulPoints.ToString());
        sb.Append("  Rp: ").AppendLine(Rp.ToString());
        sb.Append("  TechFoulCount: ").AppendLine(TechFoulCount.ToString());
        sb.Append("  TeleopOwnershipPoints: ").AppendLine(TeleopOwnershipPoints.ToString());
        sb.Append("  TeleopPoints: ").AppendLine(TeleopPoints.ToString());
        sb.Append("  TeleopScaleBoostSec: ").AppendLine(TeleopScaleBoostSec.ToString());
        sb.Append("  TeleopScaleForceSec: ").AppendLine(TeleopScaleForceSec.ToString());
        sb.Append("  TeleopScaleOwnershipSec: ").AppendLine(TeleopScaleOwnershipSec.ToString());
        sb.Append("  TeleopSwitchBoostSec: ").AppendLine(TeleopSwitchBoostSec.ToString());
        sb.Append("  TeleopSwitchForceSec: ").AppendLine(TeleopSwitchForceSec.ToString());
        sb.Append("  TeleopSwitchOwnershipSec: ").AppendLine(TeleopSwitchOwnershipSec.ToString());
        sb.Append("  TotalPoints: ").AppendLine(TotalPoints.ToString());
        sb.Append("  VaultBoostPlayed: ").AppendLine(VaultBoostPlayed.ToString());
        sb.Append("  VaultBoostTotal: ").AppendLine(VaultBoostTotal.ToString());
        sb.Append("  VaultForcePlayed: ").AppendLine(VaultForcePlayed.ToString());
        sb.Append("  VaultForceTotal: ").AppendLine(VaultForceTotal.ToString());
        sb.Append("  VaultLevitatePlayed: ").AppendLine(VaultLevitatePlayed.ToString());
        sb.Append("  VaultLevitateTotal: ").AppendLine(VaultLevitateTotal.ToString());
        sb.Append("  VaultPoints: ").AppendLine(VaultPoints.ToString());
        sb.Append("  TbaGameData: ").AppendLine(TbaGameData.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
