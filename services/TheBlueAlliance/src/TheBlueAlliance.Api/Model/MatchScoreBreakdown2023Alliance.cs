/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// MatchScoreBreakdown2023Alliance
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="MatchScoreBreakdown2023Alliance" /> class.
/// </remarks>
/// <param name="activationBonusAchieved">activationBonusAchieved.</param>
/// <param name="adjustPoints">adjustPoints.</param>
/// <param name="autoBridgeState">autoBridgeState.</param>
/// <param name="autoChargeStationPoints">autoChargeStationPoints.</param>
/// <param name="autoChargeStationRobot1">autoChargeStationRobot1.</param>
/// <param name="autoChargeStationRobot2">autoChargeStationRobot2.</param>
/// <param name="autoChargeStationRobot3">autoChargeStationRobot3.</param>
/// <param name="autoDocked">autoDocked.</param>
/// <param name="autoCommunity">autoCommunity.</param>
/// <param name="autoGamePieceCount">autoGamePieceCount.</param>
/// <param name="autoGamePiecePoints">autoGamePiecePoints.</param>
/// <param name="autoMobilityPoints">autoMobilityPoints.</param>
/// <param name="mobilityRobot1">mobilityRobot1.</param>
/// <param name="mobilityRobot2">mobilityRobot2.</param>
/// <param name="mobilityRobot3">mobilityRobot3.</param>
/// <param name="autoPoints">autoPoints.</param>
/// <param name="coopGamePieceCount">coopGamePieceCount.</param>
/// <param name="coopertitionCriteriaMet">coopertitionCriteriaMet.</param>
/// <param name="endGameBridgeState">endGameBridgeState.</param>
/// <param name="endGameChargeStationPoints">endGameChargeStationPoints.</param>
/// <param name="endGameChargeStationRobot1">endGameChargeStationRobot1.</param>
/// <param name="endGameChargeStationRobot2">endGameChargeStationRobot2.</param>
/// <param name="endGameChargeStationRobot3">endGameChargeStationRobot3.</param>
/// <param name="endGameParkPoints">endGameParkPoints.</param>
/// <param name="extraGamePieceCount">extraGamePieceCount.</param>
/// <param name="foulCount">foulCount.</param>
/// <param name="foulPoints">foulPoints.</param>
/// <param name="techFoulCount">techFoulCount.</param>
/// <param name="linkPoints">linkPoints.</param>
/// <param name="links">links.</param>
/// <param name="sustainabilityBonusAchieved">sustainabilityBonusAchieved.</param>
/// <param name="teleopCommunity">teleopCommunity.</param>
/// <param name="teleopGamePieceCount">teleopGamePieceCount.</param>
/// <param name="teleopGamePiecePoints">teleopGamePiecePoints.</param>
/// <param name="totalChargeStationPoints">totalChargeStationPoints.</param>
/// <param name="teleopPoints">teleopPoints.</param>
/// <param name="rp">rp.</param>
/// <param name="totalPoints">totalPoints.</param>
public partial class MatchScoreBreakdown2023Alliance(bool activationBonusAchieved = default, int adjustPoints = default, MatchScoreBreakdown2023Alliance.AutoBridgeStateEnum? autoBridgeState = default, int autoChargeStationPoints = default, MatchScoreBreakdown2023Alliance.AutoChargeStationRobot1Enum? autoChargeStationRobot1 = default, MatchScoreBreakdown2023Alliance.AutoChargeStationRobot2Enum? autoChargeStationRobot2 = default, MatchScoreBreakdown2023Alliance.AutoChargeStationRobot3Enum? autoChargeStationRobot3 = default, bool autoDocked = default, MatchScoreBreakdown2023AllianceAutoCommunity? autoCommunity = default, int autoGamePieceCount = default, int autoGamePiecePoints = default, int autoMobilityPoints = default, MatchScoreBreakdown2023Alliance.MobilityRobot1Enum? mobilityRobot1 = default, MatchScoreBreakdown2023Alliance.MobilityRobot2Enum? mobilityRobot2 = default, MatchScoreBreakdown2023Alliance.MobilityRobot3Enum? mobilityRobot3 = default, int autoPoints = default, int coopGamePieceCount = default, bool coopertitionCriteriaMet = default, MatchScoreBreakdown2023Alliance.EndGameBridgeStateEnum? endGameBridgeState = default, int endGameChargeStationPoints = default, MatchScoreBreakdown2023Alliance.EndGameChargeStationRobot1Enum? endGameChargeStationRobot1 = default, MatchScoreBreakdown2023Alliance.EndGameChargeStationRobot2Enum? endGameChargeStationRobot2 = default, MatchScoreBreakdown2023Alliance.EndGameChargeStationRobot3Enum? endGameChargeStationRobot3 = default, int endGameParkPoints = default, int extraGamePieceCount = default, int foulCount = default, int foulPoints = default, int techFoulCount = default, int linkPoints = default, List<MatchScoreBreakdown2023AllianceLinksInner>? links = default, bool sustainabilityBonusAchieved = default, MatchScoreBreakdown2023AllianceAutoCommunity? teleopCommunity = default, int teleopGamePieceCount = default, int teleopGamePiecePoints = default, int totalChargeStationPoints = default, int teleopPoints = default, int rp = default, int totalPoints = default) : IValidatableObject
{
    /// <summary>
    /// Defines AutoBridgeState
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<AutoBridgeStateEnum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum AutoBridgeStateEnum
    {
        /// <summary>
        /// Enum NotLevel for value: NotLevel
        /// </summary>
        [EnumMember(Value = "NotLevel")]
        NotLevel = 1,

        /// <summary>
        /// Enum Level for value: Level
        /// </summary>
        [EnumMember(Value = "Level")]
        Level = 2
    }

    /// <summary>
    /// Gets or Sets AutoBridgeState
    /// </summary>

    [JsonPropertyName("autoBridgeState")]
    public AutoBridgeStateEnum? AutoBridgeState { get; set; } = autoBridgeState;
    /// <summary>
    /// Defines AutoChargeStationRobot1
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<AutoChargeStationRobot1Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum AutoChargeStationRobot1Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Gets or Sets AutoChargeStationRobot1
    /// </summary>

    [JsonPropertyName("autoChargeStationRobot1")]
    public AutoChargeStationRobot1Enum? AutoChargeStationRobot1 { get; set; } = autoChargeStationRobot1;
    /// <summary>
    /// Defines AutoChargeStationRobot2
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<AutoChargeStationRobot2Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum AutoChargeStationRobot2Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Gets or Sets AutoChargeStationRobot2
    /// </summary>

    [JsonPropertyName("autoChargeStationRobot2")]
    public AutoChargeStationRobot2Enum? AutoChargeStationRobot2 { get; set; } = autoChargeStationRobot2;
    /// <summary>
    /// Defines AutoChargeStationRobot3
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<AutoChargeStationRobot3Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum AutoChargeStationRobot3Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Gets or Sets AutoChargeStationRobot3
    /// </summary>

    [JsonPropertyName("autoChargeStationRobot3")]
    public AutoChargeStationRobot3Enum? AutoChargeStationRobot3 { get; set; } = autoChargeStationRobot3;
    /// <summary>
    /// Defines MobilityRobot1
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<MobilityRobot1Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum MobilityRobot1Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Gets or Sets MobilityRobot1
    /// </summary>

    [JsonPropertyName("mobilityRobot1")]
    public MobilityRobot1Enum? MobilityRobot1 { get; set; } = mobilityRobot1;
    /// <summary>
    /// Defines MobilityRobot2
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<MobilityRobot2Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum MobilityRobot2Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Gets or Sets MobilityRobot2
    /// </summary>

    [JsonPropertyName("mobilityRobot2")]
    public MobilityRobot2Enum? MobilityRobot2 { get; set; } = mobilityRobot2;
    /// <summary>
    /// Defines MobilityRobot3
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<MobilityRobot3Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum MobilityRobot3Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Gets or Sets MobilityRobot3
    /// </summary>

    [JsonPropertyName("mobilityRobot3")]
    public MobilityRobot3Enum? MobilityRobot3 { get; set; } = mobilityRobot3;
    /// <summary>
    /// Defines EndGameBridgeState
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<EndGameBridgeStateEnum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum EndGameBridgeStateEnum
    {
        /// <summary>
        /// Enum NotLevel for value: NotLevel
        /// </summary>
        [EnumMember(Value = "NotLevel")]
        NotLevel = 1,

        /// <summary>
        /// Enum Level for value: Level
        /// </summary>
        [EnumMember(Value = "Level")]
        Level = 2
    }

    /// <summary>
    /// Gets or Sets EndGameBridgeState
    /// </summary>

    [JsonPropertyName("endGameBridgeState")]
    public EndGameBridgeStateEnum? EndGameBridgeState { get; set; } = endGameBridgeState;
    /// <summary>
    /// Defines EndGameChargeStationRobot1
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<EndGameChargeStationRobot1Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum EndGameChargeStationRobot1Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Gets or Sets EndGameChargeStationRobot1
    /// </summary>

    [JsonPropertyName("endGameChargeStationRobot1")]
    public EndGameChargeStationRobot1Enum? EndGameChargeStationRobot1 { get; set; } = endGameChargeStationRobot1;
    /// <summary>
    /// Defines EndGameChargeStationRobot2
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<EndGameChargeStationRobot2Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum EndGameChargeStationRobot2Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Gets or Sets EndGameChargeStationRobot2
    /// </summary>

    [JsonPropertyName("endGameChargeStationRobot2")]
    public EndGameChargeStationRobot2Enum? EndGameChargeStationRobot2 { get; set; } = endGameChargeStationRobot2;
    /// <summary>
    /// Defines EndGameChargeStationRobot3
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<EndGameChargeStationRobot3Enum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum EndGameChargeStationRobot3Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Gets or Sets EndGameChargeStationRobot3
    /// </summary>

    [JsonPropertyName("endGameChargeStationRobot3")]
    public EndGameChargeStationRobot3Enum? EndGameChargeStationRobot3 { get; set; } = endGameChargeStationRobot3;

    /// <summary>
    /// Gets or Sets ActivationBonusAchieved
    /// </summary>

    [JsonPropertyName("activationBonusAchieved")]
    public bool ActivationBonusAchieved { get; set; } = activationBonusAchieved;

    /// <summary>
    /// Gets or Sets AdjustPoints
    /// </summary>

    [JsonPropertyName("adjustPoints")]
    public int AdjustPoints { get; set; } = adjustPoints;

    /// <summary>
    /// Gets or Sets AutoChargeStationPoints
    /// </summary>

    [JsonPropertyName("autoChargeStationPoints")]
    public int AutoChargeStationPoints { get; set; } = autoChargeStationPoints;

    /// <summary>
    /// Gets or Sets AutoDocked
    /// </summary>

    [JsonPropertyName("autoDocked")]
    public bool AutoDocked { get; set; } = autoDocked;

    /// <summary>
    /// Gets or Sets AutoCommunity
    /// </summary>

    [JsonPropertyName("autoCommunity")]
    public MatchScoreBreakdown2023AllianceAutoCommunity AutoCommunity { get; set; } = autoCommunity;

    /// <summary>
    /// Gets or Sets AutoGamePieceCount
    /// </summary>

    [JsonPropertyName("autoGamePieceCount")]
    public int AutoGamePieceCount { get; set; } = autoGamePieceCount;

    /// <summary>
    /// Gets or Sets AutoGamePiecePoints
    /// </summary>

    [JsonPropertyName("autoGamePiecePoints")]
    public int AutoGamePiecePoints { get; set; } = autoGamePiecePoints;

    /// <summary>
    /// Gets or Sets AutoMobilityPoints
    /// </summary>

    [JsonPropertyName("autoMobilityPoints")]
    public int AutoMobilityPoints { get; set; } = autoMobilityPoints;

    /// <summary>
    /// Gets or Sets AutoPoints
    /// </summary>

    [JsonPropertyName("autoPoints")]
    public int AutoPoints { get; set; } = autoPoints;

    /// <summary>
    /// Gets or Sets CoopGamePieceCount
    /// </summary>

    [JsonPropertyName("coopGamePieceCount")]
    public int CoopGamePieceCount { get; set; } = coopGamePieceCount;

    /// <summary>
    /// Gets or Sets CoopertitionCriteriaMet
    /// </summary>

    [JsonPropertyName("coopertitionCriteriaMet")]
    public bool CoopertitionCriteriaMet { get; set; } = coopertitionCriteriaMet;

    /// <summary>
    /// Gets or Sets EndGameChargeStationPoints
    /// </summary>

    [JsonPropertyName("endGameChargeStationPoints")]
    public int EndGameChargeStationPoints { get; set; } = endGameChargeStationPoints;

    /// <summary>
    /// Gets or Sets EndGameParkPoints
    /// </summary>

    [JsonPropertyName("endGameParkPoints")]
    public int EndGameParkPoints { get; set; } = endGameParkPoints;

    /// <summary>
    /// Gets or Sets ExtraGamePieceCount
    /// </summary>

    [JsonPropertyName("extraGamePieceCount")]
    public int ExtraGamePieceCount { get; set; } = extraGamePieceCount;

    /// <summary>
    /// Gets or Sets FoulCount
    /// </summary>

    [JsonPropertyName("foulCount")]
    public int FoulCount { get; set; } = foulCount;

    /// <summary>
    /// Gets or Sets FoulPoints
    /// </summary>

    [JsonPropertyName("foulPoints")]
    public int FoulPoints { get; set; } = foulPoints;

    /// <summary>
    /// Gets or Sets TechFoulCount
    /// </summary>

    [JsonPropertyName("techFoulCount")]
    public int TechFoulCount { get; set; } = techFoulCount;

    /// <summary>
    /// Gets or Sets LinkPoints
    /// </summary>

    [JsonPropertyName("linkPoints")]
    public int LinkPoints { get; set; } = linkPoints;

    /// <summary>
    /// Gets or Sets Links
    /// </summary>

    [JsonPropertyName("links")]
    public List<MatchScoreBreakdown2023AllianceLinksInner> Links { get; set; } = links;

    /// <summary>
    /// Gets or Sets SustainabilityBonusAchieved
    /// </summary>

    [JsonPropertyName("sustainabilityBonusAchieved")]
    public bool SustainabilityBonusAchieved { get; set; } = sustainabilityBonusAchieved;

    /// <summary>
    /// Gets or Sets TeleopCommunity
    /// </summary>

    [JsonPropertyName("teleopCommunity")]
    public MatchScoreBreakdown2023AllianceAutoCommunity TeleopCommunity { get; set; } = teleopCommunity;

    /// <summary>
    /// Gets or Sets TeleopGamePieceCount
    /// </summary>

    [JsonPropertyName("teleopGamePieceCount")]
    public int TeleopGamePieceCount { get; set; } = teleopGamePieceCount;

    /// <summary>
    /// Gets or Sets TeleopGamePiecePoints
    /// </summary>

    [JsonPropertyName("teleopGamePiecePoints")]
    public int TeleopGamePiecePoints { get; set; } = teleopGamePiecePoints;

    /// <summary>
    /// Gets or Sets TotalChargeStationPoints
    /// </summary>

    [JsonPropertyName("totalChargeStationPoints")]
    public int TotalChargeStationPoints { get; set; } = totalChargeStationPoints;

    /// <summary>
    /// Gets or Sets TeleopPoints
    /// </summary>

    [JsonPropertyName("teleopPoints")]
    public int TeleopPoints { get; set; } = teleopPoints;

    /// <summary>
    /// Gets or Sets Rp
    /// </summary>

    [JsonPropertyName("rp")]
    public int Rp { get; set; } = rp;

    /// <summary>
    /// Gets or Sets TotalPoints
    /// </summary>

    [JsonPropertyName("totalPoints")]
    public int TotalPoints { get; set; } = totalPoints;

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class MatchScoreBreakdown2023Alliance {");
        sb.Append("  ActivationBonusAchieved: ").AppendLine(ActivationBonusAchieved.ToString());
        sb.Append("  AdjustPoints: ").AppendLine(AdjustPoints.ToString());
        sb.Append("  AutoBridgeState: ").AppendLine(AutoBridgeState.ToString());
        sb.Append("  AutoChargeStationPoints: ").AppendLine(AutoChargeStationPoints.ToString());
        sb.Append("  AutoChargeStationRobot1: ").AppendLine(AutoChargeStationRobot1.ToString());
        sb.Append("  AutoChargeStationRobot2: ").AppendLine(AutoChargeStationRobot2.ToString());
        sb.Append("  AutoChargeStationRobot3: ").AppendLine(AutoChargeStationRobot3.ToString());
        sb.Append("  AutoDocked: ").AppendLine(AutoDocked.ToString());
        sb.Append("  AutoCommunity: ").AppendLine(AutoCommunity.ToString());
        sb.Append("  AutoGamePieceCount: ").AppendLine(AutoGamePieceCount.ToString());
        sb.Append("  AutoGamePiecePoints: ").AppendLine(AutoGamePiecePoints.ToString());
        sb.Append("  AutoMobilityPoints: ").AppendLine(AutoMobilityPoints.ToString());
        sb.Append("  MobilityRobot1: ").AppendLine(MobilityRobot1.ToString());
        sb.Append("  MobilityRobot2: ").AppendLine(MobilityRobot2.ToString());
        sb.Append("  MobilityRobot3: ").AppendLine(MobilityRobot3.ToString());
        sb.Append("  AutoPoints: ").AppendLine(AutoPoints.ToString());
        sb.Append("  CoopGamePieceCount: ").AppendLine(CoopGamePieceCount.ToString());
        sb.Append("  CoopertitionCriteriaMet: ").AppendLine(CoopertitionCriteriaMet.ToString());
        sb.Append("  EndGameBridgeState: ").AppendLine(EndGameBridgeState.ToString());
        sb.Append("  EndGameChargeStationPoints: ").AppendLine(EndGameChargeStationPoints.ToString());
        sb.Append("  EndGameChargeStationRobot1: ").AppendLine(EndGameChargeStationRobot1.ToString());
        sb.Append("  EndGameChargeStationRobot2: ").AppendLine(EndGameChargeStationRobot2.ToString());
        sb.Append("  EndGameChargeStationRobot3: ").AppendLine(EndGameChargeStationRobot3.ToString());
        sb.Append("  EndGameParkPoints: ").AppendLine(EndGameParkPoints.ToString());
        sb.Append("  ExtraGamePieceCount: ").AppendLine(ExtraGamePieceCount.ToString());
        sb.Append("  FoulCount: ").AppendLine(FoulCount.ToString());
        sb.Append("  FoulPoints: ").AppendLine(FoulPoints.ToString());
        sb.Append("  TechFoulCount: ").AppendLine(TechFoulCount.ToString());
        sb.Append("  LinkPoints: ").AppendLine(LinkPoints.ToString());
        sb.Append("  Links: ").AppendLine(Links.ToString());
        sb.Append("  SustainabilityBonusAchieved: ").AppendLine(SustainabilityBonusAchieved.ToString());
        sb.Append("  TeleopCommunity: ").AppendLine(TeleopCommunity.ToString());
        sb.Append("  TeleopGamePieceCount: ").AppendLine(TeleopGamePieceCount.ToString());
        sb.Append("  TeleopGamePiecePoints: ").AppendLine(TeleopGamePiecePoints.ToString());
        sb.Append("  TotalChargeStationPoints: ").AppendLine(TotalChargeStationPoints.ToString());
        sb.Append("  TeleopPoints: ").AppendLine(TeleopPoints.ToString());
        sb.Append("  Rp: ").AppendLine(Rp.ToString());
        sb.Append("  TotalPoints: ").AppendLine(TotalPoints.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
