/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// MatchScoreBreakdown2024Alliance
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="MatchScoreBreakdown2024Alliance" /> class.
/// </remarks>
/// <param name="adjustPoints">adjustPoints.</param>
/// <param name="autoAmpNoteCount">autoAmpNoteCount.</param>
/// <param name="autoAmpNotePoints">autoAmpNotePoints.</param>
/// <param name="autoLeavePoints">autoLeavePoints.</param>
/// <param name="autoLineRobot1">autoLineRobot1.</param>
/// <param name="autoLineRobot2">autoLineRobot2.</param>
/// <param name="autoLineRobot3">autoLineRobot3.</param>
/// <param name="autoPoints">autoPoints.</param>
/// <param name="autoSpeakerNoteCount">autoSpeakerNoteCount.</param>
/// <param name="autoSpeakerNotePoints">autoSpeakerNotePoints.</param>
/// <param name="autoTotalNotePoints">autoTotalNotePoints.</param>
/// <param name="coopNotePlayed">coopNotePlayed.</param>
/// <param name="coopertitionBonusAchieved">coopertitionBonusAchieved.</param>
/// <param name="coopertitionCriteriaMet">coopertitionCriteriaMet.</param>
/// <param name="endGameHarmonyPoints">endGameHarmonyPoints.</param>
/// <param name="endGameNoteInTrapPoints">endGameNoteInTrapPoints.</param>
/// <param name="endGameOnStagePoints">endGameOnStagePoints.</param>
/// <param name="endGameParkPoints">endGameParkPoints.</param>
/// <param name="endGameRobot1">endGameRobot1.</param>
/// <param name="endGameRobot2">endGameRobot2.</param>
/// <param name="endGameRobot3">endGameRobot3.</param>
/// <param name="endGameSpotLightBonusPoints">endGameSpotLightBonusPoints.</param>
/// <param name="endGameTotalStagePoints">endGameTotalStagePoints.</param>
/// <param name="ensembleBonusAchieved">ensembleBonusAchieved.</param>
/// <param name="ensembleBonusOnStageRobotsThreshold">ensembleBonusOnStageRobotsThreshold.</param>
/// <param name="ensembleBonusStagePointsThreshold">ensembleBonusStagePointsThreshold.</param>
/// <param name="foulCount">foulCount.</param>
/// <param name="foulPoints">foulPoints.</param>
/// <param name="g206Penalty">g206Penalty.</param>
/// <param name="g408Penalty">g408Penalty.</param>
/// <param name="g424Penalty">g424Penalty.</param>
/// <param name="melodyBonusAchieved">melodyBonusAchieved.</param>
/// <param name="melodyBonusThreshold">melodyBonusThreshold.</param>
/// <param name="melodyBonusThresholdCoop">melodyBonusThresholdCoop.</param>
/// <param name="melodyBonusThresholdNonCoop">melodyBonusThresholdNonCoop.</param>
/// <param name="micCenterStage">micCenterStage.</param>
/// <param name="micStageLeft">micStageLeft.</param>
/// <param name="micStageRight">micStageRight.</param>
/// <param name="rp">rp.</param>
/// <param name="techFoulCount">techFoulCount.</param>
/// <param name="teleopAmpNoteCount">teleopAmpNoteCount.</param>
/// <param name="teleopAmpNotePoints">teleopAmpNotePoints.</param>
/// <param name="teleopPoints">teleopPoints.</param>
/// <param name="teleopSpeakerNoteAmplifiedCount">teleopSpeakerNoteAmplifiedCount.</param>
/// <param name="teleopSpeakerNoteAmplifiedPoints">teleopSpeakerNoteAmplifiedPoints.</param>
/// <param name="teleopSpeakerNoteCount">teleopSpeakerNoteCount.</param>
/// <param name="teleopSpeakerNotePoints">teleopSpeakerNotePoints.</param>
/// <param name="teleopTotalNotePoints">teleopTotalNotePoints.</param>
/// <param name="totalPoints">totalPoints.</param>
/// <param name="trapCenterStage">trapCenterStage.</param>
/// <param name="trapStageLeft">trapStageLeft.</param>
/// <param name="trapStageRight">trapStageRight.</param>
public partial class MatchScoreBreakdown2024Alliance(int adjustPoints = default, int autoAmpNoteCount = default, int autoAmpNotePoints = default, int autoLeavePoints = default, string? autoLineRobot1 = default, string? autoLineRobot2 = default, string? autoLineRobot3 = default, int autoPoints = default, int autoSpeakerNoteCount = default, int autoSpeakerNotePoints = default, int autoTotalNotePoints = default, bool coopNotePlayed = default, bool coopertitionBonusAchieved = default, bool coopertitionCriteriaMet = default, int endGameHarmonyPoints = default, int endGameNoteInTrapPoints = default, int endGameOnStagePoints = default, int endGameParkPoints = default, string? endGameRobot1 = default, string? endGameRobot2 = default, string? endGameRobot3 = default, int endGameSpotLightBonusPoints = default, int endGameTotalStagePoints = default, bool ensembleBonusAchieved = default, int ensembleBonusOnStageRobotsThreshold = default, int ensembleBonusStagePointsThreshold = default, int foulCount = default, int foulPoints = default, bool g206Penalty = default, bool g408Penalty = default, bool g424Penalty = default, bool melodyBonusAchieved = default, int melodyBonusThreshold = default, int melodyBonusThresholdCoop = default, int melodyBonusThresholdNonCoop = default, bool micCenterStage = default, bool micStageLeft = default, bool micStageRight = default, int rp = default, int techFoulCount = default, int teleopAmpNoteCount = default, int teleopAmpNotePoints = default, int teleopPoints = default, int teleopSpeakerNoteAmplifiedCount = default, int teleopSpeakerNoteAmplifiedPoints = default, int teleopSpeakerNoteCount = default, int teleopSpeakerNotePoints = default, int teleopTotalNotePoints = default, int totalPoints = default, bool trapCenterStage = default, bool trapStageLeft = default, bool trapStageRight = default) : IValidatableObject
{

    /// <summary>
    /// Gets or Sets AdjustPoints
    /// </summary>

    [JsonPropertyName("adjustPoints")]
    public int AdjustPoints { get; set; } = adjustPoints;

    /// <summary>
    /// Gets or Sets AutoAmpNoteCount
    /// </summary>

    [JsonPropertyName("autoAmpNoteCount")]
    public int AutoAmpNoteCount { get; set; } = autoAmpNoteCount;

    /// <summary>
    /// Gets or Sets AutoAmpNotePoints
    /// </summary>

    [JsonPropertyName("autoAmpNotePoints")]
    public int AutoAmpNotePoints { get; set; } = autoAmpNotePoints;

    /// <summary>
    /// Gets or Sets AutoLeavePoints
    /// </summary>

    [JsonPropertyName("autoLeavePoints")]
    public int AutoLeavePoints { get; set; } = autoLeavePoints;

    /// <summary>
    /// Gets or Sets AutoLineRobot1
    /// </summary>

    [JsonPropertyName("autoLineRobot1")]
    public string AutoLineRobot1 { get; set; } = autoLineRobot1;

    /// <summary>
    /// Gets or Sets AutoLineRobot2
    /// </summary>

    [JsonPropertyName("autoLineRobot2")]
    public string AutoLineRobot2 { get; set; } = autoLineRobot2;

    /// <summary>
    /// Gets or Sets AutoLineRobot3
    /// </summary>

    [JsonPropertyName("autoLineRobot3")]
    public string AutoLineRobot3 { get; set; } = autoLineRobot3;

    /// <summary>
    /// Gets or Sets AutoPoints
    /// </summary>

    [JsonPropertyName("autoPoints")]
    public int AutoPoints { get; set; } = autoPoints;

    /// <summary>
    /// Gets or Sets AutoSpeakerNoteCount
    /// </summary>

    [JsonPropertyName("autoSpeakerNoteCount")]
    public int AutoSpeakerNoteCount { get; set; } = autoSpeakerNoteCount;

    /// <summary>
    /// Gets or Sets AutoSpeakerNotePoints
    /// </summary>

    [JsonPropertyName("autoSpeakerNotePoints")]
    public int AutoSpeakerNotePoints { get; set; } = autoSpeakerNotePoints;

    /// <summary>
    /// Gets or Sets AutoTotalNotePoints
    /// </summary>

    [JsonPropertyName("autoTotalNotePoints")]
    public int AutoTotalNotePoints { get; set; } = autoTotalNotePoints;

    /// <summary>
    /// Gets or Sets CoopNotePlayed
    /// </summary>

    [JsonPropertyName("coopNotePlayed")]
    public bool CoopNotePlayed { get; set; } = coopNotePlayed;

    /// <summary>
    /// Gets or Sets CoopertitionBonusAchieved
    /// </summary>

    [JsonPropertyName("coopertitionBonusAchieved")]
    public bool CoopertitionBonusAchieved { get; set; } = coopertitionBonusAchieved;

    /// <summary>
    /// Gets or Sets CoopertitionCriteriaMet
    /// </summary>

    [JsonPropertyName("coopertitionCriteriaMet")]
    public bool CoopertitionCriteriaMet { get; set; } = coopertitionCriteriaMet;

    /// <summary>
    /// Gets or Sets EndGameHarmonyPoints
    /// </summary>

    [JsonPropertyName("endGameHarmonyPoints")]
    public int EndGameHarmonyPoints { get; set; } = endGameHarmonyPoints;

    /// <summary>
    /// Gets or Sets EndGameNoteInTrapPoints
    /// </summary>

    [JsonPropertyName("endGameNoteInTrapPoints")]
    public int EndGameNoteInTrapPoints { get; set; } = endGameNoteInTrapPoints;

    /// <summary>
    /// Gets or Sets EndGameOnStagePoints
    /// </summary>

    [JsonPropertyName("endGameOnStagePoints")]
    public int EndGameOnStagePoints { get; set; } = endGameOnStagePoints;

    /// <summary>
    /// Gets or Sets EndGameParkPoints
    /// </summary>

    [JsonPropertyName("endGameParkPoints")]
    public int EndGameParkPoints { get; set; } = endGameParkPoints;

    /// <summary>
    /// Gets or Sets EndGameRobot1
    /// </summary>

    [JsonPropertyName("endGameRobot1")]
    public string EndGameRobot1 { get; set; } = endGameRobot1;

    /// <summary>
    /// Gets or Sets EndGameRobot2
    /// </summary>

    [JsonPropertyName("endGameRobot2")]
    public string EndGameRobot2 { get; set; } = endGameRobot2;

    /// <summary>
    /// Gets or Sets EndGameRobot3
    /// </summary>

    [JsonPropertyName("endGameRobot3")]
    public string EndGameRobot3 { get; set; } = endGameRobot3;

    /// <summary>
    /// Gets or Sets EndGameSpotLightBonusPoints
    /// </summary>

    [JsonPropertyName("endGameSpotLightBonusPoints")]
    public int EndGameSpotLightBonusPoints { get; set; } = endGameSpotLightBonusPoints;

    /// <summary>
    /// Gets or Sets EndGameTotalStagePoints
    /// </summary>

    [JsonPropertyName("endGameTotalStagePoints")]
    public int EndGameTotalStagePoints { get; set; } = endGameTotalStagePoints;

    /// <summary>
    /// Gets or Sets EnsembleBonusAchieved
    /// </summary>

    [JsonPropertyName("ensembleBonusAchieved")]
    public bool EnsembleBonusAchieved { get; set; } = ensembleBonusAchieved;

    /// <summary>
    /// Gets or Sets EnsembleBonusOnStageRobotsThreshold
    /// </summary>

    [JsonPropertyName("ensembleBonusOnStageRobotsThreshold")]
    public int EnsembleBonusOnStageRobotsThreshold { get; set; } = ensembleBonusOnStageRobotsThreshold;

    /// <summary>
    /// Gets or Sets EnsembleBonusStagePointsThreshold
    /// </summary>

    [JsonPropertyName("ensembleBonusStagePointsThreshold")]
    public int EnsembleBonusStagePointsThreshold { get; set; } = ensembleBonusStagePointsThreshold;

    /// <summary>
    /// Gets or Sets FoulCount
    /// </summary>

    [JsonPropertyName("foulCount")]
    public int FoulCount { get; set; } = foulCount;

    /// <summary>
    /// Gets or Sets FoulPoints
    /// </summary>

    [JsonPropertyName("foulPoints")]
    public int FoulPoints { get; set; } = foulPoints;

    /// <summary>
    /// Gets or Sets G206Penalty
    /// </summary>

    [JsonPropertyName("g206Penalty")]
    public bool G206Penalty { get; set; } = g206Penalty;

    /// <summary>
    /// Gets or Sets G408Penalty
    /// </summary>

    [JsonPropertyName("g408Penalty")]
    public bool G408Penalty { get; set; } = g408Penalty;

    /// <summary>
    /// Gets or Sets G424Penalty
    /// </summary>

    [JsonPropertyName("g424Penalty")]
    public bool G424Penalty { get; set; } = g424Penalty;

    /// <summary>
    /// Gets or Sets MelodyBonusAchieved
    /// </summary>

    [JsonPropertyName("melodyBonusAchieved")]
    public bool MelodyBonusAchieved { get; set; } = melodyBonusAchieved;

    /// <summary>
    /// Gets or Sets MelodyBonusThreshold
    /// </summary>

    [JsonPropertyName("melodyBonusThreshold")]
    public int MelodyBonusThreshold { get; set; } = melodyBonusThreshold;

    /// <summary>
    /// Gets or Sets MelodyBonusThresholdCoop
    /// </summary>

    [JsonPropertyName("melodyBonusThresholdCoop")]
    public int MelodyBonusThresholdCoop { get; set; } = melodyBonusThresholdCoop;

    /// <summary>
    /// Gets or Sets MelodyBonusThresholdNonCoop
    /// </summary>

    [JsonPropertyName("melodyBonusThresholdNonCoop")]
    public int MelodyBonusThresholdNonCoop { get; set; } = melodyBonusThresholdNonCoop;

    /// <summary>
    /// Gets or Sets MicCenterStage
    /// </summary>

    [JsonPropertyName("micCenterStage")]
    public bool MicCenterStage { get; set; } = micCenterStage;

    /// <summary>
    /// Gets or Sets MicStageLeft
    /// </summary>

    [JsonPropertyName("micStageLeft")]
    public bool MicStageLeft { get; set; } = micStageLeft;

    /// <summary>
    /// Gets or Sets MicStageRight
    /// </summary>

    [JsonPropertyName("micStageRight")]
    public bool MicStageRight { get; set; } = micStageRight;

    /// <summary>
    /// Gets or Sets Rp
    /// </summary>

    [JsonPropertyName("rp")]
    public int Rp { get; set; } = rp;

    /// <summary>
    /// Gets or Sets TechFoulCount
    /// </summary>

    [JsonPropertyName("techFoulCount")]
    public int TechFoulCount { get; set; } = techFoulCount;

    /// <summary>
    /// Gets or Sets TeleopAmpNoteCount
    /// </summary>

    [JsonPropertyName("teleopAmpNoteCount")]
    public int TeleopAmpNoteCount { get; set; } = teleopAmpNoteCount;

    /// <summary>
    /// Gets or Sets TeleopAmpNotePoints
    /// </summary>

    [JsonPropertyName("teleopAmpNotePoints")]
    public int TeleopAmpNotePoints { get; set; } = teleopAmpNotePoints;

    /// <summary>
    /// Gets or Sets TeleopPoints
    /// </summary>

    [JsonPropertyName("teleopPoints")]
    public int TeleopPoints { get; set; } = teleopPoints;

    /// <summary>
    /// Gets or Sets TeleopSpeakerNoteAmplifiedCount
    /// </summary>

    [JsonPropertyName("teleopSpeakerNoteAmplifiedCount")]
    public int TeleopSpeakerNoteAmplifiedCount { get; set; } = teleopSpeakerNoteAmplifiedCount;

    /// <summary>
    /// Gets or Sets TeleopSpeakerNoteAmplifiedPoints
    /// </summary>

    [JsonPropertyName("teleopSpeakerNoteAmplifiedPoints")]
    public int TeleopSpeakerNoteAmplifiedPoints { get; set; } = teleopSpeakerNoteAmplifiedPoints;

    /// <summary>
    /// Gets or Sets TeleopSpeakerNoteCount
    /// </summary>

    [JsonPropertyName("teleopSpeakerNoteCount")]
    public int TeleopSpeakerNoteCount { get; set; } = teleopSpeakerNoteCount;

    /// <summary>
    /// Gets or Sets TeleopSpeakerNotePoints
    /// </summary>

    [JsonPropertyName("teleopSpeakerNotePoints")]
    public int TeleopSpeakerNotePoints { get; set; } = teleopSpeakerNotePoints;

    /// <summary>
    /// Gets or Sets TeleopTotalNotePoints
    /// </summary>

    [JsonPropertyName("teleopTotalNotePoints")]
    public int TeleopTotalNotePoints { get; set; } = teleopTotalNotePoints;

    /// <summary>
    /// Gets or Sets TotalPoints
    /// </summary>

    [JsonPropertyName("totalPoints")]
    public int TotalPoints { get; set; } = totalPoints;

    /// <summary>
    /// Gets or Sets TrapCenterStage
    /// </summary>

    [JsonPropertyName("trapCenterStage")]
    public bool TrapCenterStage { get; set; } = trapCenterStage;

    /// <summary>
    /// Gets or Sets TrapStageLeft
    /// </summary>

    [JsonPropertyName("trapStageLeft")]
    public bool TrapStageLeft { get; set; } = trapStageLeft;

    /// <summary>
    /// Gets or Sets TrapStageRight
    /// </summary>

    [JsonPropertyName("trapStageRight")]
    public bool TrapStageRight { get; set; } = trapStageRight;

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class MatchScoreBreakdown2024Alliance {");
        sb.Append("  AdjustPoints: ").AppendLine(AdjustPoints.ToString());
        sb.Append("  AutoAmpNoteCount: ").AppendLine(AutoAmpNoteCount.ToString());
        sb.Append("  AutoAmpNotePoints: ").AppendLine(AutoAmpNotePoints.ToString());
        sb.Append("  AutoLeavePoints: ").AppendLine(AutoLeavePoints.ToString());
        sb.Append("  AutoLineRobot1: ").AppendLine(AutoLineRobot1.ToString());
        sb.Append("  AutoLineRobot2: ").AppendLine(AutoLineRobot2.ToString());
        sb.Append("  AutoLineRobot3: ").AppendLine(AutoLineRobot3.ToString());
        sb.Append("  AutoPoints: ").AppendLine(AutoPoints.ToString());
        sb.Append("  AutoSpeakerNoteCount: ").AppendLine(AutoSpeakerNoteCount.ToString());
        sb.Append("  AutoSpeakerNotePoints: ").AppendLine(AutoSpeakerNotePoints.ToString());
        sb.Append("  AutoTotalNotePoints: ").AppendLine(AutoTotalNotePoints.ToString());
        sb.Append("  CoopNotePlayed: ").AppendLine(CoopNotePlayed.ToString());
        sb.Append("  CoopertitionBonusAchieved: ").AppendLine(CoopertitionBonusAchieved.ToString());
        sb.Append("  CoopertitionCriteriaMet: ").AppendLine(CoopertitionCriteriaMet.ToString());
        sb.Append("  EndGameHarmonyPoints: ").AppendLine(EndGameHarmonyPoints.ToString());
        sb.Append("  EndGameNoteInTrapPoints: ").AppendLine(EndGameNoteInTrapPoints.ToString());
        sb.Append("  EndGameOnStagePoints: ").AppendLine(EndGameOnStagePoints.ToString());
        sb.Append("  EndGameParkPoints: ").AppendLine(EndGameParkPoints.ToString());
        sb.Append("  EndGameRobot1: ").AppendLine(EndGameRobot1.ToString());
        sb.Append("  EndGameRobot2: ").AppendLine(EndGameRobot2.ToString());
        sb.Append("  EndGameRobot3: ").AppendLine(EndGameRobot3.ToString());
        sb.Append("  EndGameSpotLightBonusPoints: ").AppendLine(EndGameSpotLightBonusPoints.ToString());
        sb.Append("  EndGameTotalStagePoints: ").AppendLine(EndGameTotalStagePoints.ToString());
        sb.Append("  EnsembleBonusAchieved: ").AppendLine(EnsembleBonusAchieved.ToString());
        sb.Append("  EnsembleBonusOnStageRobotsThreshold: ").AppendLine(EnsembleBonusOnStageRobotsThreshold.ToString());
        sb.Append("  EnsembleBonusStagePointsThreshold: ").AppendLine(EnsembleBonusStagePointsThreshold.ToString());
        sb.Append("  FoulCount: ").AppendLine(FoulCount.ToString());
        sb.Append("  FoulPoints: ").AppendLine(FoulPoints.ToString());
        sb.Append("  G206Penalty: ").AppendLine(G206Penalty.ToString());
        sb.Append("  G408Penalty: ").AppendLine(G408Penalty.ToString());
        sb.Append("  G424Penalty: ").AppendLine(G424Penalty.ToString());
        sb.Append("  MelodyBonusAchieved: ").AppendLine(MelodyBonusAchieved.ToString());
        sb.Append("  MelodyBonusThreshold: ").AppendLine(MelodyBonusThreshold.ToString());
        sb.Append("  MelodyBonusThresholdCoop: ").AppendLine(MelodyBonusThresholdCoop.ToString());
        sb.Append("  MelodyBonusThresholdNonCoop: ").AppendLine(MelodyBonusThresholdNonCoop.ToString());
        sb.Append("  MicCenterStage: ").AppendLine(MicCenterStage.ToString());
        sb.Append("  MicStageLeft: ").AppendLine(MicStageLeft.ToString());
        sb.Append("  MicStageRight: ").AppendLine(MicStageRight.ToString());
        sb.Append("  Rp: ").AppendLine(Rp.ToString());
        sb.Append("  TechFoulCount: ").AppendLine(TechFoulCount.ToString());
        sb.Append("  TeleopAmpNoteCount: ").AppendLine(TeleopAmpNoteCount.ToString());
        sb.Append("  TeleopAmpNotePoints: ").AppendLine(TeleopAmpNotePoints.ToString());
        sb.Append("  TeleopPoints: ").AppendLine(TeleopPoints.ToString());
        sb.Append("  TeleopSpeakerNoteAmplifiedCount: ").AppendLine(TeleopSpeakerNoteAmplifiedCount.ToString());
        sb.Append("  TeleopSpeakerNoteAmplifiedPoints: ").AppendLine(TeleopSpeakerNoteAmplifiedPoints.ToString());
        sb.Append("  TeleopSpeakerNoteCount: ").AppendLine(TeleopSpeakerNoteCount.ToString());
        sb.Append("  TeleopSpeakerNotePoints: ").AppendLine(TeleopSpeakerNotePoints.ToString());
        sb.Append("  TeleopTotalNotePoints: ").AppendLine(TeleopTotalNotePoints.ToString());
        sb.Append("  TotalPoints: ").AppendLine(TotalPoints.ToString());
        sb.Append("  TrapCenterStage: ").AppendLine(TrapCenterStage.ToString());
        sb.Append("  TrapStageLeft: ").AppendLine(TrapStageLeft.ToString());
        sb.Append("  TrapStageRight: ").AppendLine(TrapStageRight.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
