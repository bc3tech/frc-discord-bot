/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// MatchScoreBreakdown2023AllianceLinksInner
/// </summary>
public partial class MatchScoreBreakdown2023AllianceLinksInner : IValidatableObject
{
    /// <summary>
    /// Defines Nodes
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<NodesEnum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum NodesEnum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Cone for value: Cone
        /// </summary>
        [EnumMember(Value = "Cone")]
        Cone = 2,

        /// <summary>
        /// Enum Cube for value: Cube
        /// </summary>
        [EnumMember(Value = "Cube")]
        Cube = 3
    }

    /// <summary>
    /// Defines Row
    /// </summary>
    [JsonConverter(typeof(JsonStringEnumConverter<RowEnum>)), Microsoft.Extensions.EnumStrings.EnumStrings]
    public enum RowEnum
    {
        /// <summary>
        /// Enum Bottom for value: Bottom
        /// </summary>
        [EnumMember(Value = "Bottom")]
        Bottom = 1,

        /// <summary>
        /// Enum Mid for value: Mid
        /// </summary>
        [EnumMember(Value = "Mid")]
        Mid = 2,

        /// <summary>
        /// Enum Top for value: Top
        /// </summary>
        [EnumMember(Value = "Top")]
        Top = 3
    }

    /// <summary>
    /// Gets or Sets Row
    /// </summary>
    [JsonPropertyName("row")]
    public RowEnum Row { get; set; }
    /// <summary>
    /// Initializes a new instance of the <see cref="MatchScoreBreakdown2023AllianceLinksInner" /> class.
    /// </summary>
    [JsonConstructor]
    protected MatchScoreBreakdown2023AllianceLinksInner() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="MatchScoreBreakdown2023AllianceLinksInner" /> class.
    /// </summary>
    /// <param name="nodes">nodes (required).</param>
    /// <param name="row">row (required).</param>
    public MatchScoreBreakdown2023AllianceLinksInner(List<NodesEnum>? nodes = default, RowEnum row = default)
    {
        // to ensure "nodes" is required (not null)
        ArgumentNullException.ThrowIfNull(nodes);
        this.Nodes = nodes;
        this.Row = row;
    }

    /// <summary>
    /// Gets or Sets Nodes
    /// </summary>
    [JsonPropertyName("nodes")]
    public List<NodesEnum> Nodes { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class MatchScoreBreakdown2023AllianceLinksInner {");
        sb.Append("  Nodes: ").AppendLine(Nodes.ToString());
        sb.Append("  Row: ").AppendLine(Row.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
