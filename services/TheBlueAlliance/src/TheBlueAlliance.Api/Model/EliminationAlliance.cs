/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// EliminationAlliance
/// </summary>
public partial class EliminationAlliance : IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="EliminationAlliance" /> class.
    /// </summary>
    [JsonConstructor]
    protected EliminationAlliance() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="EliminationAlliance" /> class.
    /// </summary>
    /// <param name="name">Alliance name, may be null..</param>
    /// <param name="backup">backup.</param>
    /// <param name="declines">List of teams that declined the alliance. (required).</param>
    /// <param name="picks">List of team keys picked for the alliance. First pick is captain. (required).</param>
    /// <param name="status">status.</param>
    public EliminationAlliance(string? name = default, EliminationAllianceBackup? backup = default, List<string>? declines = default, List<string>? picks = default, EliminationAllianceStatus? status = default)
    {
        // to ensure "declines" is required (not null)
        ArgumentNullException.ThrowIfNull(declines);
        this.Declines = declines;
        // to ensure "picks" is required (not null)
        ArgumentNullException.ThrowIfNull(picks);
        this.Picks = picks;
        this.Name = name;
        this.Backup = backup;
        this.Status = status;
    }

    /// <summary>
    /// Alliance name, may be null.
    /// </summary>
    /// <value>Alliance name, may be null.</value>

    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Gets or Sets Backup
    /// </summary>

    [JsonPropertyName("backup")]
    public EliminationAllianceBackup Backup { get; set; }

    /// <summary>
    /// List of teams that declined the alliance.
    /// </summary>
    /// <value>List of teams that declined the alliance.</value>
    [JsonPropertyName("declines")]
    public List<string> Declines { get; set; }

    /// <summary>
    /// List of team keys picked for the alliance. First pick is captain.
    /// </summary>
    /// <value>List of team keys picked for the alliance. First pick is captain.</value>
    [JsonPropertyName("picks")]
    public List<string> Picks { get; set; }

    /// <summary>
    /// Gets or Sets Status
    /// </summary>

    [JsonPropertyName("status")]
    public EliminationAllianceStatus Status { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class EliminationAlliance {");
        sb.Append("  Name: ").AppendLine(Name.ToString());
        sb.Append("  Backup: ").AppendLine(Backup.ToString());
        sb.Append("  Declines: ").AppendLine(Declines.ToString());
        sb.Append("  Picks: ").AppendLine(Picks.ToString());
        sb.Append("  Status: ").AppendLine(Status.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
