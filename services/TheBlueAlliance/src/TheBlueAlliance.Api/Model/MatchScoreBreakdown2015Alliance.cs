/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// MatchScoreBreakdown2015Alliance
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="MatchScoreBreakdown2015Alliance" /> class.
/// </remarks>
/// <param name="autoPoints">autoPoints.</param>
/// <param name="teleopPoints">teleopPoints.</param>
/// <param name="containerPoints">containerPoints.</param>
/// <param name="totePoints">totePoints.</param>
/// <param name="litterPoints">litterPoints.</param>
/// <param name="foulPoints">foulPoints.</param>
/// <param name="adjustPoints">adjustPoints.</param>
/// <param name="totalPoints">totalPoints.</param>
/// <param name="foulCount">foulCount.</param>
/// <param name="toteCountFar">toteCountFar.</param>
/// <param name="toteCountNear">toteCountNear.</param>
/// <param name="toteSet">toteSet.</param>
/// <param name="toteStack">toteStack.</param>
/// <param name="containerCountLevel1">containerCountLevel1.</param>
/// <param name="containerCountLevel2">containerCountLevel2.</param>
/// <param name="containerCountLevel3">containerCountLevel3.</param>
/// <param name="containerCountLevel4">containerCountLevel4.</param>
/// <param name="containerCountLevel5">containerCountLevel5.</param>
/// <param name="containerCountLevel6">containerCountLevel6.</param>
/// <param name="containerSet">containerSet.</param>
/// <param name="litterCountContainer">litterCountContainer.</param>
/// <param name="litterCountLandfill">litterCountLandfill.</param>
/// <param name="litterCountUnprocessed">litterCountUnprocessed.</param>
/// <param name="robotSet">robotSet.</param>
public partial class MatchScoreBreakdown2015Alliance(int autoPoints = default, int teleopPoints = default, int containerPoints = default, int totePoints = default, int litterPoints = default, int foulPoints = default, int adjustPoints = default, int totalPoints = default, int foulCount = default, int toteCountFar = default, int toteCountNear = default, bool toteSet = default, bool toteStack = default, int containerCountLevel1 = default, int containerCountLevel2 = default, int containerCountLevel3 = default, int containerCountLevel4 = default, int containerCountLevel5 = default, int containerCountLevel6 = default, bool containerSet = default, int litterCountContainer = default, int litterCountLandfill = default, int litterCountUnprocessed = default, bool robotSet = default) : IValidatableObject
{

    /// <summary>
    /// Gets or Sets AutoPoints
    /// </summary>

    [JsonPropertyName("auto_points")]
    public int AutoPoints { get; set; } = autoPoints;

    /// <summary>
    /// Gets or Sets TeleopPoints
    /// </summary>

    [JsonPropertyName("teleop_points")]
    public int TeleopPoints { get; set; } = teleopPoints;

    /// <summary>
    /// Gets or Sets ContainerPoints
    /// </summary>

    [JsonPropertyName("container_points")]
    public int ContainerPoints { get; set; } = containerPoints;

    /// <summary>
    /// Gets or Sets TotePoints
    /// </summary>

    [JsonPropertyName("tote_points")]
    public int TotePoints { get; set; } = totePoints;

    /// <summary>
    /// Gets or Sets LitterPoints
    /// </summary>

    [JsonPropertyName("litter_points")]
    public int LitterPoints { get; set; } = litterPoints;

    /// <summary>
    /// Gets or Sets FoulPoints
    /// </summary>

    [JsonPropertyName("foul_points")]
    public int FoulPoints { get; set; } = foulPoints;

    /// <summary>
    /// Gets or Sets AdjustPoints
    /// </summary>

    [JsonPropertyName("adjust_points")]
    public int AdjustPoints { get; set; } = adjustPoints;

    /// <summary>
    /// Gets or Sets TotalPoints
    /// </summary>

    [JsonPropertyName("total_points")]
    public int TotalPoints { get; set; } = totalPoints;

    /// <summary>
    /// Gets or Sets FoulCount
    /// </summary>

    [JsonPropertyName("foul_count")]
    public int FoulCount { get; set; } = foulCount;

    /// <summary>
    /// Gets or Sets ToteCountFar
    /// </summary>

    [JsonPropertyName("tote_count_far")]
    public int ToteCountFar { get; set; } = toteCountFar;

    /// <summary>
    /// Gets or Sets ToteCountNear
    /// </summary>

    [JsonPropertyName("tote_count_near")]
    public int ToteCountNear { get; set; } = toteCountNear;

    /// <summary>
    /// Gets or Sets ToteSet
    /// </summary>

    [JsonPropertyName("tote_set")]
    public bool ToteSet { get; set; } = toteSet;

    /// <summary>
    /// Gets or Sets ToteStack
    /// </summary>

    [JsonPropertyName("tote_stack")]
    public bool ToteStack { get; set; } = toteStack;

    /// <summary>
    /// Gets or Sets ContainerCountLevel1
    /// </summary>

    [JsonPropertyName("container_count_level1")]
    public int ContainerCountLevel1 { get; set; } = containerCountLevel1;

    /// <summary>
    /// Gets or Sets ContainerCountLevel2
    /// </summary>

    [JsonPropertyName("container_count_level2")]
    public int ContainerCountLevel2 { get; set; } = containerCountLevel2;

    /// <summary>
    /// Gets or Sets ContainerCountLevel3
    /// </summary>

    [JsonPropertyName("container_count_level3")]
    public int ContainerCountLevel3 { get; set; } = containerCountLevel3;

    /// <summary>
    /// Gets or Sets ContainerCountLevel4
    /// </summary>

    [JsonPropertyName("container_count_level4")]
    public int ContainerCountLevel4 { get; set; } = containerCountLevel4;

    /// <summary>
    /// Gets or Sets ContainerCountLevel5
    /// </summary>

    [JsonPropertyName("container_count_level5")]
    public int ContainerCountLevel5 { get; set; } = containerCountLevel5;

    /// <summary>
    /// Gets or Sets ContainerCountLevel6
    /// </summary>

    [JsonPropertyName("container_count_level6")]
    public int ContainerCountLevel6 { get; set; } = containerCountLevel6;

    /// <summary>
    /// Gets or Sets ContainerSet
    /// </summary>

    [JsonPropertyName("container_set")]
    public bool ContainerSet { get; set; } = containerSet;

    /// <summary>
    /// Gets or Sets LitterCountContainer
    /// </summary>

    [JsonPropertyName("litter_count_container")]
    public int LitterCountContainer { get; set; } = litterCountContainer;

    /// <summary>
    /// Gets or Sets LitterCountLandfill
    /// </summary>

    [JsonPropertyName("litter_count_landfill")]
    public int LitterCountLandfill { get; set; } = litterCountLandfill;

    /// <summary>
    /// Gets or Sets LitterCountUnprocessed
    /// </summary>

    [JsonPropertyName("litter_count_unprocessed")]
    public int LitterCountUnprocessed { get; set; } = litterCountUnprocessed;

    /// <summary>
    /// Gets or Sets RobotSet
    /// </summary>

    [JsonPropertyName("robot_set")]
    public bool RobotSet { get; set; } = robotSet;

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class MatchScoreBreakdown2015Alliance {");
        sb.Append("  AutoPoints: ").AppendLine(AutoPoints.ToString());
        sb.Append("  TeleopPoints: ").AppendLine(TeleopPoints.ToString());
        sb.Append("  ContainerPoints: ").AppendLine(ContainerPoints.ToString());
        sb.Append("  TotePoints: ").AppendLine(TotePoints.ToString());
        sb.Append("  LitterPoints: ").AppendLine(LitterPoints.ToString());
        sb.Append("  FoulPoints: ").AppendLine(FoulPoints.ToString());
        sb.Append("  AdjustPoints: ").AppendLine(AdjustPoints.ToString());
        sb.Append("  TotalPoints: ").AppendLine(TotalPoints.ToString());
        sb.Append("  FoulCount: ").AppendLine(FoulCount.ToString());
        sb.Append("  ToteCountFar: ").AppendLine(ToteCountFar.ToString());
        sb.Append("  ToteCountNear: ").AppendLine(ToteCountNear.ToString());
        sb.Append("  ToteSet: ").AppendLine(ToteSet.ToString());
        sb.Append("  ToteStack: ").AppendLine(ToteStack.ToString());
        sb.Append("  ContainerCountLevel1: ").AppendLine(ContainerCountLevel1.ToString());
        sb.Append("  ContainerCountLevel2: ").AppendLine(ContainerCountLevel2.ToString());
        sb.Append("  ContainerCountLevel3: ").AppendLine(ContainerCountLevel3.ToString());
        sb.Append("  ContainerCountLevel4: ").AppendLine(ContainerCountLevel4.ToString());
        sb.Append("  ContainerCountLevel5: ").AppendLine(ContainerCountLevel5.ToString());
        sb.Append("  ContainerCountLevel6: ").AppendLine(ContainerCountLevel6.ToString());
        sb.Append("  ContainerSet: ").AppendLine(ContainerSet.ToString());
        sb.Append("  LitterCountContainer: ").AppendLine(LitterCountContainer.ToString());
        sb.Append("  LitterCountLandfill: ").AppendLine(LitterCountLandfill.ToString());
        sb.Append("  LitterCountUnprocessed: ").AppendLine(LitterCountUnprocessed.ToString());
        sb.Append("  RobotSet: ").AppendLine(RobotSet.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
