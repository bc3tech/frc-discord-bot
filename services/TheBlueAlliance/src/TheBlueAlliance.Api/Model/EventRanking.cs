/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// EventRanking
/// </summary>
public partial class EventRanking : IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="EventRanking" /> class.
    /// </summary>
    [JsonConstructor]
    protected EventRanking() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="EventRanking" /> class.
    /// </summary>
    /// <param name="rankings">List of rankings at the event. (required).</param>
    /// <param name="extraStatsInfo">List of special TBA-generated values provided in the &#x60;extra_stats&#x60; array for each item. (required).</param>
    /// <param name="sortOrderInfo">List of year-specific values provided in the &#x60;sort_orders&#x60; array for each team. (required).</param>
    public EventRanking(List<EventRankingRankingsInner>? rankings = default, List<EventRankingExtraStatsInfoInner>? extraStatsInfo = default, List<EventRankingSortOrderInfoInner>? sortOrderInfo = default)
    {
        // to ensure "rankings" is required (not null)
        ArgumentNullException.ThrowIfNull(rankings);
        this.Rankings = rankings;
        // to ensure "extraStatsInfo" is required (not null)
        ArgumentNullException.ThrowIfNull(extraStatsInfo);
        this.ExtraStatsInfo = extraStatsInfo;
        // to ensure "sortOrderInfo" is required (not null)
        ArgumentNullException.ThrowIfNull(sortOrderInfo);
        this.SortOrderInfo = sortOrderInfo;
    }

    /// <summary>
    /// List of rankings at the event.
    /// </summary>
    /// <value>List of rankings at the event.</value>
    [JsonPropertyName("rankings")]
    public List<EventRankingRankingsInner> Rankings { get; set; }

    /// <summary>
    /// List of special TBA-generated values provided in the &#x60;extra_stats&#x60; array for each item.
    /// </summary>
    /// <value>List of special TBA-generated values provided in the &#x60;extra_stats&#x60; array for each item.</value>
    [JsonPropertyName("extra_stats_info")]
    public List<EventRankingExtraStatsInfoInner> ExtraStatsInfo { get; set; }

    /// <summary>
    /// List of year-specific values provided in the &#x60;sort_orders&#x60; array for each team.
    /// </summary>
    /// <value>List of year-specific values provided in the &#x60;sort_orders&#x60; array for each team.</value>
    [JsonPropertyName("sort_order_info")]
    public List<EventRankingSortOrderInfoInner> SortOrderInfo { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class EventRanking {");
        sb.Append("  Rankings: ").AppendLine(Rankings.ToString());
        sb.Append("  ExtraStatsInfo: ").AppendLine(ExtraStatsInfo.ToString());
        sb.Append("  SortOrderInfo: ").AppendLine(SortOrderInfo.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
