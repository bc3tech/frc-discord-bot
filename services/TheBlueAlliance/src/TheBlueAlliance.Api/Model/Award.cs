/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// Award
/// </summary>
public partial class Award : IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="Award" /> class.
    /// </summary>
    [JsonConstructor]
    protected Award() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="Award" /> class.
    /// </summary>
    /// <param name="name">The name of the award as provided by FIRST. May vary for the same award type. (required).</param>
    /// <param name="awardType">Type of award given. See https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/award_type.py#L6 (required).</param>
    /// <param name="eventKey">The event_key of the event the award was won at. (required).</param>
    /// <param name="recipientList">A list of recipients of the award at the event. May have either a team_key or an awardee, both, or neither (in the case the award wasn&#39;t awarded at the event). (required).</param>
    /// <param name="year">The year this award was won. (required).</param>
    public Award(string? name = default, int awardType = default, string? eventKey = default, AwardRecipient[]? recipientList = default, int year = default)
    {
        // to ensure "name" is required (not null)
        ArgumentNullException.ThrowIfNull(name);
        this.Name = name;
        this.AwardType = awardType;
        // to ensure "eventKey" is required (not null)
        ArgumentNullException.ThrowIfNull(eventKey);
        this.EventKey = eventKey;
        // to ensure "recipientList" is required (not null)
        ArgumentNullException.ThrowIfNull(recipientList);
        this.RecipientList = recipientList;
        this.Year = year;
    }

    /// <summary>
    /// The name of the award as provided by FIRST. May vary for the same award type.
    /// </summary>
    /// <value>The name of the award as provided by FIRST. May vary for the same award type.</value>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Type of award given. See https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/award_type.py#L6
    /// </summary>
    /// <value>Type of award given. See https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/award_type.py#L6</value>
    [JsonPropertyName("award_type")]
    public int AwardType { get; set; }

    /// <summary>
    /// The event_key of the event the award was won at.
    /// </summary>
    /// <value>The event_key of the event the award was won at.</value>
    [JsonPropertyName("event_key")]
    public string EventKey { get; set; }

    /// <summary>
    /// A list of recipients of the award at the event. May have either a team_key or an awardee, both, or neither (in the case the award wasn&#39;t awarded at the event).
    /// </summary>
    /// <value>A list of recipients of the award at the event. May have either a team_key or an awardee, both, or neither (in the case the award wasn&#39;t awarded at the event).</value>
    [JsonPropertyName("recipient_list")]
    public AwardRecipient[] RecipientList { get; set; }

    /// <summary>
    /// The year this award was won.
    /// </summary>
    /// <value>The year this award was won.</value>
    [JsonPropertyName("year")]
    public int Year { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class Award {");
        sb.Append("  Name: ").AppendLine(Name.ToString());
        sb.Append("  AwardType: ").AppendLine(AwardType.ToString());
        sb.Append("  EventKey: ").AppendLine(EventKey.ToString());
        sb.Append("  RecipientList: ").AppendLine(RecipientList.ToString());
        sb.Append("  Year: ").AppendLine(Year.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
