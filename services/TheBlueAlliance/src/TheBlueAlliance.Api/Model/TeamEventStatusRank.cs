/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// TeamEventStatusRank
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="TeamEventStatusRank" /> class.
/// </remarks>
/// <param name="numTeams">Number of teams ranked..</param>
/// <param name="ranking">ranking.</param>
/// <param name="sortOrderInfo">Ordered list of names corresponding to the elements of the &#x60;sort_orders&#x60; array..</param>
/// <param name="status">status.</param>
public partial class TeamEventStatusRank(int numTeams = default, TeamEventStatusRankRanking? ranking = default, List<TeamEventStatusRankSortOrderInfoInner>? sortOrderInfo = default, string? status = default) : IValidatableObject
{

    /// <summary>
    /// Number of teams ranked.
    /// </summary>
    /// <value>Number of teams ranked.</value>

    [JsonPropertyName("num_teams")]
    public int NumTeams { get; set; } = numTeams;

    /// <summary>
    /// Gets or Sets Ranking
    /// </summary>

    [JsonPropertyName("ranking")]
    public TeamEventStatusRankRanking Ranking { get; set; } = ranking;

    /// <summary>
    /// Ordered list of names corresponding to the elements of the &#x60;sort_orders&#x60; array.
    /// </summary>
    /// <value>Ordered list of names corresponding to the elements of the &#x60;sort_orders&#x60; array.</value>

    [JsonPropertyName("sort_order_info")]
    public List<TeamEventStatusRankSortOrderInfoInner> SortOrderInfo { get; set; } = sortOrderInfo;

    /// <summary>
    /// Gets or Sets Status
    /// </summary>

    [JsonPropertyName("status")]
    public string Status { get; set; } = status;

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class TeamEventStatusRank {");
        sb.Append("  NumTeams: ").AppendLine(NumTeams.ToString());
        sb.Append("  Ranking: ").AppendLine(Ranking.ToString());
        sb.Append("  SortOrderInfo: ").AppendLine(SortOrderInfo.ToString());
        sb.Append("  Status: ").AppendLine(Status.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
