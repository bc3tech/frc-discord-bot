/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Api.Model;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
using System.Text.Json.Serialization;

/// <summary>
/// TeamEventStatusRankRanking
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="TeamEventStatusRankRanking" /> class.
/// </remarks>
/// <param name="matchesPlayed">Number of matches played..</param>
/// <param name="qualAverage">For some years, average qualification score. Can be null..</param>
/// <param name="sortOrders">Ordered list of values used to determine the rank. See the &#x60;sort_order_info&#x60; property for the name of each value..</param>
/// <param name="record">record.</param>
/// <param name="rank">Relative rank of this team..</param>
/// <param name="dq">Number of matches the team was disqualified for..</param>
/// <param name="teamKey">TBA team key for this rank..</param>
public partial class TeamEventStatusRankRanking(int matchesPlayed = default, double qualAverage = default, List<decimal>? sortOrders = default, WLTRecord? record = default, int rank = default, int dq = default, string? teamKey = default) : IValidatableObject
{

    /// <summary>
    /// Number of matches played.
    /// </summary>
    /// <value>Number of matches played.</value>

    [JsonPropertyName("matches_played")]
    public int MatchesPlayed { get; set; } = matchesPlayed;

    /// <summary>
    /// For some years, average qualification score. Can be null.
    /// </summary>
    /// <value>For some years, average qualification score. Can be null.</value>

    [JsonPropertyName("qual_average")]
    public double QualAverage { get; set; } = qualAverage;

    /// <summary>
    /// Ordered list of values used to determine the rank. See the &#x60;sort_order_info&#x60; property for the name of each value.
    /// </summary>
    /// <value>Ordered list of values used to determine the rank. See the &#x60;sort_order_info&#x60; property for the name of each value.</value>

    [JsonPropertyName("sort_orders")]
    public List<decimal> SortOrders { get; set; } = sortOrders;

    /// <summary>
    /// Gets or Sets Record
    /// </summary>

    [JsonPropertyName("record")]
    public WLTRecord Record { get; set; } = record;

    /// <summary>
    /// Relative rank of this team.
    /// </summary>
    /// <value>Relative rank of this team.</value>

    [JsonPropertyName("rank")]
    public int Rank { get; set; } = rank;

    /// <summary>
    /// Number of matches the team was disqualified for.
    /// </summary>
    /// <value>Number of matches the team was disqualified for.</value>

    [JsonPropertyName("dq")]
    public int Dq { get; set; } = dq;

    /// <summary>
    /// TBA team key for this rank.
    /// </summary>
    /// <value>TBA team key for this rank.</value>

    [JsonPropertyName("team_key")]
    public string TeamKey { get; set; } = teamKey;

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        StringBuilder sb = new();
        sb.AppendLine("class TeamEventStatusRankRanking {");
        sb.Append("  MatchesPlayed: ").AppendLine(MatchesPlayed.ToString());
        sb.Append("  QualAverage: ").AppendLine(QualAverage.ToString());
        sb.Append("  SortOrders: ").AppendLine(SortOrders.ToString());
        sb.Append("  Record: ").AppendLine(Record.ToString());
        sb.Append("  Rank: ").AppendLine(Rank.ToString());
        sb.Append("  Dq: ").AppendLine(Dq.ToString());
        sb.Append("  TeamKey: ").AppendLine(TeamKey.ToString());
        sb.AppendLine("}");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(this);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
