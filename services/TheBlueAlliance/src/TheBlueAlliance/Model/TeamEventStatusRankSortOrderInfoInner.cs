/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.11
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

    namespace TheBlueAlliance.Model;
    
    using System.Runtime.Serialization;
    using System.Text;
    using System.Text.Json;
    using System.Text.Json.Serialization;
  using System.Collections.ObjectModel;
    
    /// <summary>
/// TeamEventStatusRankSortOrderInfoInner
/// </summary>

  public partial record TeamEventStatusRankSortOrderInfoInner
  {
        /// <summary>
        /// Initializes a new instance of the <see cref="TeamEventStatusRankSortOrderInfoInner" /> class.
        /// </summary>
            /// <param name="name">The descriptive name of the value used to sort the ranking.</param>
            /// <param name="precision">The number of digits of precision used for this value, eg &#x60;2&#x60; would correspond to a value of &#x60;101.11&#x60; while &#x60;0&#x60; would correspond to &#x60;101&#x60;.</param>
        public TeamEventStatusRankSortOrderInfoInner(string? name = default, int? precision = default)
        {
                      this.Name = name;
                      this.Precision = precision;
        }
        
              /// <summary>
              /// The descriptive name of the value used to sort the ranking.
              /// </summary>
              /// <value>The descriptive name of the value used to sort the ranking.</value>
                
                  [JsonPropertyName("name")]
                  public string? Name { get; set; }
                  
              /// <summary>
              /// The number of digits of precision used for this value, eg &#x60;2&#x60; would correspond to a value of &#x60;101.11&#x60; while &#x60;0&#x60; would correspond to &#x60;101&#x60;.
              /// </summary>
              /// <value>The number of digits of precision used for this value, eg &#x60;2&#x60; would correspond to a value of &#x60;101.11&#x60; while &#x60;0&#x60; would correspond to &#x60;101&#x60;.</value>
                
                  [JsonPropertyName("precision")]
                  public int? Precision { get; set; }
                  
              /// <summary>
              /// Returns the JSON string presentation of the object
              /// </summary>
              /// <returns>JSON string presentation of the object</returns>
              public string ToJson()
              {
                return JsonSerializer.Serialize(this);
              }
            }
            
