/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

    namespace TheBlueAlliance.Model;
    
    using System.Text;
    using System.Text.Json;
    using System.Text.Json.Serialization;
  using System.Collections.ObjectModel;
    
    /// <summary>
/// NotablesInsightDataEntriesInner
/// </summary>
internal partial class NotablesInsightDataEntriesInner
{
            // yup
            /// <summary>
            /// Initializes a new instance of the <see cref="NotablesInsightDataEntriesInner" /> class.
            /// </summary>
            [JsonConstructor]
            protected NotablesInsightDataEntriesInner() { 
          }
          
      /// <summary>
      /// Initializes a new instance of the <see cref="NotablesInsightDataEntriesInner" /> class.
      /// </summary>
          /// <param name="context">A list of events this team achieved the notable at. This type may change over time. (required).</param>
          /// <param name="teamKey">teamKey (required).</param>
      public NotablesInsightDataEntriesInner(Collection<string> context, string teamKey)
      {
                    // to ensure "context" is required (not null)
                    ArgumentNullException.ThrowIfNull(context);
                    this.Context = context;
                      
                    // to ensure "teamKey" is required (not null)
                    ArgumentNullException.ThrowIfNull(teamKey);
                    this.TeamKey = teamKey;
      }
      
            /// <summary>
            /// A list of events this team achieved the notable at. This type may change over time.
            /// </summary>
            /// <value>A list of events this team achieved the notable at. This type may change over time.</value>
              [JsonRequired]
                [JsonPropertyName("context")]
                public Collection<string> Context { get; set; }
                
            /// <summary>
            /// Gets or Sets TeamKey
            /// </summary>
              [JsonRequired]
                [JsonPropertyName("team_key")]
                public string TeamKey { get; set; }
                
            /// <summary>
            /// Returns the string presentation of the object
            /// </summary>
            /// <returns>string presentation of the object</returns>
            public override string ToString()
            {
              StringBuilder sb = new();
              sb.AppendLine("class NotablesInsightDataEntriesInner {");
                  sb.Append("  Context: ").AppendLine($"{(Context is null ? "[null]" : string.Join(", ", Context))}");
                  sb.Append("  TeamKey: ").AppendLine($"{ TeamKey }");
              sb.AppendLine("}");
              return sb.ToString();
            }
            
            /// <summary>
            /// Returns the JSON string presentation of the object
            /// </summary>
            /// <returns>JSON string presentation of the object</returns>
            public string ToJson()
            {
              return JsonSerializer.Serialize(this);
            }
          }
          
