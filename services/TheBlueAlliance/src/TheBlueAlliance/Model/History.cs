/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.7
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

    namespace TheBlueAlliance.Model;
    
    using System.Text;
    using System.Text.Json;
    using System.Text.Json.Serialization;
  using System.Collections.ObjectModel;
    
    /// <summary>
/// History
/// </summary>
public partial class History
{
            // yup
            /// <summary>
            /// Initializes a new instance of the <see cref="History" /> class.
            /// </summary>
            [JsonConstructor]
            protected History() { 
          }
          
      /// <summary>
      /// Initializes a new instance of the <see cref="History" /> class.
      /// </summary>
          /// <param name="awards">awards (required).</param>
          /// <param name="events">events (required).</param>
      public History(Collection<Award> awards, Collection<Event> events)
      {
                    // to ensure "awards" is required (not null)
                    ArgumentNullException.ThrowIfNull(awards);
                    this.Awards = awards;
                      
                    // to ensure "events" is required (not null)
                    ArgumentNullException.ThrowIfNull(events);
                    this.Events = events;
      }
      
            /// <summary>
            /// Gets or Sets Awards
            /// </summary>
              [JsonRequired]
                [JsonPropertyName("awards")]
                public Collection<Award> Awards { get; set; }
                
            /// <summary>
            /// Gets or Sets Events
            /// </summary>
              [JsonRequired]
                [JsonPropertyName("events")]
                public Collection<Event> Events { get; set; }
                
            /// <summary>
            /// Returns the string presentation of the object
            /// </summary>
            /// <returns>string presentation of the object</returns>
            public override string ToString()
            {
              StringBuilder sb = new();
              sb.AppendLine("class History {");
                  sb.Append("  Awards: ").AppendLine($"{(Awards is null ? "[null]" : string.Join(", ", Awards))}");
                  sb.Append("  Events: ").AppendLine($"{(Events is null ? "[null]" : string.Join(", ", Events))}");
              sb.AppendLine("}");
              return sb.ToString();
            }
            
            /// <summary>
            /// Returns the JSON string presentation of the object
            /// </summary>
            /// <returns>JSON string presentation of the object</returns>
            public string ToJson()
            {
              return JsonSerializer.Serialize(this);
            }
          }
          
