/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.11
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

    namespace TheBlueAlliance.Model;
    
    using System.Text;
    using System.Text.Json;
    using System.Text.Json.Serialization;
  using System.Collections.ObjectModel;
    
    /// <summary>
/// MatchScoreBreakdown2023AllianceAutoCommunity
/// </summary>
#pragma warning disable CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.
  public partial record MatchScoreBreakdown2023AllianceAutoCommunity
  {
              /// <summary>
  /// Defines B
  /// </summary>
  [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceAutoCommunityExtensions", ExtensionClassModifiers ="public static")]
  [JsonConverter(typeof(JsonStringEnumConverter<BEnum>))]
  public enum BEnum
  {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        None = 1,
          
        /// <summary>
        /// Enum Cone for value: Cone
        /// </summary>
        Cone = 2,
          
        /// <summary>
        /// Enum Cube for value: Cube
        /// </summary>
        Cube = 3
  }
    
    /// <summary>
    /// Returns a <see cref="BEnum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    /// <exception cref="NotImplementedException"></exception>
    public static BEnum BEnumFromString(string value)
    {
      return value switch
      {
            "None" => BEnum.None,
            "Cone" => BEnum.Cone,
            "Cube" => BEnum.Cube,
        _ => throw new NotImplementedException($"Could not convert value to type BEnum: '{value}'")
      };
    }
    
    /// <summary>
    /// Returns a <see cref="BEnum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static BEnum? BEnumFromStringOrDefault(string value)
    {
      return value switch
      {
            "None" => BEnum.None,
            "Cone" => BEnum.Cone,
            "Cube" => BEnum.Cube,
        _ => null
      };
    }
    
    /// <summary>
    /// Converts the <see cref="BEnum"/> to the json value
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
      /// <exception cref="NotImplementedException"></exception>
    public static string BEnumToJsonValue(BEnum value)
    {
        return value switch
        {
              BEnum.None => "None",
              BEnum.Cone => "Cone",
              BEnum.Cube => "Cube",
          _ => throw new NotImplementedException($"Value could not be handled: '{value}'")
        };
    }

              /// <summary>
  /// Defines M
  /// </summary>
  [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceAutoCommunityExtensions", ExtensionClassModifiers ="public static")]
  [JsonConverter(typeof(JsonStringEnumConverter<MEnum>))]
  public enum MEnum
  {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        None = 1,
          
        /// <summary>
        /// Enum Cone for value: Cone
        /// </summary>
        Cone = 2,
          
        /// <summary>
        /// Enum Cube for value: Cube
        /// </summary>
        Cube = 3
  }
    
    /// <summary>
    /// Returns a <see cref="MEnum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    /// <exception cref="NotImplementedException"></exception>
    public static MEnum MEnumFromString(string value)
    {
      return value switch
      {
            "None" => MEnum.None,
            "Cone" => MEnum.Cone,
            "Cube" => MEnum.Cube,
        _ => throw new NotImplementedException($"Could not convert value to type MEnum: '{value}'")
      };
    }
    
    /// <summary>
    /// Returns a <see cref="MEnum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static MEnum? MEnumFromStringOrDefault(string value)
    {
      return value switch
      {
            "None" => MEnum.None,
            "Cone" => MEnum.Cone,
            "Cube" => MEnum.Cube,
        _ => null
      };
    }
    
    /// <summary>
    /// Converts the <see cref="MEnum"/> to the json value
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
      /// <exception cref="NotImplementedException"></exception>
    public static string MEnumToJsonValue(MEnum value)
    {
        return value switch
        {
              MEnum.None => "None",
              MEnum.Cone => "Cone",
              MEnum.Cube => "Cube",
          _ => throw new NotImplementedException($"Value could not be handled: '{value}'")
        };
    }

              /// <summary>
  /// Defines T
  /// </summary>
  [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceAutoCommunityExtensions", ExtensionClassModifiers ="public static")]
  [JsonConverter(typeof(JsonStringEnumConverter<TEnum>))]
  public enum TEnum
  {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        None = 1,
          
        /// <summary>
        /// Enum Cone for value: Cone
        /// </summary>
        Cone = 2,
          
        /// <summary>
        /// Enum Cube for value: Cube
        /// </summary>
        Cube = 3
  }
    
    /// <summary>
    /// Returns a <see cref="TEnum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    /// <exception cref="NotImplementedException"></exception>
    public static TEnum TEnumFromString(string value)
    {
      return value switch
      {
            "None" => TEnum.None,
            "Cone" => TEnum.Cone,
            "Cube" => TEnum.Cube,
        _ => throw new NotImplementedException($"Could not convert value to type TEnum: '{value}'")
      };
    }
    
    /// <summary>
    /// Returns a <see cref="TEnum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static TEnum? TEnumFromStringOrDefault(string value)
    {
      return value switch
      {
            "None" => TEnum.None,
            "Cone" => TEnum.Cone,
            "Cube" => TEnum.Cube,
        _ => null
      };
    }
    
    /// <summary>
    /// Converts the <see cref="TEnum"/> to the json value
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
      /// <exception cref="NotImplementedException"></exception>
    public static string TEnumToJsonValue(TEnum value)
    {
        return value switch
        {
              TEnum.None => "None",
              TEnum.Cone => "Cone",
              TEnum.Cube => "Cube",
          _ => throw new NotImplementedException($"Value could not be handled: '{value}'")
        };
    }

              // yup
              /// <summary>
              /// Initializes a new instance of the <see cref="MatchScoreBreakdown2023AllianceAutoCommunity" /> class.
              /// </summary>
              [JsonConstructor]
              protected MatchScoreBreakdown2023AllianceAutoCommunity() { 
            }
            
        /// <summary>
        /// Initializes a new instance of the <see cref="MatchScoreBreakdown2023AllianceAutoCommunity" /> class.
        /// </summary>
            /// <param name="b">b (required).</param>
            /// <param name="m">m (required).</param>
            /// <param name="t">t (required).</param>
        public MatchScoreBreakdown2023AllianceAutoCommunity(Collection<BEnum> b, Collection<MEnum> m, Collection<TEnum> t)
        {
                      // to ensure "b" is required (not null)
                      ArgumentNullException.ThrowIfNull(b);
                      this.B = b;
                        
                      // to ensure "m" is required (not null)
                      ArgumentNullException.ThrowIfNull(m);
                      this.M = m;
                        
                      // to ensure "t" is required (not null)
                      ArgumentNullException.ThrowIfNull(t);
                      this.T = t;
        }
        
              /// <summary>
              /// Gets or Sets B
              /// </summary>
                [JsonRequired]
                  [JsonPropertyName("B")]
                  public Collection<MatchScoreBreakdown2023AllianceAutoCommunity.BEnum> B { get; set; }
                  
              /// <summary>
              /// Gets or Sets M
              /// </summary>
                [JsonRequired]
                  [JsonPropertyName("M")]
                  public Collection<MatchScoreBreakdown2023AllianceAutoCommunity.MEnum> M { get; set; }
                  
              /// <summary>
              /// Gets or Sets T
              /// </summary>
                [JsonRequired]
                  [JsonPropertyName("T")]
                  public Collection<MatchScoreBreakdown2023AllianceAutoCommunity.TEnum> T { get; set; }
                  
              /// <summary>
              /// Returns the JSON string presentation of the object
              /// </summary>
              /// <returns>JSON string presentation of the object</returns>
              public string ToJson()
              {
                return JsonSerializer.Serialize(this);
              }
            }
            #pragma warning restore CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.
