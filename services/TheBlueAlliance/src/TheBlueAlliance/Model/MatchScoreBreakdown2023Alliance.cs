/*
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.9.11
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TheBlueAlliance.Model;

using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Serialization;

/// <summary>
/// MatchScoreBreakdown2023Alliance
/// </summary>

public partial record MatchScoreBreakdown2023Alliance
{
    /// <summary>
    /// Defines AutoBridgeState
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<AutoBridgeStateEnum>))]
    public enum AutoBridgeStateEnum
    {
        /// <summary>
        /// Enum NotLevel for value: NotLevel
        /// </summary>
        [EnumMember(Value = "NotLevel")]
        NotLevel = 1,

        /// <summary>
        /// Enum Level for value: Level
        /// </summary>
        [EnumMember(Value = "Level")]
        Level = 2
    }

    /// <summary>
    /// Returns a <see cref="AutoBridgeStateEnum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static AutoBridgeStateEnum? AutoBridgeStateEnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "NotLevel" => AutoBridgeStateEnum.NotLevel,
            "Level" => AutoBridgeStateEnum.Level,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets AutoBridgeState
    /// </summary>

    [JsonPropertyName("autoBridgeState")]
    public AutoBridgeStateEnum? AutoBridgeState { get; set; }
    /// <summary>
    /// Defines AutoChargeStationRobot1
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<AutoChargeStationRobot1Enum>))]
    public enum AutoChargeStationRobot1Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Returns a <see cref="AutoChargeStationRobot1Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static AutoChargeStationRobot1Enum? AutoChargeStationRobot1EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "None" => AutoChargeStationRobot1Enum.None,
            "Docked" => AutoChargeStationRobot1Enum.Docked,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets AutoChargeStationRobot1
    /// </summary>

    [JsonPropertyName("autoChargeStationRobot1")]
    public AutoChargeStationRobot1Enum? AutoChargeStationRobot1 { get; set; }
    /// <summary>
    /// Defines AutoChargeStationRobot2
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<AutoChargeStationRobot2Enum>))]
    public enum AutoChargeStationRobot2Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Returns a <see cref="AutoChargeStationRobot2Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static AutoChargeStationRobot2Enum? AutoChargeStationRobot2EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "None" => AutoChargeStationRobot2Enum.None,
            "Docked" => AutoChargeStationRobot2Enum.Docked,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets AutoChargeStationRobot2
    /// </summary>

    [JsonPropertyName("autoChargeStationRobot2")]
    public AutoChargeStationRobot2Enum? AutoChargeStationRobot2 { get; set; }
    /// <summary>
    /// Defines AutoChargeStationRobot3
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<AutoChargeStationRobot3Enum>))]
    public enum AutoChargeStationRobot3Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Returns a <see cref="AutoChargeStationRobot3Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static AutoChargeStationRobot3Enum? AutoChargeStationRobot3EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "None" => AutoChargeStationRobot3Enum.None,
            "Docked" => AutoChargeStationRobot3Enum.Docked,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets AutoChargeStationRobot3
    /// </summary>

    [JsonPropertyName("autoChargeStationRobot3")]
    public AutoChargeStationRobot3Enum? AutoChargeStationRobot3 { get; set; }
    /// <summary>
    /// Defines EndGameBridgeState
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<EndGameBridgeStateEnum>))]
    public enum EndGameBridgeStateEnum
    {
        /// <summary>
        /// Enum NotLevel for value: NotLevel
        /// </summary>
        [EnumMember(Value = "NotLevel")]
        NotLevel = 1,

        /// <summary>
        /// Enum Level for value: Level
        /// </summary>
        [EnumMember(Value = "Level")]
        Level = 2
    }

    /// <summary>
    /// Returns a <see cref="EndGameBridgeStateEnum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static EndGameBridgeStateEnum? EndGameBridgeStateEnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "NotLevel" => EndGameBridgeStateEnum.NotLevel,
            "Level" => EndGameBridgeStateEnum.Level,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets EndGameBridgeState
    /// </summary>

    [JsonPropertyName("endGameBridgeState")]
    public EndGameBridgeStateEnum? EndGameBridgeState { get; set; }
    /// <summary>
    /// Defines EndGameChargeStationRobot1
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<EndGameChargeStationRobot1Enum>))]
    public enum EndGameChargeStationRobot1Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Returns a <see cref="EndGameChargeStationRobot1Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static EndGameChargeStationRobot1Enum? EndGameChargeStationRobot1EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "None" => EndGameChargeStationRobot1Enum.None,
            "Docked" => EndGameChargeStationRobot1Enum.Docked,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets EndGameChargeStationRobot1
    /// </summary>

    [JsonPropertyName("endGameChargeStationRobot1")]
    public EndGameChargeStationRobot1Enum? EndGameChargeStationRobot1 { get; set; }
    /// <summary>
    /// Defines EndGameChargeStationRobot2
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<EndGameChargeStationRobot2Enum>))]
    public enum EndGameChargeStationRobot2Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Returns a <see cref="EndGameChargeStationRobot2Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static EndGameChargeStationRobot2Enum? EndGameChargeStationRobot2EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "None" => EndGameChargeStationRobot2Enum.None,
            "Docked" => EndGameChargeStationRobot2Enum.Docked,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets EndGameChargeStationRobot2
    /// </summary>

    [JsonPropertyName("endGameChargeStationRobot2")]
    public EndGameChargeStationRobot2Enum? EndGameChargeStationRobot2 { get; set; }
    /// <summary>
    /// Defines EndGameChargeStationRobot3
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<EndGameChargeStationRobot3Enum>))]
    public enum EndGameChargeStationRobot3Enum
    {
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 1,

        /// <summary>
        /// Enum Docked for value: Docked
        /// </summary>
        [EnumMember(Value = "Docked")]
        Docked = 2
    }

    /// <summary>
    /// Returns a <see cref="EndGameChargeStationRobot3Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static EndGameChargeStationRobot3Enum? EndGameChargeStationRobot3EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "None" => EndGameChargeStationRobot3Enum.None,
            "Docked" => EndGameChargeStationRobot3Enum.Docked,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets EndGameChargeStationRobot3
    /// </summary>

    [JsonPropertyName("endGameChargeStationRobot3")]
    public EndGameChargeStationRobot3Enum? EndGameChargeStationRobot3 { get; set; }
    /// <summary>
    /// Defines MobilityRobot1
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<MobilityRobot1Enum>))]
    public enum MobilityRobot1Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Returns a <see cref="MobilityRobot1Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static MobilityRobot1Enum? MobilityRobot1EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "Yes" => MobilityRobot1Enum.Yes,
            "No" => MobilityRobot1Enum.No,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets MobilityRobot1
    /// </summary>

    [JsonPropertyName("mobilityRobot1")]
    public MobilityRobot1Enum? MobilityRobot1 { get; set; }
    /// <summary>
    /// Defines MobilityRobot2
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<MobilityRobot2Enum>))]
    public enum MobilityRobot2Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Returns a <see cref="MobilityRobot2Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static MobilityRobot2Enum? MobilityRobot2EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "Yes" => MobilityRobot2Enum.Yes,
            "No" => MobilityRobot2Enum.No,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets MobilityRobot2
    /// </summary>

    [JsonPropertyName("mobilityRobot2")]
    public MobilityRobot2Enum? MobilityRobot2 { get; set; }
    /// <summary>
    /// Defines MobilityRobot3
    /// </summary>
    [Microsoft.Extensions.EnumStrings.EnumStrings(ExtensionNamespace = "TheBlueAlliance.Model.MatchScoreBreakdown2023AllianceExtensions", ExtensionClassModifiers = "public static")]
    [JsonConverter(typeof(JsonStringEnumConverterWithEnumMemberSupport<MobilityRobot3Enum>))]
    public enum MobilityRobot3Enum
    {
        /// <summary>
        /// Enum Yes for value: Yes
        /// </summary>
        [EnumMember(Value = "Yes")]
        Yes = 1,

        /// <summary>
        /// Enum No for value: No
        /// </summary>
        [EnumMember(Value = "No")]
        No = 2
    }

    /// <summary>
    /// Returns a <see cref="MobilityRobot3Enum"/>
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    public static MobilityRobot3Enum? MobilityRobot3EnumFromStringOrDefault(string value)
    {
        return value switch
        {
            "Yes" => MobilityRobot3Enum.Yes,
            "No" => MobilityRobot3Enum.No,
            _ => null
        };
    }

    /// <summary>
    /// Gets or Sets MobilityRobot3
    /// </summary>

    [JsonPropertyName("mobilityRobot3")]
    public MobilityRobot3Enum? MobilityRobot3 { get; set; }
    /// <summary>
    /// Initializes a new instance of the <see cref="MatchScoreBreakdown2023Alliance" /> class.
    /// </summary>
    /// <param name="activationBonusAchieved">activationBonusAchieved.</param>
    /// <param name="adjustPoints">adjustPoints.</param>
    /// <param name="autoBridgeState">autoBridgeState.</param>
    /// <param name="autoChargeStationPoints">autoChargeStationPoints.</param>
    /// <param name="autoChargeStationRobot1">autoChargeStationRobot1.</param>
    /// <param name="autoChargeStationRobot2">autoChargeStationRobot2.</param>
    /// <param name="autoChargeStationRobot3">autoChargeStationRobot3.</param>
    /// <param name="autoCommunity">autoCommunity.</param>
    /// <param name="autoDocked">autoDocked.</param>
    /// <param name="autoGamePieceCount">autoGamePieceCount.</param>
    /// <param name="autoGamePiecePoints">autoGamePiecePoints.</param>
    /// <param name="autoMobilityPoints">autoMobilityPoints.</param>
    /// <param name="autoPoints">autoPoints.</param>
    /// <param name="coopGamePieceCount">coopGamePieceCount.</param>
    /// <param name="coopertitionCriteriaMet">coopertitionCriteriaMet.</param>
    /// <param name="endGameBridgeState">endGameBridgeState.</param>
    /// <param name="endGameChargeStationPoints">endGameChargeStationPoints.</param>
    /// <param name="endGameChargeStationRobot1">endGameChargeStationRobot1.</param>
    /// <param name="endGameChargeStationRobot2">endGameChargeStationRobot2.</param>
    /// <param name="endGameChargeStationRobot3">endGameChargeStationRobot3.</param>
    /// <param name="endGameParkPoints">endGameParkPoints.</param>
    /// <param name="extraGamePieceCount">extraGamePieceCount.</param>
    /// <param name="foulCount">foulCount.</param>
    /// <param name="foulPoints">foulPoints.</param>
    /// <param name="linkPoints">linkPoints.</param>
    /// <param name="links">links.</param>
    /// <param name="mobilityRobot1">mobilityRobot1.</param>
    /// <param name="mobilityRobot2">mobilityRobot2.</param>
    /// <param name="mobilityRobot3">mobilityRobot3.</param>
    /// <param name="rp">rp.</param>
    /// <param name="sustainabilityBonusAchieved">sustainabilityBonusAchieved.</param>
    /// <param name="techFoulCount">techFoulCount.</param>
    /// <param name="teleopCommunity">teleopCommunity.</param>
    /// <param name="teleopGamePieceCount">teleopGamePieceCount.</param>
    /// <param name="teleopGamePiecePoints">teleopGamePiecePoints.</param>
    /// <param name="teleopPoints">teleopPoints.</param>
    /// <param name="totalChargeStationPoints">totalChargeStationPoints.</param>
    /// <param name="totalPoints">totalPoints.</param>
    public MatchScoreBreakdown2023Alliance(bool? activationBonusAchieved = default, int? adjustPoints = default, AutoBridgeStateEnum? autoBridgeState = default, int? autoChargeStationPoints = default, AutoChargeStationRobot1Enum? autoChargeStationRobot1 = default, AutoChargeStationRobot2Enum? autoChargeStationRobot2 = default, AutoChargeStationRobot3Enum? autoChargeStationRobot3 = default, MatchScoreBreakdown2023AllianceAutoCommunity? autoCommunity = default, bool? autoDocked = default, int? autoGamePieceCount = default, int? autoGamePiecePoints = default, int? autoMobilityPoints = default, int? autoPoints = default, int? coopGamePieceCount = default, bool? coopertitionCriteriaMet = default, EndGameBridgeStateEnum? endGameBridgeState = default, int? endGameChargeStationPoints = default, EndGameChargeStationRobot1Enum? endGameChargeStationRobot1 = default, EndGameChargeStationRobot2Enum? endGameChargeStationRobot2 = default, EndGameChargeStationRobot3Enum? endGameChargeStationRobot3 = default, int? endGameParkPoints = default, int? extraGamePieceCount = default, int? foulCount = default, int? foulPoints = default, int? linkPoints = default, Collection<MatchScoreBreakdown2023AllianceLinksInner>? links = default, MobilityRobot1Enum? mobilityRobot1 = default, MobilityRobot2Enum? mobilityRobot2 = default, MobilityRobot3Enum? mobilityRobot3 = default, int? rp = default, bool? sustainabilityBonusAchieved = default, int? techFoulCount = default, MatchScoreBreakdown2023AllianceAutoCommunity? teleopCommunity = default, int? teleopGamePieceCount = default, int? teleopGamePiecePoints = default, int? teleopPoints = default, int? totalChargeStationPoints = default, int? totalPoints = default)
    {
        this.ActivationBonusAchieved = activationBonusAchieved;
        this.AdjustPoints = adjustPoints;
        this.AutoBridgeState = autoBridgeState;
        this.AutoChargeStationPoints = autoChargeStationPoints;
        this.AutoChargeStationRobot1 = autoChargeStationRobot1;
        this.AutoChargeStationRobot2 = autoChargeStationRobot2;
        this.AutoChargeStationRobot3 = autoChargeStationRobot3;
        this.AutoCommunity = autoCommunity;
        this.AutoDocked = autoDocked;
        this.AutoGamePieceCount = autoGamePieceCount;
        this.AutoGamePiecePoints = autoGamePiecePoints;
        this.AutoMobilityPoints = autoMobilityPoints;
        this.AutoPoints = autoPoints;
        this.CoopGamePieceCount = coopGamePieceCount;
        this.CoopertitionCriteriaMet = coopertitionCriteriaMet;
        this.EndGameBridgeState = endGameBridgeState;
        this.EndGameChargeStationPoints = endGameChargeStationPoints;
        this.EndGameChargeStationRobot1 = endGameChargeStationRobot1;
        this.EndGameChargeStationRobot2 = endGameChargeStationRobot2;
        this.EndGameChargeStationRobot3 = endGameChargeStationRobot3;
        this.EndGameParkPoints = endGameParkPoints;
        this.ExtraGamePieceCount = extraGamePieceCount;
        this.FoulCount = foulCount;
        this.FoulPoints = foulPoints;
        this.LinkPoints = linkPoints;
        this.Links = links;
        this.MobilityRobot1 = mobilityRobot1;
        this.MobilityRobot2 = mobilityRobot2;
        this.MobilityRobot3 = mobilityRobot3;
        this.Rp = rp;
        this.SustainabilityBonusAchieved = sustainabilityBonusAchieved;
        this.TechFoulCount = techFoulCount;
        this.TeleopCommunity = teleopCommunity;
        this.TeleopGamePieceCount = teleopGamePieceCount;
        this.TeleopGamePiecePoints = teleopGamePiecePoints;
        this.TeleopPoints = teleopPoints;
        this.TotalChargeStationPoints = totalChargeStationPoints;
        this.TotalPoints = totalPoints;
    }

    /// <summary>
    /// Gets or Sets ActivationBonusAchieved
    /// </summary>

    [JsonPropertyName("activationBonusAchieved")]
    public bool? ActivationBonusAchieved { get; set; }

    /// <summary>
    /// Gets or Sets AdjustPoints
    /// </summary>

    [JsonPropertyName("adjustPoints")]
    public int? AdjustPoints { get; set; }

    /// <summary>
    /// Gets or Sets AutoChargeStationPoints
    /// </summary>

    [JsonPropertyName("autoChargeStationPoints")]
    public int? AutoChargeStationPoints { get; set; }

    /// <summary>
    /// Gets or Sets AutoCommunity
    /// </summary>

    [JsonPropertyName("autoCommunity")]
    public MatchScoreBreakdown2023AllianceAutoCommunity? AutoCommunity { get; set; }

    /// <summary>
    /// Gets or Sets AutoDocked
    /// </summary>

    [JsonPropertyName("autoDocked")]
    public bool? AutoDocked { get; set; }

    /// <summary>
    /// Gets or Sets AutoGamePieceCount
    /// </summary>

    [JsonPropertyName("autoGamePieceCount")]
    public int? AutoGamePieceCount { get; set; }

    /// <summary>
    /// Gets or Sets AutoGamePiecePoints
    /// </summary>

    [JsonPropertyName("autoGamePiecePoints")]
    public int? AutoGamePiecePoints { get; set; }

    /// <summary>
    /// Gets or Sets AutoMobilityPoints
    /// </summary>

    [JsonPropertyName("autoMobilityPoints")]
    public int? AutoMobilityPoints { get; set; }

    /// <summary>
    /// Gets or Sets AutoPoints
    /// </summary>

    [JsonPropertyName("autoPoints")]
    public int? AutoPoints { get; set; }

    /// <summary>
    /// Gets or Sets CoopGamePieceCount
    /// </summary>

    [JsonPropertyName("coopGamePieceCount")]
    public int? CoopGamePieceCount { get; set; }

    /// <summary>
    /// Gets or Sets CoopertitionCriteriaMet
    /// </summary>

    [JsonPropertyName("coopertitionCriteriaMet")]
    public bool? CoopertitionCriteriaMet { get; set; }

    /// <summary>
    /// Gets or Sets EndGameChargeStationPoints
    /// </summary>

    [JsonPropertyName("endGameChargeStationPoints")]
    public int? EndGameChargeStationPoints { get; set; }

    /// <summary>
    /// Gets or Sets EndGameParkPoints
    /// </summary>

    [JsonPropertyName("endGameParkPoints")]
    public int? EndGameParkPoints { get; set; }

    /// <summary>
    /// Gets or Sets ExtraGamePieceCount
    /// </summary>

    [JsonPropertyName("extraGamePieceCount")]
    public int? ExtraGamePieceCount { get; set; }

    /// <summary>
    /// Gets or Sets FoulCount
    /// </summary>

    [JsonPropertyName("foulCount")]
    public int? FoulCount { get; set; }

    /// <summary>
    /// Gets or Sets FoulPoints
    /// </summary>

    [JsonPropertyName("foulPoints")]
    public int? FoulPoints { get; set; }

    /// <summary>
    /// Gets or Sets LinkPoints
    /// </summary>

    [JsonPropertyName("linkPoints")]
    public int? LinkPoints { get; set; }

    /// <summary>
    /// Gets or Sets Links
    /// </summary>

    [JsonPropertyName("links")]
    public Collection<MatchScoreBreakdown2023AllianceLinksInner>? Links { get; set; }

    /// <summary>
    /// Gets or Sets Rp
    /// </summary>

    [JsonPropertyName("rp")]
    public int? Rp { get; set; }

    /// <summary>
    /// Gets or Sets SustainabilityBonusAchieved
    /// </summary>

    [JsonPropertyName("sustainabilityBonusAchieved")]
    public bool? SustainabilityBonusAchieved { get; set; }

    /// <summary>
    /// Gets or Sets TechFoulCount
    /// </summary>

    [JsonPropertyName("techFoulCount")]
    public int? TechFoulCount { get; set; }

    /// <summary>
    /// Gets or Sets TeleopCommunity
    /// </summary>

    [JsonPropertyName("teleopCommunity")]
    public MatchScoreBreakdown2023AllianceAutoCommunity? TeleopCommunity { get; set; }

    /// <summary>
    /// Gets or Sets TeleopGamePieceCount
    /// </summary>

    [JsonPropertyName("teleopGamePieceCount")]
    public int? TeleopGamePieceCount { get; set; }

    /// <summary>
    /// Gets or Sets TeleopGamePiecePoints
    /// </summary>

    [JsonPropertyName("teleopGamePiecePoints")]
    public int? TeleopGamePiecePoints { get; set; }

    /// <summary>
    /// Gets or Sets TeleopPoints
    /// </summary>

    [JsonPropertyName("teleopPoints")]
    public int? TeleopPoints { get; set; }

    /// <summary>
    /// Gets or Sets TotalChargeStationPoints
    /// </summary>

    [JsonPropertyName("totalChargeStationPoints")]
    public int? TotalChargeStationPoints { get; set; }

    /// <summary>
    /// Gets or Sets TotalPoints
    /// </summary>

    [JsonPropertyName("totalPoints")]
    public int? TotalPoints { get; set; }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public string ToJson()
    {
        return JsonSerializer.Serialize(this);
    }
}

